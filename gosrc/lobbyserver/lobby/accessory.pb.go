// Code generated by protoc-gen-go. DO NOT EDIT.
// source: accessory.proto

/*
Package lobby is a generated protocol buffer package.

It is generated from these files:
	accessory.proto

It has these top-level messages:
	LobbyMessage
	MsgCreateRoomReq
	UserProfile
	RoomInfo
	MsgCreateRoomRsp
	MsgReleaseRoomReq
	MsgReleaseRoomRsp
	MsgChat
	MsgLoadUnreadChatReply
	MsgSetReadChat
	RoomIDList
	MsgLoadRoomListRsp
	MsgUpdateUserInfo
	RoomCost
	MsgRequestRoomInfo
	MsgRequestRoomInfoRsp
	MsgUpdateRoomState
	MsgUpdateRoomList
	MsgRequestUserScoreInfo
	MsgRequestUserScoreInfoRsp
	MsgLoadUserHeadIconURI
	MsgHeadIconInfo
	MsgLoadUserHeadIconURIReply
	MsgUpdateUserDiamond
	MsgAccReplayRoom
	MsgAccLoadReplayRoomsReply
	MsgAccLoadReplayRecord
	MsgUserInfo
	UserInfo
	MsgLoginReply
	ClientInfo
	MsgRegisterReply
	MsgQuicklyLoginReply
	MsgWebsocketConnectReply
	MsgReplayPlayerInfo
	MsgReplayPlayerScoreSummary
	MsgReplayRecordSummary
	MsgReplayRoom
	MailAttachments
	MsgMail
	MsgLoadMail
*/
package lobby

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgError int32

const (
	MsgError_ErrSuccess                       MsgError = 0
	MsgError_ErrDecode                        MsgError = 1
	MsgError_ErrEncode                        MsgError = 2
	MsgError_ErrRoomExist                     MsgError = 3
	MsgError_ErrNoRoomConfig                  MsgError = 4
	MsgError_ErrServerIsFull                  MsgError = 5
	MsgError_ErrDecodeRoomConfig              MsgError = 6
	MsgError_ErrRoomNotExist                  MsgError = 7
	MsgError_ErrDatabase                      MsgError = 8
	MsgError_ErrRequestGameServerTimeOut      MsgError = 9
	MsgError_ErrWaitGameServerSN              MsgError = 10
	MsgError_ErrRoomIDIsEmpty                 MsgError = 11
	MsgError_ErrNotRoomCreater                MsgError = 12
	MsgError_ErrGameIsPlaying                 MsgError = 13
	MsgError_ErrTokenIsEmpty                  MsgError = 14
	MsgError_ErrUserIdIsEmpty                 MsgError = 15
	MsgError_ErrRoomNumberIsEmpty             MsgError = 16
	MsgError_ErrRoomNumberNotExist            MsgError = 17
	MsgError_ErrGameServerIDNotExist          MsgError = 18
	MsgError_ErrRoomCountIsOutOfLimit         MsgError = 19
	MsgError_ErrRequestInvalidParam           MsgError = 20
	MsgError_ErrTakeoffDiamondFailedNotEnough MsgError = 21
	MsgError_ErrTakeoffDiamondFailedIO        MsgError = 22
	MsgError_ErrTakeoffDiamondFailedRepeat    MsgError = 23
	MsgError_ErrGameServerUnsupportRoomType   MsgError = 24
	MsgError_ErrGameServerRoomExist           MsgError = 25
	MsgError_ErrGameServerNoRoomConfig        MsgError = 26
	MsgError_ErrGameServerDecodeRoomConfig    MsgError = 27
	MsgError_ErrGameServerRoomNotExist        MsgError = 28
	MsgError_ErrUserInOtherRoom               MsgError = 29
	MsgError_ErrRoomIsFull                    MsgError = 30
	MsgError_ErrUserInBlacklist               MsgError = 31
	MsgError_ErrClubIDIsEmtpy                 MsgError = 32
	MsgError_ErrRoomPriceCfgNotExist          MsgError = 33
	MsgError_ErrUserCreateRoomLock            MsgError = 34
	MsgError_ErrGenerateRoomNumber            MsgError = 35
	MsgError_ErrIsNeedUpdate                  MsgError = 36
)

var MsgError_name = map[int32]string{
	0:  "ErrSuccess",
	1:  "ErrDecode",
	2:  "ErrEncode",
	3:  "ErrRoomExist",
	4:  "ErrNoRoomConfig",
	5:  "ErrServerIsFull",
	6:  "ErrDecodeRoomConfig",
	7:  "ErrRoomNotExist",
	8:  "ErrDatabase",
	9:  "ErrRequestGameServerTimeOut",
	10: "ErrWaitGameServerSN",
	11: "ErrRoomIDIsEmpty",
	12: "ErrNotRoomCreater",
	13: "ErrGameIsPlaying",
	14: "ErrTokenIsEmpty",
	15: "ErrUserIdIsEmpty",
	16: "ErrRoomNumberIsEmpty",
	17: "ErrRoomNumberNotExist",
	18: "ErrGameServerIDNotExist",
	19: "ErrRoomCountIsOutOfLimit",
	20: "ErrRequestInvalidParam",
	21: "ErrTakeoffDiamondFailedNotEnough",
	22: "ErrTakeoffDiamondFailedIO",
	23: "ErrTakeoffDiamondFailedRepeat",
	24: "ErrGameServerUnsupportRoomType",
	25: "ErrGameServerRoomExist",
	26: "ErrGameServerNoRoomConfig",
	27: "ErrGameServerDecodeRoomConfig",
	28: "ErrGameServerRoomNotExist",
	29: "ErrUserInOtherRoom",
	30: "ErrRoomIsFull",
	31: "ErrUserInBlacklist",
	32: "ErrClubIDIsEmtpy",
	33: "ErrRoomPriceCfgNotExist",
	34: "ErrUserCreateRoomLock",
	35: "ErrGenerateRoomNumber",
	36: "ErrIsNeedUpdate",
}
var MsgError_value = map[string]int32{
	"ErrSuccess":                       0,
	"ErrDecode":                        1,
	"ErrEncode":                        2,
	"ErrRoomExist":                     3,
	"ErrNoRoomConfig":                  4,
	"ErrServerIsFull":                  5,
	"ErrDecodeRoomConfig":              6,
	"ErrRoomNotExist":                  7,
	"ErrDatabase":                      8,
	"ErrRequestGameServerTimeOut":      9,
	"ErrWaitGameServerSN":              10,
	"ErrRoomIDIsEmpty":                 11,
	"ErrNotRoomCreater":                12,
	"ErrGameIsPlaying":                 13,
	"ErrTokenIsEmpty":                  14,
	"ErrUserIdIsEmpty":                 15,
	"ErrRoomNumberIsEmpty":             16,
	"ErrRoomNumberNotExist":            17,
	"ErrGameServerIDNotExist":          18,
	"ErrRoomCountIsOutOfLimit":         19,
	"ErrRequestInvalidParam":           20,
	"ErrTakeoffDiamondFailedNotEnough": 21,
	"ErrTakeoffDiamondFailedIO":        22,
	"ErrTakeoffDiamondFailedRepeat":    23,
	"ErrGameServerUnsupportRoomType":   24,
	"ErrGameServerRoomExist":           25,
	"ErrGameServerNoRoomConfig":        26,
	"ErrGameServerDecodeRoomConfig":    27,
	"ErrGameServerRoomNotExist":        28,
	"ErrUserInOtherRoom":               29,
	"ErrRoomIsFull":                    30,
	"ErrUserInBlacklist":               31,
	"ErrClubIDIsEmtpy":                 32,
	"ErrRoomPriceCfgNotExist":          33,
	"ErrUserCreateRoomLock":            34,
	"ErrGenerateRoomNumber":            35,
	"ErrIsNeedUpdate":                  36,
}

func (x MsgError) Enum() *MsgError {
	p := new(MsgError)
	*p = x
	return p
}
func (x MsgError) String() string {
	return proto.EnumName(MsgError_name, int32(x))
}
func (x *MsgError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgError_value, data, "MsgError")
	if err != nil {
		return err
	}
	*x = MsgError(value)
	return nil
}
func (MsgError) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MessageCode int32

const (
	MessageCode_OPInvalid       MessageCode = 0
	MessageCode_OPConnectReply  MessageCode = 1
	MessageCode_OPChat          MessageCode = 2
	MessageCode_OPUpdateDiamond MessageCode = 3
	MessageCode_OPMail          MessageCode = 4
)

var MessageCode_name = map[int32]string{
	0: "OPInvalid",
	1: "OPConnectReply",
	2: "OPChat",
	3: "OPUpdateDiamond",
	4: "OPMail",
}
var MessageCode_value = map[string]int32{
	"OPInvalid":       0,
	"OPConnectReply":  1,
	"OPChat":          2,
	"OPUpdateDiamond": 3,
	"OPMail":          4,
}

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}
func (x MessageCode) String() string {
	return proto.EnumName(MessageCode_name, int32(x))
}
func (x *MessageCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageCode_value, data, "MessageCode")
	if err != nil {
		return err
	}
	*x = MessageCode(value)
	return nil
}
func (MessageCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 房间类型
type RoomType int32

const (
	// 大丰麻将
	RoomType_DafengMJ RoomType = 1
	// 贯蛋
	RoomType_GuanDang RoomType = 2
	// 东台
	RoomType_DongTaiMJ RoomType = 3
	// 盐城
	RoomType_YanChengMJ RoomType = 4
	// 韶关
	RoomType_ShaoGuanMJ RoomType = 5
	// 宁安
	RoomType_NingAnMJ RoomType = 6
	// 新疆杠后
	RoomType_XinJiangGH RoomType = 7
	// 大丰关张
	RoomType_DafengGZ RoomType = 8
	// 大丰7王523
	RoomType_Dafeng7w523 RoomType = 9
	// 牛牛
	RoomType_NiuNiu RoomType = 10
	// 斗地主
	RoomType_DDZ RoomType = 11
	// 新疆血流
	RoomType_XueLiuMJ RoomType = 12
	// 兰州麻将
	RoomType_LanZhouMJ RoomType = 13
	// 老兰州
	RoomType_LLanZouMJ RoomType = 14
	// 张掖
	RoomType_ZhangYeMJ RoomType = 15
)

var RoomType_name = map[int32]string{
	1:  "DafengMJ",
	2:  "GuanDang",
	3:  "DongTaiMJ",
	4:  "YanChengMJ",
	5:  "ShaoGuanMJ",
	6:  "NingAnMJ",
	7:  "XinJiangGH",
	8:  "DafengGZ",
	9:  "Dafeng7w523",
	10: "NiuNiu",
	11: "DDZ",
	12: "XueLiuMJ",
	13: "LanZhouMJ",
	14: "LLanZouMJ",
	15: "ZhangYeMJ",
}
var RoomType_value = map[string]int32{
	"DafengMJ":    1,
	"GuanDang":    2,
	"DongTaiMJ":   3,
	"YanChengMJ":  4,
	"ShaoGuanMJ":  5,
	"NingAnMJ":    6,
	"XinJiangGH":  7,
	"DafengGZ":    8,
	"Dafeng7w523": 9,
	"NiuNiu":      10,
	"DDZ":         11,
	"XueLiuMJ":    12,
	"LanZhouMJ":   13,
	"LLanZouMJ":   14,
	"ZhangYeMJ":   15,
}

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}
func (x RoomType) String() string {
	return proto.EnumName(RoomType_name, int32(x))
}
func (x *RoomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RoomType_value, data, "RoomType")
	if err != nil {
		return err
	}
	*x = RoomType(value)
	return nil
}
func (RoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 开房方式，如立即开局、代人开房
type OpenRoomType int32

const (
	// 创建立即进入
	OpenRoomType_CreateAndEnter OpenRoomType = 1
	// 代别人开房
	OpenRoomType_CreateForOther OpenRoomType = 2
)

var OpenRoomType_name = map[int32]string{
	1: "CreateAndEnter",
	2: "CreateForOther",
}
var OpenRoomType_value = map[string]int32{
	"CreateAndEnter": 1,
	"CreateForOther": 2,
}

func (x OpenRoomType) Enum() *OpenRoomType {
	p := new(OpenRoomType)
	*p = x
	return p
}
func (x OpenRoomType) String() string {
	return proto.EnumName(OpenRoomType_name, int32(x))
}
func (x *OpenRoomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OpenRoomType_value, data, "OpenRoomType")
	if err != nil {
		return err
	}
	*x = OpenRoomType(value)
	return nil
}
func (OpenRoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 聊天信息中的数据类型
type ChatDataType int32

const (
	ChatDataType_Text    ChatDataType = 0
	ChatDataType_Emoji   ChatDataType = 1
	ChatDataType_Voice   ChatDataType = 2
	ChatDataType_Buildin ChatDataType = 3
)

var ChatDataType_name = map[int32]string{
	0: "Text",
	1: "Emoji",
	2: "Voice",
	3: "Buildin",
}
var ChatDataType_value = map[string]int32{
	"Text":    0,
	"Emoji":   1,
	"Voice":   2,
	"Buildin": 3,
}

func (x ChatDataType) Enum() *ChatDataType {
	p := new(ChatDataType)
	*p = x
	return p
}
func (x ChatDataType) String() string {
	return proto.EnumName(ChatDataType_name, int32(x))
}
func (x *ChatDataType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatDataType_value, data, "ChatDataType")
	if err != nil {
		return err
	}
	*x = ChatDataType(value)
	return nil
}
func (ChatDataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 聊天消息的范围
// 单播，房间内，游戏服务器内，全游戏（游戏一般会有多个服务器）
// 目前只需要实现单播，和房间内即可
type ChatScopeType int32

const (
	ChatScopeType_UniCast      ChatScopeType = 0
	ChatScopeType_InRoom       ChatScopeType = 1
	ChatScopeType_InServer     ChatScopeType = 2
	ChatScopeType_InAllServers ChatScopeType = 3
)

var ChatScopeType_name = map[int32]string{
	0: "UniCast",
	1: "InRoom",
	2: "InServer",
	3: "InAllServers",
}
var ChatScopeType_value = map[string]int32{
	"UniCast":      0,
	"InRoom":       1,
	"InServer":     2,
	"InAllServers": 3,
}

func (x ChatScopeType) Enum() *ChatScopeType {
	p := new(ChatScopeType)
	*p = x
	return p
}
func (x ChatScopeType) String() string {
	return proto.EnumName(ChatScopeType_name, int32(x))
}
func (x *ChatScopeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatScopeType_value, data, "ChatScopeType")
	if err != nil {
		return err
	}
	*x = ChatScopeType(value)
	return nil
}
func (ChatScopeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type LoginState int32

const (
	LoginState_Faild           LoginState = 0
	LoginState_Success         LoginState = 1
	LoginState_UserInBlacklist LoginState = 2
	LoginState_ParseTokenError LoginState = 3
)

var LoginState_name = map[int32]string{
	0: "Faild",
	1: "Success",
	2: "UserInBlacklist",
	3: "ParseTokenError",
}
var LoginState_value = map[string]int32{
	"Faild":           0,
	"Success":         1,
	"UserInBlacklist": 2,
	"ParseTokenError": 3,
}

func (x LoginState) Enum() *LoginState {
	p := new(LoginState)
	*p = x
	return p
}
func (x LoginState) String() string {
	return proto.EnumName(LoginState_name, int32(x))
}
func (x *LoginState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LoginState_value, data, "LoginState")
	if err != nil {
		return err
	}
	*x = LoginState(value)
	return nil
}
func (LoginState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ActivityType int32

const (
	ActivityType_Email ActivityType = 1
)

var ActivityType_name = map[int32]string{
	1: "Email",
}
var ActivityType_value = map[string]int32{
	"Email": 1,
}

func (x ActivityType) Enum() *ActivityType {
	p := new(ActivityType)
	*p = x
	return p
}
func (x ActivityType) String() string {
	return proto.EnumName(ActivityType_name, int32(x))
}
func (x *ActivityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActivityType_value, data, "ActivityType")
	if err != nil {
		return err
	}
	*x = ActivityType(value)
	return nil
}
func (ActivityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type LoginError int32

const (
	LoginError_ErrLoginSuccess             LoginError = 0
	LoginError_ErrParamWechatCodeIsEmpty   LoginError = 1
	LoginError_ErrLoadWechatUserInfoFailed LoginError = 2
	LoginError_ErrParamAccountIsEmpty      LoginError = 3
	LoginError_ErrParamPasswordIsEmpty     LoginError = 4
	LoginError_ErrAccountNotExist          LoginError = 5
	LoginError_ErrAccountNotSetPassword    LoginError = 6
	LoginError_ErrPasswordNotMatch         LoginError = 7
)

var LoginError_name = map[int32]string{
	0: "ErrLoginSuccess",
	1: "ErrParamWechatCodeIsEmpty",
	2: "ErrLoadWechatUserInfoFailed",
	3: "ErrParamAccountIsEmpty",
	4: "ErrParamPasswordIsEmpty",
	5: "ErrAccountNotExist",
	6: "ErrAccountNotSetPassword",
	7: "ErrPasswordNotMatch",
}
var LoginError_value = map[string]int32{
	"ErrLoginSuccess":             0,
	"ErrParamWechatCodeIsEmpty":   1,
	"ErrLoadWechatUserInfoFailed": 2,
	"ErrParamAccountIsEmpty":      3,
	"ErrParamPasswordIsEmpty":     4,
	"ErrAccountNotExist":          5,
	"ErrAccountNotSetPassword":    6,
	"ErrPasswordNotMatch":         7,
}

func (x LoginError) Enum() *LoginError {
	p := new(LoginError)
	*p = x
	return p
}
func (x LoginError) String() string {
	return proto.EnumName(LoginError_name, int32(x))
}
func (x *LoginError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LoginError_value, data, "LoginError")
	if err != nil {
		return err
	}
	*x = LoginError(value)
	return nil
}
func (LoginError) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type RegisterError int32

const (
	RegisterError_ErrRegisterSuccess     RegisterError = 0
	RegisterError_ErrAccountIsEmpty      RegisterError = 1
	RegisterError_ErrPasswordIsEmpty     RegisterError = 2
	RegisterError_ErrAccountExist        RegisterError = 3
	RegisterError_ErrWriteDatabaseFailed RegisterError = 4
)

var RegisterError_name = map[int32]string{
	0: "ErrRegisterSuccess",
	1: "ErrAccountIsEmpty",
	2: "ErrPasswordIsEmpty",
	3: "ErrAccountExist",
	4: "ErrWriteDatabaseFailed",
}
var RegisterError_value = map[string]int32{
	"ErrRegisterSuccess":     0,
	"ErrAccountIsEmpty":      1,
	"ErrPasswordIsEmpty":     2,
	"ErrAccountExist":        3,
	"ErrWriteDatabaseFailed": 4,
}

func (x RegisterError) Enum() *RegisterError {
	p := new(RegisterError)
	*p = x
	return p
}
func (x RegisterError) String() string {
	return proto.EnumName(RegisterError_name, int32(x))
}
func (x *RegisterError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegisterError_value, data, "RegisterError")
	if err != nil {
		return err
	}
	*x = RegisterError(value)
	return nil
}
func (RegisterError) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type WebsocketConnectError int32

const (
	WebsocketConnectError_ConnectSuccess   WebsocketConnectError = 0
	WebsocketConnectError_ParseTokenFailed WebsocketConnectError = 1
)

var WebsocketConnectError_name = map[int32]string{
	0: "ConnectSuccess",
	1: "ParseTokenFailed",
}
var WebsocketConnectError_value = map[string]int32{
	"ConnectSuccess":   0,
	"ParseTokenFailed": 1,
}

func (x WebsocketConnectError) Enum() *WebsocketConnectError {
	p := new(WebsocketConnectError)
	*p = x
	return p
}
func (x WebsocketConnectError) String() string {
	return proto.EnumName(WebsocketConnectError_name, int32(x))
}
func (x *WebsocketConnectError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebsocketConnectError_value, data, "WebsocketConnectError")
	if err != nil {
		return err
	}
	*x = WebsocketConnectError(value)
	return nil
}
func (WebsocketConnectError) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type MailAttachmentType int32

const (
	MailAttachmentType_Diamond MailAttachmentType = 1
)

var MailAttachmentType_name = map[int32]string{
	1: "Diamond",
}
var MailAttachmentType_value = map[string]int32{
	"Diamond": 1,
}

func (x MailAttachmentType) Enum() *MailAttachmentType {
	p := new(MailAttachmentType)
	*p = x
	return p
}
func (x MailAttachmentType) String() string {
	return proto.EnumName(MailAttachmentType_name, int32(x))
}
func (x *MailAttachmentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MailAttachmentType_value, data, "MailAttachmentType")
	if err != nil {
		return err
	}
	*x = MailAttachmentType(value)
	return nil
}
func (MailAttachmentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

// 消息包装，把其他消息体格式化为byte array，
// 加上消息码构成一个AccessoryMessage，便于解析
type LobbyMessage struct {
	Ops              *int32 `protobuf:"varint,1,req,name=Ops" json:"Ops,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LobbyMessage) Reset()                    { *m = LobbyMessage{} }
func (m *LobbyMessage) String() string            { return proto.CompactTextString(m) }
func (*LobbyMessage) ProtoMessage()               {}
func (*LobbyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LobbyMessage) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *LobbyMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 玩家创建房间
type MsgCreateRoomReq struct {
	Config           *string `protobuf:"bytes,1,req,name=config" json:"config,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgCreateRoomReq) Reset()                    { *m = MsgCreateRoomReq{} }
func (m *MsgCreateRoomReq) String() string            { return proto.CompactTextString(m) }
func (*MsgCreateRoomReq) ProtoMessage()               {}
func (*MsgCreateRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MsgCreateRoomReq) GetConfig() string {
	if m != nil && m.Config != nil {
		return *m.Config
	}
	return ""
}

// 用户信息
type UserProfile struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	UserName         *string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	NickName         *string `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserProfile) Reset()                    { *m = UserProfile{} }
func (m *UserProfile) String() string            { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()               {}
func (*UserProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserProfile) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *UserProfile) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *UserProfile) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

// 玩家房间信息
type RoomInfo struct {
	RoomID           *string        `protobuf:"bytes,1,req,name=roomID" json:"roomID,omitempty"`
	RoomNumber       *string        `protobuf:"bytes,2,req,name=roomNumber" json:"roomNumber,omitempty"`
	GameServerID     *string        `protobuf:"bytes,3,req,name=gameServerID" json:"gameServerID,omitempty"`
	State            *int32         `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	Config           *string        `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`
	TimeStamp        *string        `protobuf:"bytes,6,opt,name=timeStamp" json:"timeStamp,omitempty"`
	Users            []*UserProfile `protobuf:"bytes,7,rep,name=users" json:"users,omitempty"`
	HandStartted     *int32         `protobuf:"varint,8,opt,name=handStartted" json:"handStartted,omitempty"`
	LastActiveTime   *uint32        `protobuf:"varint,9,opt,name=lastActiveTime" json:"lastActiveTime,omitempty"`
	PropCfg          *string        `protobuf:"bytes,10,opt,name=propCfg" json:"propCfg,omitempty"`
	ModuleCfg        *string        `protobuf:"bytes,11,opt,name=moduleCfg" json:"moduleCfg,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RoomInfo) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *RoomInfo) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

func (m *RoomInfo) GetGameServerID() string {
	if m != nil && m.GameServerID != nil {
		return *m.GameServerID
	}
	return ""
}

func (m *RoomInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *RoomInfo) GetConfig() string {
	if m != nil && m.Config != nil {
		return *m.Config
	}
	return ""
}

func (m *RoomInfo) GetTimeStamp() string {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return ""
}

func (m *RoomInfo) GetUsers() []*UserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *RoomInfo) GetHandStartted() int32 {
	if m != nil && m.HandStartted != nil {
		return *m.HandStartted
	}
	return 0
}

func (m *RoomInfo) GetLastActiveTime() uint32 {
	if m != nil && m.LastActiveTime != nil {
		return *m.LastActiveTime
	}
	return 0
}

func (m *RoomInfo) GetPropCfg() string {
	if m != nil && m.PropCfg != nil {
		return *m.PropCfg
	}
	return ""
}

func (m *RoomInfo) GetModuleCfg() string {
	if m != nil && m.ModuleCfg != nil {
		return *m.ModuleCfg
	}
	return ""
}

// 玩家创建房间返回信息
type MsgCreateRoomRsp struct {
	Result           *int32    `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomInfo         *RoomInfo `protobuf:"bytes,2,opt,name=roomInfo" json:"roomInfo,omitempty"`
	RetMsg           *string   `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	Diamond          *int32    `protobuf:"varint,4,opt,name=diamond" json:"diamond,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgCreateRoomRsp) Reset()                    { *m = MsgCreateRoomRsp{} }
func (m *MsgCreateRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgCreateRoomRsp) ProtoMessage()               {}
func (*MsgCreateRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MsgCreateRoomRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgCreateRoomRsp) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MsgCreateRoomRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *MsgCreateRoomRsp) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

// 解散玩家创建的房间
type MsgReleaseRoomReq struct {
	RoomID           *string `protobuf:"bytes,1,req,name=roomID" json:"roomID,omitempty"`
	RoomType         *int32  `protobuf:"varint,2,opt,name=roomType" json:"roomType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReleaseRoomReq) Reset()                    { *m = MsgReleaseRoomReq{} }
func (m *MsgReleaseRoomReq) String() string            { return proto.CompactTextString(m) }
func (*MsgReleaseRoomReq) ProtoMessage()               {}
func (*MsgReleaseRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MsgReleaseRoomReq) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *MsgReleaseRoomReq) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

// 解散玩家创建的房间返回信息
type MsgReleaseRoomRsp struct {
	Result           *int32  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomID           *string `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	RetMsg           *string `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReleaseRoomRsp) Reset()                    { *m = MsgReleaseRoomRsp{} }
func (m *MsgReleaseRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgReleaseRoomRsp) ProtoMessage()               {}
func (*MsgReleaseRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MsgReleaseRoomRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgReleaseRoomRsp) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *MsgReleaseRoomRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 聊天消息
type MsgChat struct {
	Scope            *int32  `protobuf:"varint,1,req,name=scope" json:"scope,omitempty"`
	From             *string `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	To               *string `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	DataType         *int32  `protobuf:"varint,4,req,name=dataType" json:"dataType,omitempty"`
	Data             []byte  `protobuf:"bytes,5,req,name=data" json:"data,omitempty"`
	Id               *string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgChat) Reset()                    { *m = MsgChat{} }
func (m *MsgChat) String() string            { return proto.CompactTextString(m) }
func (*MsgChat) ProtoMessage()               {}
func (*MsgChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MsgChat) GetScope() int32 {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return 0
}

func (m *MsgChat) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *MsgChat) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *MsgChat) GetDataType() int32 {
	if m != nil && m.DataType != nil {
		return *m.DataType
	}
	return 0
}

func (m *MsgChat) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgChat) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

// 拉取未读的聊天消息
type MsgLoadUnreadChatReply struct {
	Msgs             []*MsgChat `protobuf:"bytes,1,rep,name=msgs" json:"msgs,omitempty"`
	Cursor           *int32     `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *MsgLoadUnreadChatReply) Reset()                    { *m = MsgLoadUnreadChatReply{} }
func (m *MsgLoadUnreadChatReply) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadUnreadChatReply) ProtoMessage()               {}
func (*MsgLoadUnreadChatReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MsgLoadUnreadChatReply) GetMsgs() []*MsgChat {
	if m != nil {
		return m.Msgs
	}
	return nil
}

func (m *MsgLoadUnreadChatReply) GetCursor() int32 {
	if m != nil && m.Cursor != nil {
		return *m.Cursor
	}
	return 0
}

// 设置消息已读
type MsgSetReadChat struct {
	Ids              []int32 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgSetReadChat) Reset()                    { *m = MsgSetReadChat{} }
func (m *MsgSetReadChat) String() string            { return proto.CompactTextString(m) }
func (*MsgSetReadChat) ProtoMessage()               {}
func (*MsgSetReadChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MsgSetReadChat) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

// 房间列表，主要用于把用户的房间列表保存到redis上
type RoomIDList struct {
	RoomIDs          []string `protobuf:"bytes,1,rep,name=roomIDs" json:"roomIDs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RoomIDList) Reset()                    { *m = RoomIDList{} }
func (m *RoomIDList) String() string            { return proto.CompactTextString(m) }
func (*RoomIDList) ProtoMessage()               {}
func (*RoomIDList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RoomIDList) GetRoomIDs() []string {
	if m != nil {
		return m.RoomIDs
	}
	return nil
}

// 拉取房间列表返回
type MsgLoadRoomListRsp struct {
	Result           *int32      `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomInfos        []*RoomInfo `protobuf:"bytes,2,rep,name=roomInfos" json:"roomInfos,omitempty"`
	RetMsg           *string     `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgLoadRoomListRsp) Reset()                    { *m = MsgLoadRoomListRsp{} }
func (m *MsgLoadRoomListRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadRoomListRsp) ProtoMessage()               {}
func (*MsgLoadRoomListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MsgLoadRoomListRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgLoadRoomListRsp) GetRoomInfos() []*RoomInfo {
	if m != nil {
		return m.RoomInfos
	}
	return nil
}

func (m *MsgLoadRoomListRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 更新用户信息，包括定位信息等
type MsgUpdateUserInfo struct {
	Location         *string `protobuf:"bytes,1,req,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgUpdateUserInfo) Reset()                    { *m = MsgUpdateUserInfo{} }
func (m *MsgUpdateUserInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateUserInfo) ProtoMessage()               {}
func (*MsgUpdateUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MsgUpdateUserInfo) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

type RoomCost struct {
	HandNum          *uint32 `protobuf:"varint,1,req,name=handNum" json:"handNum,omitempty"`
	Pay              *uint32 `protobuf:"varint,2,req,name=pay" json:"pay,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoomCost) Reset()                    { *m = RoomCost{} }
func (m *RoomCost) String() string            { return proto.CompactTextString(m) }
func (*RoomCost) ProtoMessage()               {}
func (*RoomCost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RoomCost) GetHandNum() uint32 {
	if m != nil && m.HandNum != nil {
		return *m.HandNum
	}
	return 0
}

func (m *RoomCost) GetPay() uint32 {
	if m != nil && m.Pay != nil {
		return *m.Pay
	}
	return 0
}

type MsgRequestRoomInfo struct {
	RoomNumber       *string `protobuf:"bytes,1,req,name=roomNumber" json:"roomNumber,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRequestRoomInfo) Reset()                    { *m = MsgRequestRoomInfo{} }
func (m *MsgRequestRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestRoomInfo) ProtoMessage()               {}
func (*MsgRequestRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MsgRequestRoomInfo) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

type MsgRequestRoomInfoRsp struct {
	Result           *int32    `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomInfo         *RoomInfo `protobuf:"bytes,2,opt,name=roomInfo" json:"roomInfo,omitempty"`
	RetMsg           *string   `protobuf:"bytes,7,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgRequestRoomInfoRsp) Reset()                    { *m = MsgRequestRoomInfoRsp{} }
func (m *MsgRequestRoomInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestRoomInfoRsp) ProtoMessage()               {}
func (*MsgRequestRoomInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *MsgRequestRoomInfoRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgRequestRoomInfoRsp) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MsgRequestRoomInfoRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 服务器向客户端更新房间状态
type MsgUpdateRoomState struct {
	State            *int32         `protobuf:"varint,1,req,name=state" json:"state,omitempty"`
	RoomID           *string        `protobuf:"bytes,2,req,name=roomID" json:"roomID,omitempty"`
	Users            []*UserProfile `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
	HandStartted     *int32         `protobuf:"varint,4,req,name=handStartted" json:"handStartted,omitempty"`
	LastActiveTime   *uint32        `protobuf:"varint,5,req,name=lastActiveTime" json:"lastActiveTime,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *MsgUpdateRoomState) Reset()                    { *m = MsgUpdateRoomState{} }
func (m *MsgUpdateRoomState) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateRoomState) ProtoMessage()               {}
func (*MsgUpdateRoomState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MsgUpdateRoomState) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *MsgUpdateRoomState) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *MsgUpdateRoomState) GetUsers() []*UserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *MsgUpdateRoomState) GetHandStartted() int32 {
	if m != nil && m.HandStartted != nil {
		return *m.HandStartted
	}
	return 0
}

func (m *MsgUpdateRoomState) GetLastActiveTime() uint32 {
	if m != nil && m.LastActiveTime != nil {
		return *m.LastActiveTime
	}
	return 0
}

// 服务器向客户端更新房间列表
type MsgUpdateRoomList struct {
	RoomInfos        []*RoomInfo `protobuf:"bytes,1,rep,name=roomInfos" json:"roomInfos,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgUpdateRoomList) Reset()                    { *m = MsgUpdateRoomList{} }
func (m *MsgUpdateRoomList) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateRoomList) ProtoMessage()               {}
func (*MsgUpdateRoomList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MsgUpdateRoomList) GetRoomInfos() []*RoomInfo {
	if m != nil {
		return m.RoomInfos
	}
	return nil
}

// 个人信息 局数得分
type MsgRequestUserScoreInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	GameID           *string `protobuf:"bytes,2,opt,name=gameID" json:"gameID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRequestUserScoreInfo) Reset()                    { *m = MsgRequestUserScoreInfo{} }
func (m *MsgRequestUserScoreInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestUserScoreInfo) ProtoMessage()               {}
func (*MsgRequestUserScoreInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *MsgRequestUserScoreInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgRequestUserScoreInfo) GetGameID() string {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return ""
}

type MsgRequestUserScoreInfoRsp struct {
	MaxWinScore      *int32  `protobuf:"varint,1,req,name=maxWinScore" json:"maxWinScore,omitempty"`
	CustomCount      *int32  `protobuf:"varint,2,req,name=customCount" json:"customCount,omitempty"`
	MaxWinMoney      *int32  `protobuf:"varint,3,opt,name=maxWinMoney" json:"maxWinMoney,omitempty"`
	CoinCount        *int32  `protobuf:"varint,4,opt,name=coinCount" json:"coinCount,omitempty"`
	RetMsg           *string `protobuf:"bytes,7,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRequestUserScoreInfoRsp) Reset()                    { *m = MsgRequestUserScoreInfoRsp{} }
func (m *MsgRequestUserScoreInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestUserScoreInfoRsp) ProtoMessage()               {}
func (*MsgRequestUserScoreInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *MsgRequestUserScoreInfoRsp) GetMaxWinScore() int32 {
	if m != nil && m.MaxWinScore != nil {
		return *m.MaxWinScore
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetCustomCount() int32 {
	if m != nil && m.CustomCount != nil {
		return *m.CustomCount
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetMaxWinMoney() int32 {
	if m != nil && m.MaxWinMoney != nil {
		return *m.MaxWinMoney
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetCoinCount() int32 {
	if m != nil && m.CoinCount != nil {
		return *m.CoinCount
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 加载多个用户头像
type MsgLoadUserHeadIconURI struct {
	UserIDs          []string `protobuf:"bytes,1,rep,name=userIDs" json:"userIDs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLoadUserHeadIconURI) Reset()                    { *m = MsgLoadUserHeadIconURI{} }
func (m *MsgLoadUserHeadIconURI) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadUserHeadIconURI) ProtoMessage()               {}
func (*MsgLoadUserHeadIconURI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *MsgLoadUserHeadIconURI) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

// 用户的头像信息
type MsgHeadIconInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	Sex              *uint32 `protobuf:"varint,2,opt,name=sex" json:"sex,omitempty"`
	HeadIconURI      *string `protobuf:"bytes,3,opt,name=headIconURI" json:"headIconURI,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgHeadIconInfo) Reset()                    { *m = MsgHeadIconInfo{} }
func (m *MsgHeadIconInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgHeadIconInfo) ProtoMessage()               {}
func (*MsgHeadIconInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *MsgHeadIconInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgHeadIconInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgHeadIconInfo) GetHeadIconURI() string {
	if m != nil && m.HeadIconURI != nil {
		return *m.HeadIconURI
	}
	return ""
}

// 用户头像信息列表
type MsgLoadUserHeadIconURIReply struct {
	Result           *int32             `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	HeadIconInfos    []*MsgHeadIconInfo `protobuf:"bytes,2,rep,name=headIconInfos" json:"headIconInfos,omitempty"`
	RetMsg           *string            `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MsgLoadUserHeadIconURIReply) Reset()                    { *m = MsgLoadUserHeadIconURIReply{} }
func (m *MsgLoadUserHeadIconURIReply) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadUserHeadIconURIReply) ProtoMessage()               {}
func (*MsgLoadUserHeadIconURIReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *MsgLoadUserHeadIconURIReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgLoadUserHeadIconURIReply) GetHeadIconInfos() []*MsgHeadIconInfo {
	if m != nil {
		return m.HeadIconInfos
	}
	return nil
}

func (m *MsgLoadUserHeadIconURIReply) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 更新用户的钱包
type MsgUpdateUserDiamond struct {
	Diamond          *uint64 `protobuf:"varint,1,req,name=diamond" json:"diamond,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgUpdateUserDiamond) Reset()                    { *m = MsgUpdateUserDiamond{} }
func (m *MsgUpdateUserDiamond) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateUserDiamond) ProtoMessage()               {}
func (*MsgUpdateUserDiamond) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *MsgUpdateUserDiamond) GetDiamond() uint64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

// 回播房间信息
type MsgAccReplayRoom struct {
	ReplayRoomBytes  []byte `protobuf:"bytes,1,req,name=replayRoomBytes" json:"replayRoomBytes,omitempty"`
	RecordRoomType   *int32 `protobuf:"varint,2,req,name=recordRoomType" json:"recordRoomType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgAccReplayRoom) Reset()                    { *m = MsgAccReplayRoom{} }
func (m *MsgAccReplayRoom) String() string            { return proto.CompactTextString(m) }
func (*MsgAccReplayRoom) ProtoMessage()               {}
func (*MsgAccReplayRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *MsgAccReplayRoom) GetReplayRoomBytes() []byte {
	if m != nil {
		return m.ReplayRoomBytes
	}
	return nil
}

func (m *MsgAccReplayRoom) GetRecordRoomType() int32 {
	if m != nil && m.RecordRoomType != nil {
		return *m.RecordRoomType
	}
	return 0
}

// 回放房间记录概要列表
type MsgAccLoadReplayRoomsReply struct {
	ReplayRooms      []*MsgAccReplayRoom `protobuf:"bytes,1,rep,name=replayRooms" json:"replayRooms,omitempty"`
	Cursor           *int32              `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
	TotalCursor      *int32              `protobuf:"varint,3,opt,name=totalCursor" json:"totalCursor,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *MsgAccLoadReplayRoomsReply) Reset()                    { *m = MsgAccLoadReplayRoomsReply{} }
func (m *MsgAccLoadReplayRoomsReply) String() string            { return proto.CompactTextString(m) }
func (*MsgAccLoadReplayRoomsReply) ProtoMessage()               {}
func (*MsgAccLoadReplayRoomsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MsgAccLoadReplayRoomsReply) GetReplayRooms() []*MsgAccReplayRoom {
	if m != nil {
		return m.ReplayRooms
	}
	return nil
}

func (m *MsgAccLoadReplayRoomsReply) GetCursor() int32 {
	if m != nil && m.Cursor != nil {
		return *m.Cursor
	}
	return 0
}

func (m *MsgAccLoadReplayRoomsReply) GetTotalCursor() int32 {
	if m != nil && m.TotalCursor != nil {
		return *m.TotalCursor
	}
	return 0
}

// 回放记录
type MsgAccLoadReplayRecord struct {
	ReplayRecordBytes []byte  `protobuf:"bytes,1,req,name=replayRecordBytes" json:"replayRecordBytes,omitempty"`
	RoomJSONConfig    *string `protobuf:"bytes,2,req,name=roomJSONConfig" json:"roomJSONConfig,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *MsgAccLoadReplayRecord) Reset()                    { *m = MsgAccLoadReplayRecord{} }
func (m *MsgAccLoadReplayRecord) String() string            { return proto.CompactTextString(m) }
func (*MsgAccLoadReplayRecord) ProtoMessage()               {}
func (*MsgAccLoadReplayRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MsgAccLoadReplayRecord) GetReplayRecordBytes() []byte {
	if m != nil {
		return m.ReplayRecordBytes
	}
	return nil
}

func (m *MsgAccLoadReplayRecord) GetRoomJSONConfig() string {
	if m != nil && m.RoomJSONConfig != nil {
		return *m.RoomJSONConfig
	}
	return ""
}

// 玩家信息
type MsgUserInfo struct {
	Uid              *string `protobuf:"bytes,1,req,name=uid" json:"uid,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Sex              *int64  `protobuf:"varint,3,req,name=sex" json:"sex,omitempty"`
	Protrait         *string `protobuf:"bytes,4,req,name=protrait" json:"protrait,omitempty"`
	Token            *string `protobuf:"bytes,5,req,name=token" json:"token,omitempty"`
	Diamond          *int64  `protobuf:"varint,6,req,name=diamond" json:"diamond,omitempty"`
	Nick             *string `protobuf:"bytes,7,req,name=nick" json:"nick,omitempty"`
	Charm            *int64  `protobuf:"varint,8,req,name=charm" json:"charm,omitempty"`
	Addr             *string `protobuf:"bytes,9,req,name=addr" json:"addr,omitempty"`
	Avatar           *string `protobuf:"bytes,10,req,name=avatar" json:"avatar,omitempty"`
	Dan              *int64  `protobuf:"varint,11,opt,name=dan" json:"dan,omitempty"`
	Gold             *int64  `protobuf:"varint,12,opt,name=gold" json:"gold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgUserInfo) Reset()                    { *m = MsgUserInfo{} }
func (m *MsgUserInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgUserInfo) ProtoMessage()               {}
func (*MsgUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *MsgUserInfo) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *MsgUserInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MsgUserInfo) GetSex() int64 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgUserInfo) GetProtrait() string {
	if m != nil && m.Protrait != nil {
		return *m.Protrait
	}
	return ""
}

func (m *MsgUserInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *MsgUserInfo) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *MsgUserInfo) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *MsgUserInfo) GetCharm() int64 {
	if m != nil && m.Charm != nil {
		return *m.Charm
	}
	return 0
}

func (m *MsgUserInfo) GetAddr() string {
	if m != nil && m.Addr != nil {
		return *m.Addr
	}
	return ""
}

func (m *MsgUserInfo) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *MsgUserInfo) GetDan() int64 {
	if m != nil && m.Dan != nil {
		return *m.Dan
	}
	return 0
}

func (m *MsgUserInfo) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

// 微信用户信息
type UserInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	OpenID           *string `protobuf:"bytes,2,opt,name=openID" json:"openID,omitempty"`
	NickName         *string `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	Sex              *uint32 `protobuf:"varint,4,opt,name=sex" json:"sex,omitempty"`
	Province         *string `protobuf:"bytes,5,opt,name=province" json:"province,omitempty"`
	City             *string `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	Country          *string `protobuf:"bytes,7,opt,name=country" json:"country,omitempty"`
	HeadImgUrl       *string `protobuf:"bytes,8,opt,name=headImgUrl" json:"headImgUrl,omitempty"`
	Phone            *string `protobuf:"bytes,9,opt,name=phone" json:"phone,omitempty"`
	Diamond          *int32  `protobuf:"varint,10,opt,name=diamond" json:"diamond,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UserInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *UserInfo) GetOpenID() string {
	if m != nil && m.OpenID != nil {
		return *m.OpenID
	}
	return ""
}

func (m *UserInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *UserInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *UserInfo) GetProvince() string {
	if m != nil && m.Province != nil {
		return *m.Province
	}
	return ""
}

func (m *UserInfo) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *UserInfo) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *UserInfo) GetHeadImgUrl() string {
	if m != nil && m.HeadImgUrl != nil {
		return *m.HeadImgUrl
	}
	return ""
}

func (m *UserInfo) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *UserInfo) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

// 微信登录返回结果
type MsgLoginReply struct {
	Result           *int32    `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Token            *string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	UserInfo         *UserInfo `protobuf:"bytes,3,opt,name=userInfo" json:"userInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgLoginReply) Reset()                    { *m = MsgLoginReply{} }
func (m *MsgLoginReply) String() string            { return proto.CompactTextString(m) }
func (*MsgLoginReply) ProtoMessage()               {}
func (*MsgLoginReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *MsgLoginReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgLoginReply) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *MsgLoginReply) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

// 客户端登录信息
type ClientInfo struct {
	QMod                   *string `protobuf:"bytes,1,opt,name=qMod" json:"qMod,omitempty"`
	ModV                   *string `protobuf:"bytes,2,opt,name=modV" json:"modV,omitempty"`
	CsVer                  *string `protobuf:"bytes,3,opt,name=csVer" json:"csVer,omitempty"`
	LobbyVer               *string `protobuf:"bytes,4,opt,name=lobbyVer" json:"lobbyVer,omitempty"`
	OperatingSystem        *string `protobuf:"bytes,5,opt,name=operatingSystem" json:"operatingSystem,omitempty"`
	OperatingSystemFamily  *string `protobuf:"bytes,6,opt,name=operatingSystemFamily" json:"operatingSystemFamily,omitempty"`
	DeviceUniqueIdentifier *string `protobuf:"bytes,7,opt,name=deviceUniqueIdentifier" json:"deviceUniqueIdentifier,omitempty"`
	DeviceName             *string `protobuf:"bytes,8,opt,name=deviceName" json:"deviceName,omitempty"`
	DeviceModel            *string `protobuf:"bytes,9,opt,name=deviceModel" json:"deviceModel,omitempty"`
	Network                *string `protobuf:"bytes,10,opt,name=network" json:"network,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *ClientInfo) Reset()                    { *m = ClientInfo{} }
func (m *ClientInfo) String() string            { return proto.CompactTextString(m) }
func (*ClientInfo) ProtoMessage()               {}
func (*ClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ClientInfo) GetQMod() string {
	if m != nil && m.QMod != nil {
		return *m.QMod
	}
	return ""
}

func (m *ClientInfo) GetModV() string {
	if m != nil && m.ModV != nil {
		return *m.ModV
	}
	return ""
}

func (m *ClientInfo) GetCsVer() string {
	if m != nil && m.CsVer != nil {
		return *m.CsVer
	}
	return ""
}

func (m *ClientInfo) GetLobbyVer() string {
	if m != nil && m.LobbyVer != nil {
		return *m.LobbyVer
	}
	return ""
}

func (m *ClientInfo) GetOperatingSystem() string {
	if m != nil && m.OperatingSystem != nil {
		return *m.OperatingSystem
	}
	return ""
}

func (m *ClientInfo) GetOperatingSystemFamily() string {
	if m != nil && m.OperatingSystemFamily != nil {
		return *m.OperatingSystemFamily
	}
	return ""
}

func (m *ClientInfo) GetDeviceUniqueIdentifier() string {
	if m != nil && m.DeviceUniqueIdentifier != nil {
		return *m.DeviceUniqueIdentifier
	}
	return ""
}

func (m *ClientInfo) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *ClientInfo) GetDeviceModel() string {
	if m != nil && m.DeviceModel != nil {
		return *m.DeviceModel
	}
	return ""
}

func (m *ClientInfo) GetNetwork() string {
	if m != nil && m.Network != nil {
		return *m.Network
	}
	return ""
}

// 账号注册返回
type MsgRegisterReply struct {
	Result           *int32  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Token            *string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRegisterReply) Reset()                    { *m = MsgRegisterReply{} }
func (m *MsgRegisterReply) String() string            { return proto.CompactTextString(m) }
func (*MsgRegisterReply) ProtoMessage()               {}
func (*MsgRegisterReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *MsgRegisterReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgRegisterReply) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type MsgQuicklyLoginReply struct {
	Result           *int32    `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Token            *string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Account          *string   `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	UserInfo         *UserInfo `protobuf:"bytes,4,opt,name=userInfo" json:"userInfo,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgQuicklyLoginReply) Reset()                    { *m = MsgQuicklyLoginReply{} }
func (m *MsgQuicklyLoginReply) String() string            { return proto.CompactTextString(m) }
func (*MsgQuicklyLoginReply) ProtoMessage()               {}
func (*MsgQuicklyLoginReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *MsgQuicklyLoginReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgQuicklyLoginReply) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *MsgQuicklyLoginReply) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *MsgQuicklyLoginReply) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type MsgWebsocketConnectReply struct {
	Result           *int32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgWebsocketConnectReply) Reset()                    { *m = MsgWebsocketConnectReply{} }
func (m *MsgWebsocketConnectReply) String() string            { return proto.CompactTextString(m) }
func (*MsgWebsocketConnectReply) ProtoMessage()               {}
func (*MsgWebsocketConnectReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *MsgWebsocketConnectReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// 回放房间中的玩家信息
type MsgReplayPlayerInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	Nick             *string `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	ChairID          *int32  `protobuf:"varint,3,req,name=chairID" json:"chairID,omitempty"`
	TotalScore       *int32  `protobuf:"varint,4,opt,name=totalScore" json:"totalScore,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,opt,name=sex" json:"sex,omitempty"`
	HeadIconURI      *string `protobuf:"bytes,6,opt,name=headIconURI" json:"headIconURI,omitempty"`
	AvatarID         *int32  `protobuf:"varint,7,opt,name=avatarID" json:"avatarID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReplayPlayerInfo) Reset()                    { *m = MsgReplayPlayerInfo{} }
func (m *MsgReplayPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgReplayPlayerInfo) ProtoMessage()               {}
func (*MsgReplayPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *MsgReplayPlayerInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgReplayPlayerInfo) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *MsgReplayPlayerInfo) GetChairID() int32 {
	if m != nil && m.ChairID != nil {
		return *m.ChairID
	}
	return 0
}

func (m *MsgReplayPlayerInfo) GetTotalScore() int32 {
	if m != nil && m.TotalScore != nil {
		return *m.TotalScore
	}
	return 0
}

func (m *MsgReplayPlayerInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgReplayPlayerInfo) GetHeadIconURI() string {
	if m != nil && m.HeadIconURI != nil {
		return *m.HeadIconURI
	}
	return ""
}

func (m *MsgReplayPlayerInfo) GetAvatarID() int32 {
	if m != nil && m.AvatarID != nil {
		return *m.AvatarID
	}
	return 0
}

// 回放记录中玩家的得分信息
type MsgReplayPlayerScoreSummary struct {
	ChairID          *int32 `protobuf:"varint,1,req,name=chairID" json:"chairID,omitempty"`
	Score            *int32 `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	WinType          *int32 `protobuf:"varint,3,req,name=winType" json:"winType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgReplayPlayerScoreSummary) Reset()                    { *m = MsgReplayPlayerScoreSummary{} }
func (m *MsgReplayPlayerScoreSummary) String() string            { return proto.CompactTextString(m) }
func (*MsgReplayPlayerScoreSummary) ProtoMessage()               {}
func (*MsgReplayPlayerScoreSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *MsgReplayPlayerScoreSummary) GetChairID() int32 {
	if m != nil && m.ChairID != nil {
		return *m.ChairID
	}
	return 0
}

func (m *MsgReplayPlayerScoreSummary) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgReplayPlayerScoreSummary) GetWinType() int32 {
	if m != nil && m.WinType != nil {
		return *m.WinType
	}
	return 0
}

// 手牌回放记录概要
type MsgReplayRecordSummary struct {
	RecordUUID       *string                        `protobuf:"bytes,1,req,name=recordUUID" json:"recordUUID,omitempty"`
	PlayerScores     []*MsgReplayPlayerScoreSummary `protobuf:"bytes,2,rep,name=playerScores" json:"playerScores,omitempty"`
	EndTime          *uint32                        `protobuf:"varint,3,req,name=endTime" json:"endTime,omitempty"`
	ShareAbleID      *string                        `protobuf:"bytes,4,opt,name=shareAbleID" json:"shareAbleID,omitempty"`
	StartTime        *uint32                        `protobuf:"varint,5,opt,name=startTime" json:"startTime,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MsgReplayRecordSummary) Reset()                    { *m = MsgReplayRecordSummary{} }
func (m *MsgReplayRecordSummary) String() string            { return proto.CompactTextString(m) }
func (*MsgReplayRecordSummary) ProtoMessage()               {}
func (*MsgReplayRecordSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *MsgReplayRecordSummary) GetRecordUUID() string {
	if m != nil && m.RecordUUID != nil {
		return *m.RecordUUID
	}
	return ""
}

func (m *MsgReplayRecordSummary) GetPlayerScores() []*MsgReplayPlayerScoreSummary {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

func (m *MsgReplayRecordSummary) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *MsgReplayRecordSummary) GetShareAbleID() string {
	if m != nil && m.ShareAbleID != nil {
		return *m.ShareAbleID
	}
	return ""
}

func (m *MsgReplayRecordSummary) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

// 回播房间记录
type MsgReplayRoom struct {
	RecordRoomType   *int32                    `protobuf:"varint,1,req,name=recordRoomType" json:"recordRoomType,omitempty"`
	StartTime        *uint32                   `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	EndTime          *uint32                   `protobuf:"varint,3,req,name=endTime" json:"endTime,omitempty"`
	RoomNumber       *string                   `protobuf:"bytes,4,req,name=roomNumber" json:"roomNumber,omitempty"`
	Players          []*MsgReplayPlayerInfo    `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
	Records          []*MsgReplayRecordSummary `protobuf:"bytes,6,rep,name=records" json:"records,omitempty"`
	OwnerUserID      *string                   `protobuf:"bytes,7,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *MsgReplayRoom) Reset()                    { *m = MsgReplayRoom{} }
func (m *MsgReplayRoom) String() string            { return proto.CompactTextString(m) }
func (*MsgReplayRoom) ProtoMessage()               {}
func (*MsgReplayRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *MsgReplayRoom) GetRecordRoomType() int32 {
	if m != nil && m.RecordRoomType != nil {
		return *m.RecordRoomType
	}
	return 0
}

func (m *MsgReplayRoom) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *MsgReplayRoom) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *MsgReplayRoom) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

func (m *MsgReplayRoom) GetPlayers() []*MsgReplayPlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *MsgReplayRoom) GetRecords() []*MsgReplayRecordSummary {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *MsgReplayRoom) GetOwnerUserID() string {
	if m != nil && m.OwnerUserID != nil {
		return *m.OwnerUserID
	}
	return ""
}

type MailAttachments struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	IsReceive        *bool  `protobuf:"varint,3,opt,name=isReceive" json:"isReceive,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MailAttachments) Reset()                    { *m = MailAttachments{} }
func (m *MailAttachments) String() string            { return proto.CompactTextString(m) }
func (*MailAttachments) ProtoMessage()               {}
func (*MailAttachments) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *MailAttachments) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *MailAttachments) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *MailAttachments) GetIsReceive() bool {
	if m != nil && m.IsReceive != nil {
		return *m.IsReceive
	}
	return false
}

type MsgMail struct {
	Id               *string          `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Title            *string          `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content          *string          `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Attachments      *MailAttachments `protobuf:"bytes,4,opt,name=attachments" json:"attachments,omitempty"`
	IsRead           *bool            `protobuf:"varint,5,opt,name=isRead" json:"isRead,omitempty"`
	TimeStamp        *int64           `protobuf:"varint,6,opt,name=timeStamp" json:"timeStamp,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *MsgMail) Reset()                    { *m = MsgMail{} }
func (m *MsgMail) String() string            { return proto.CompactTextString(m) }
func (*MsgMail) ProtoMessage()               {}
func (*MsgMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *MsgMail) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MsgMail) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *MsgMail) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *MsgMail) GetAttachments() *MailAttachments {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *MsgMail) GetIsRead() bool {
	if m != nil && m.IsRead != nil {
		return *m.IsRead
	}
	return false
}

func (m *MsgMail) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

type MsgLoadMail struct {
	Mails            []*MsgMail `protobuf:"bytes,1,rep,name=mails" json:"mails,omitempty"`
	Cursor           *int32     `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *MsgLoadMail) Reset()                    { *m = MsgLoadMail{} }
func (m *MsgLoadMail) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadMail) ProtoMessage()               {}
func (*MsgLoadMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *MsgLoadMail) GetMails() []*MsgMail {
	if m != nil {
		return m.Mails
	}
	return nil
}

func (m *MsgLoadMail) GetCursor() int32 {
	if m != nil && m.Cursor != nil {
		return *m.Cursor
	}
	return 0
}

func init() {
	proto.RegisterType((*LobbyMessage)(nil), "lobby.LobbyMessage")
	proto.RegisterType((*MsgCreateRoomReq)(nil), "lobby.MsgCreateRoomReq")
	proto.RegisterType((*UserProfile)(nil), "lobby.UserProfile")
	proto.RegisterType((*RoomInfo)(nil), "lobby.RoomInfo")
	proto.RegisterType((*MsgCreateRoomRsp)(nil), "lobby.MsgCreateRoomRsp")
	proto.RegisterType((*MsgReleaseRoomReq)(nil), "lobby.MsgReleaseRoomReq")
	proto.RegisterType((*MsgReleaseRoomRsp)(nil), "lobby.MsgReleaseRoomRsp")
	proto.RegisterType((*MsgChat)(nil), "lobby.MsgChat")
	proto.RegisterType((*MsgLoadUnreadChatReply)(nil), "lobby.MsgLoadUnreadChatReply")
	proto.RegisterType((*MsgSetReadChat)(nil), "lobby.MsgSetReadChat")
	proto.RegisterType((*RoomIDList)(nil), "lobby.RoomIDList")
	proto.RegisterType((*MsgLoadRoomListRsp)(nil), "lobby.MsgLoadRoomListRsp")
	proto.RegisterType((*MsgUpdateUserInfo)(nil), "lobby.MsgUpdateUserInfo")
	proto.RegisterType((*RoomCost)(nil), "lobby.RoomCost")
	proto.RegisterType((*MsgRequestRoomInfo)(nil), "lobby.MsgRequestRoomInfo")
	proto.RegisterType((*MsgRequestRoomInfoRsp)(nil), "lobby.MsgRequestRoomInfoRsp")
	proto.RegisterType((*MsgUpdateRoomState)(nil), "lobby.MsgUpdateRoomState")
	proto.RegisterType((*MsgUpdateRoomList)(nil), "lobby.MsgUpdateRoomList")
	proto.RegisterType((*MsgRequestUserScoreInfo)(nil), "lobby.MsgRequestUserScoreInfo")
	proto.RegisterType((*MsgRequestUserScoreInfoRsp)(nil), "lobby.MsgRequestUserScoreInfoRsp")
	proto.RegisterType((*MsgLoadUserHeadIconURI)(nil), "lobby.MsgLoadUserHeadIconURI")
	proto.RegisterType((*MsgHeadIconInfo)(nil), "lobby.MsgHeadIconInfo")
	proto.RegisterType((*MsgLoadUserHeadIconURIReply)(nil), "lobby.MsgLoadUserHeadIconURIReply")
	proto.RegisterType((*MsgUpdateUserDiamond)(nil), "lobby.MsgUpdateUserDiamond")
	proto.RegisterType((*MsgAccReplayRoom)(nil), "lobby.MsgAccReplayRoom")
	proto.RegisterType((*MsgAccLoadReplayRoomsReply)(nil), "lobby.MsgAccLoadReplayRoomsReply")
	proto.RegisterType((*MsgAccLoadReplayRecord)(nil), "lobby.MsgAccLoadReplayRecord")
	proto.RegisterType((*MsgUserInfo)(nil), "lobby.MsgUserInfo")
	proto.RegisterType((*UserInfo)(nil), "lobby.UserInfo")
	proto.RegisterType((*MsgLoginReply)(nil), "lobby.MsgLoginReply")
	proto.RegisterType((*ClientInfo)(nil), "lobby.ClientInfo")
	proto.RegisterType((*MsgRegisterReply)(nil), "lobby.MsgRegisterReply")
	proto.RegisterType((*MsgQuicklyLoginReply)(nil), "lobby.MsgQuicklyLoginReply")
	proto.RegisterType((*MsgWebsocketConnectReply)(nil), "lobby.MsgWebsocketConnectReply")
	proto.RegisterType((*MsgReplayPlayerInfo)(nil), "lobby.MsgReplayPlayerInfo")
	proto.RegisterType((*MsgReplayPlayerScoreSummary)(nil), "lobby.MsgReplayPlayerScoreSummary")
	proto.RegisterType((*MsgReplayRecordSummary)(nil), "lobby.MsgReplayRecordSummary")
	proto.RegisterType((*MsgReplayRoom)(nil), "lobby.MsgReplayRoom")
	proto.RegisterType((*MailAttachments)(nil), "lobby.MailAttachments")
	proto.RegisterType((*MsgMail)(nil), "lobby.MsgMail")
	proto.RegisterType((*MsgLoadMail)(nil), "lobby.MsgLoadMail")
	proto.RegisterEnum("lobby.MsgError", MsgError_name, MsgError_value)
	proto.RegisterEnum("lobby.MessageCode", MessageCode_name, MessageCode_value)
	proto.RegisterEnum("lobby.RoomType", RoomType_name, RoomType_value)
	proto.RegisterEnum("lobby.OpenRoomType", OpenRoomType_name, OpenRoomType_value)
	proto.RegisterEnum("lobby.ChatDataType", ChatDataType_name, ChatDataType_value)
	proto.RegisterEnum("lobby.ChatScopeType", ChatScopeType_name, ChatScopeType_value)
	proto.RegisterEnum("lobby.LoginState", LoginState_name, LoginState_value)
	proto.RegisterEnum("lobby.ActivityType", ActivityType_name, ActivityType_value)
	proto.RegisterEnum("lobby.LoginError", LoginError_name, LoginError_value)
	proto.RegisterEnum("lobby.RegisterError", RegisterError_name, RegisterError_value)
	proto.RegisterEnum("lobby.WebsocketConnectError", WebsocketConnectError_name, WebsocketConnectError_value)
	proto.RegisterEnum("lobby.MailAttachmentType", MailAttachmentType_name, MailAttachmentType_value)
}

func init() { proto.RegisterFile("accessory.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x6e, 0x1b, 0xc7,
	0xf5, 0xcf, 0xf2, 0x43, 0xa4, 0x0e, 0x49, 0x71, 0xbc, 0xb2, 0x25, 0xda, 0x8e, 0x12, 0x79, 0xff,
	0xf9, 0xa3, 0x8a, 0xd2, 0x1a, 0x68, 0x8a, 0x34, 0x2d, 0x5a, 0xa0, 0x50, 0x28, 0xd9, 0xa1, 0x2a,
	0x52, 0x8a, 0x68, 0xc5, 0x89, 0x81, 0x16, 0x18, 0xed, 0x8e, 0xc8, 0xa9, 0x76, 0x67, 0xe8, 0x99,
	0xa1, 0x6c, 0xde, 0xf4, 0xaa, 0x45, 0x6f, 0xfa, 0x0e, 0x7d, 0x83, 0x02, 0x7d, 0x80, 0x3e, 0x44,
	0xaf, 0x7b, 0xd7, 0xbb, 0xa2, 0x2f, 0x51, 0x9c, 0x99, 0x59, 0x2e, 0x49, 0xc9, 0x6d, 0x80, 0xde,
	0x71, 0xce, 0x9c, 0x39, 0xdf, 0xe7, 0x77, 0xce, 0x12, 0xda, 0x34, 0x8e, 0x99, 0xd6, 0x52, 0xcd,
	0x9e, 0x4e, 0x94, 0x34, 0x32, 0xac, 0xa6, 0xf2, 0xf2, 0x72, 0x16, 0x7d, 0x0c, 0xcd, 0x13, 0xfc,
	0xd1, 0x67, 0x5a, 0xd3, 0x11, 0x0b, 0x1b, 0x50, 0x3e, 0x9d, 0xe8, 0x4e, 0xb0, 0x5b, 0xda, 0xab,
	0x86, 0x4d, 0xa8, 0x1c, 0x52, 0x43, 0x3b, 0xa5, 0xdd, 0x60, 0xaf, 0x19, 0x45, 0x40, 0xfa, 0x7a,
	0xd4, 0x55, 0x8c, 0x1a, 0x76, 0x2e, 0x65, 0x76, 0xce, 0x5e, 0x87, 0x1b, 0xb0, 0x16, 0x4b, 0x71,
	0xc5, 0x47, 0xf6, 0xc5, 0x7a, 0x74, 0x00, 0x8d, 0x0b, 0xcd, 0xd4, 0x99, 0x92, 0x57, 0x3c, 0x65,
	0x78, 0x3d, 0xd5, 0x4c, 0xf5, 0x0e, 0xdd, 0x75, 0x48, 0xa0, 0x8e, 0xe7, 0x01, 0xcd, 0x98, 0x15,
	0x6a, 0x29, 0x82, 0xc7, 0xd7, 0x96, 0x52, 0x46, 0x4a, 0xf4, 0xaf, 0x00, 0xea, 0x28, 0xbe, 0x27,
	0xae, 0x24, 0x0a, 0x50, 0xf8, 0x3b, 0x17, 0x10, 0x02, 0xe0, 0x79, 0x30, 0xcd, 0x2e, 0x99, 0xea,
	0x94, 0x2c, 0xed, 0x3e, 0x34, 0x47, 0x34, 0x63, 0x43, 0xa6, 0x6e, 0xac, 0xaa, 0xb2, 0xa5, 0xb6,
	0xa0, 0xaa, 0x0d, 0x35, 0xac, 0x53, 0xd9, 0x0d, 0xf6, 0xaa, 0x0b, 0x86, 0x56, 0xad, 0xde, 0x7b,
	0xb0, 0x6e, 0x78, 0xc6, 0x86, 0x86, 0x66, 0x93, 0xce, 0x9a, 0x25, 0x3d, 0x81, 0x2a, 0x1a, 0xa7,
	0x3b, 0xb5, 0xdd, 0xf2, 0x5e, 0xe3, 0xd3, 0xf0, 0xa9, 0x8d, 0xd0, 0xd3, 0x45, 0x7f, 0xee, 0x43,
	0x73, 0x4c, 0x45, 0x32, 0x34, 0x54, 0x19, 0xc3, 0x92, 0x4e, 0xdd, 0xca, 0xde, 0x82, 0x8d, 0x94,
	0x6a, 0x73, 0x10, 0x1b, 0x7e, 0xc3, 0x5e, 0xf0, 0x8c, 0x75, 0xd6, 0x77, 0x83, 0xbd, 0x56, 0xd8,
	0x86, 0xda, 0x44, 0xc9, 0x49, 0xf7, 0x6a, 0xd4, 0x81, 0x5c, 0x69, 0x26, 0x93, 0x69, 0xca, 0x90,
	0xd4, 0xb0, 0xde, 0x5e, 0xad, 0x06, 0x55, 0x4f, 0xac, 0xd3, 0x4c, 0x4f, 0x53, 0xe3, 0xd3, 0xf0,
	0x04, 0xea, 0xca, 0x07, 0xc4, 0x46, 0xad, 0xf1, 0x69, 0xdb, 0xdb, 0xb6, 0x14, 0x27, 0x66, 0xfa,
	0x7a, 0xe4, 0x82, 0x88, 0xaa, 0x13, 0x4e, 0x33, 0x29, 0x12, 0xe7, 0x7f, 0xf4, 0x19, 0xdc, 0xeb,
	0xeb, 0xd1, 0x39, 0x4b, 0x19, 0xd5, 0x8b, 0xd9, 0x5b, 0x8a, 0x2e, 0x71, 0x8a, 0x5e, 0xcc, 0x26,
	0x2e, 0x3d, 0xd5, 0xa8, 0x7b, 0xeb, 0xd9, 0x1d, 0xf6, 0x15, 0x62, 0x5c, 0x4e, 0x57, 0x8c, 0x89,
	0x7e, 0x0d, 0x35, 0xf4, 0x71, 0x4c, 0x8d, 0xcd, 0x4a, 0x2c, 0x27, 0xac, 0x28, 0xb0, 0x2b, 0x25,
	0x33, 0xff, 0x0e, 0xa0, 0x64, 0xa4, 0x77, 0x80, 0x40, 0x3d, 0xa1, 0x86, 0x5a, 0x53, 0x2a, 0x39,
	0x2f, 0x52, 0x3a, 0xd5, 0xdd, 0xd2, 0x5e, 0x13, 0x79, 0x79, 0xe2, 0x12, 0x17, 0x3d, 0x83, 0xad,
	0xbe, 0x1e, 0x9d, 0x48, 0x9a, 0x5c, 0x08, 0xc5, 0x68, 0x82, 0x9a, 0xce, 0xd9, 0x24, 0x9d, 0x85,
	0xef, 0x43, 0x25, 0xd3, 0x23, 0x2c, 0x67, 0xcc, 0xe8, 0x86, 0x8f, 0x5a, 0x6e, 0x0c, 0xd6, 0xc4,
	0x54, 0x69, 0xa9, 0xbc, 0xb3, 0x3b, 0xb0, 0xd1, 0xd7, 0xa3, 0x21, 0x33, 0xe7, 0x5e, 0x08, 0x76,
	0x03, 0x4f, 0xdc, 0x73, 0xbc, 0x06, 0x1b, 0xef, 0xc3, 0x13, 0xae, 0x0d, 0x46, 0xd8, 0x39, 0xed,
	0xae, 0xd7, 0xa3, 0x6f, 0x20, 0xf4, 0x56, 0x20, 0x17, 0xf2, 0xdc, 0x15, 0xab, 0x08, 0xd6, 0xf3,
	0x5c, 0xea, 0x4e, 0xc9, 0x9a, 0xf5, 0xdf, 0x92, 0x19, 0xfd, 0xbf, 0x4d, 0xc2, 0xc5, 0x24, 0xa1,
	0x86, 0x61, 0x35, 0x5a, 0x26, 0x02, 0xf5, 0x54, 0xc6, 0xd4, 0x70, 0x29, 0x7c, 0xef, 0xed, 0xb9,
	0xbe, 0xe9, 0x4a, 0x67, 0x1d, 0x16, 0xea, 0x60, 0x9a, 0xd9, 0xcb, 0x16, 0x7a, 0x32, 0xa1, 0x33,
	0xdb, 0x31, 0xad, 0x68, 0xcf, 0x9a, 0x7a, 0xce, 0x5e, 0x4f, 0x99, 0x36, 0x73, 0xb5, 0xcb, 0xbd,
	0xe5, 0x64, 0xbe, 0x82, 0x07, 0xb7, 0x39, 0xff, 0xe7, 0x1a, 0xad, 0x59, 0xb7, 0x7e, 0x17, 0x58,
	0x33, 0x9c, 0x5f, 0xc8, 0x35, 0xc4, 0x7e, 0x2d, 0x1a, 0xf7, 0x76, 0x71, 0x95, 0x16, 0xbb, 0xb4,
	0xfc, 0x9d, 0xbb, 0xd4, 0xd5, 0xcf, 0xed, 0x2e, 0xad, 0xda, 0x60, 0x7c, 0xbe, 0x10, 0xdd, 0x3c,
	0x73, 0xcb, 0x69, 0x0a, 0xee, 0x4c, 0x53, 0xf4, 0x53, 0xd8, 0x2e, 0x62, 0x83, 0xfa, 0x87, 0xb1,
	0x54, 0x2c, 0x77, 0x75, 0x09, 0xf7, 0x36, 0x60, 0x0d, 0x21, 0x2a, 0xef, 0x90, 0xe8, 0xb7, 0xf0,
	0xe8, 0x1d, 0x4f, 0x31, 0xb6, 0x9b, 0xd0, 0xc8, 0xe8, 0xdb, 0x97, 0x5c, 0x58, 0xaa, 0x8f, 0xc3,
	0x26, 0x34, 0xe2, 0xa9, 0x36, 0x98, 0xdf, 0xa9, 0x30, 0x36, 0x18, 0xd5, 0x82, 0xb3, 0x2f, 0x05,
	0x9b, 0xd9, 0x72, 0xa9, 0x22, 0xca, 0xc4, 0x92, 0x0b, 0xc7, 0x37, 0x47, 0xbf, 0xa5, 0xd0, 0x7f,
	0x5c, 0x74, 0x8c, 0x66, 0xea, 0x4b, 0x46, 0x93, 0x5e, 0x2c, 0xc5, 0xc5, 0x79, 0x0f, 0x0b, 0xc7,
	0x59, 0x9e, 0x97, 0x75, 0x17, 0xda, 0x7d, 0x3d, 0xca, 0x59, 0xee, 0xf4, 0xae, 0x01, 0x65, 0xcd,
	0xde, 0x5a, 0xd7, 0x5a, 0x68, 0xd2, 0xb8, 0x90, 0xe7, 0x2b, 0x38, 0x85, 0xc7, 0x77, 0xeb, 0x73,
	0x6d, 0xba, 0x5a, 0x4c, 0x3f, 0x80, 0xd6, 0x78, 0x41, 0x61, 0xde, 0x28, 0x5b, 0x45, 0xff, 0xae,
	0xda, 0xb3, 0xd4, 0x2f, 0xdf, 0x83, 0xfb, 0x4b, 0xfd, 0x72, 0xe8, 0x90, 0x70, 0x11, 0x14, 0x51,
	0x4f, 0x25, 0xea, 0x5a, 0xf0, 0x3d, 0x88, 0x63, 0x34, 0x83, 0xce, 0x30, 0xb3, 0xe1, 0x36, 0xb4,
	0xd5, 0xfc, 0xf4, 0xc5, 0xcc, 0x30, 0x37, 0x0c, 0x9b, 0x58, 0x3f, 0x8a, 0xc5, 0x52, 0xd9, 0xf6,
	0xf6, 0x10, 0x59, 0xda, 0xab, 0x46, 0xd2, 0xe6, 0xf2, 0x20, 0x8e, 0x6d, 0xeb, 0xcf, 0x9f, 0x6a,
	0xe7, 0xda, 0xf7, 0xa1, 0x51, 0x88, 0xcb, 0x4b, 0x69, 0xbb, 0x70, 0x64, 0x59, 0xf9, 0x0a, 0x22,
	0x61, 0x30, 0x8d, 0x34, 0x34, 0xed, 0x3a, 0xa2, 0xcd, 0x6f, 0xf4, 0x4b, 0x9b, 0xbc, 0x65, 0x85,
	0xd6, 0xb0, 0xf0, 0x21, 0xdc, 0x53, 0x0b, 0xe7, 0x55, 0xeb, 0xa5, 0xcc, 0x8e, 0x87, 0xa7, 0x83,
	0xae, 0x9b, 0x83, 0xb6, 0x9d, 0xa2, 0xbf, 0x06, 0xd0, 0xc0, 0x60, 0xe5, 0xb0, 0xd2, 0x80, 0xf2,
	0x94, 0x27, 0x3e, 0xb1, 0x4d, 0xa8, 0x08, 0x37, 0xaa, 0x17, 0xd2, 0x8c, 0xe3, 0xb5, 0x8c, 0xf0,
	0x83, 0x7b, 0x84, 0xa2, 0xdc, 0xd8, 0xfe, 0xb2, 0x03, 0xd7, 0xc8, 0x6b, 0x26, 0x6c, 0x5b, 0x2d,
	0x4d, 0xa0, 0x35, 0xfb, 0x02, 0x85, 0xf1, 0xf8, 0xba, 0x53, 0xcb, 0xb9, 0xe3, 0x31, 0x55, 0x59,
	0xa7, 0x9e, 0x5f, 0xd2, 0x24, 0x51, 0x9d, 0xf5, 0xbc, 0x5d, 0xe8, 0x0d, 0x35, 0x54, 0x75, 0x20,
	0xd7, 0x9c, 0x50, 0x61, 0x27, 0xa6, 0x65, 0x1d, 0xc9, 0x34, 0xe9, 0x34, 0xf1, 0x14, 0xfd, 0x39,
	0x80, 0xfa, 0xdc, 0xf8, 0x3b, 0xda, 0x4e, 0x4e, 0x98, 0x98, 0x0f, 0xa6, 0x5b, 0xcb, 0x46, 0xee,
	0x53, 0xc5, 0x96, 0xae, 0xf3, 0xe9, 0x86, 0x8b, 0x98, 0xf9, 0x2d, 0xa1, 0x09, 0x95, 0x98, 0x9b,
	0x99, 0x5f, 0x10, 0xda, 0x50, 0x8b, 0xb1, 0xa9, 0xd4, 0xcc, 0xb5, 0x11, 0x22, 0xa6, 0xad, 0xd3,
	0x6c, 0x74, 0xa1, 0x52, 0xbb, 0x0c, 0x58, 0xc7, 0x26, 0x63, 0x29, 0xdc, 0x0e, 0xb0, 0x14, 0x06,
	0xb0, 0xd9, 0xfb, 0x0a, 0x5a, 0xb6, 0x15, 0x46, 0x5c, 0xdc, 0x5d, 0xfc, 0xf3, 0x38, 0x96, 0xfc,
	0x56, 0x62, 0x57, 0x26, 0x0b, 0xac, 0xe5, 0x25, 0x60, 0xcd, 0xdd, 0x8e, 0xfe, 0x1e, 0x00, 0x74,
	0x53, 0xce, 0x84, 0xb1, 0x51, 0x68, 0x42, 0xe5, 0x75, 0x5f, 0x62, 0x0e, 0xbd, 0x0b, 0x99, 0x4c,
	0xbe, 0xf6, 0xd2, 0x30, 0xec, 0xfa, 0x6b, 0xa6, 0x8a, 0x29, 0x6b, 0x65, 0x21, 0xa5, 0x62, 0x29,
	0xdb, 0xd0, 0x96, 0x13, 0xa6, 0xa8, 0xe1, 0x62, 0x34, 0x9c, 0x69, 0xc3, 0x32, 0x1f, 0x8a, 0x1d,
	0x78, 0xb0, 0x72, 0xf1, 0x8c, 0x66, 0x3c, 0xcd, 0x63, 0xf3, 0x01, 0x6c, 0x25, 0xec, 0x86, 0xc7,
	0xec, 0x42, 0xf0, 0xd7, 0x53, 0xd6, 0x4b, 0x98, 0x30, 0xfc, 0x8a, 0x33, 0x55, 0x84, 0xca, 0xdd,
	0xdb, 0xe0, 0xbb, 0x50, 0x6d, 0x42, 0xc3, 0xd1, 0xfa, 0x32, 0x61, 0x69, 0x11, 0x30, 0xc1, 0xcc,
	0x1b, 0xa9, 0xae, 0xdd, 0xd2, 0x14, 0xfd, 0xd0, 0x36, 0xe9, 0x39, 0x1b, 0x71, 0x6d, 0x98, 0xfa,
	0x2e, 0x31, 0x8b, 0xb8, 0x05, 0x80, 0xaf, 0xa6, 0x3c, 0xbe, 0x4e, 0x67, 0xdf, 0x3d, 0xd4, 0x6d,
	0xa8, 0xd1, 0xd8, 0x66, 0xd8, 0x87, 0x67, 0x31, 0xf6, 0x95, 0xbb, 0x63, 0xbf, 0x0f, 0x9d, 0xbe,
	0x1e, 0xbd, 0x64, 0x97, 0x5a, 0xc6, 0xd7, 0xcc, 0x74, 0xa5, 0x10, 0x2c, 0x36, 0x77, 0xaa, 0x8b,
	0xfe, 0x18, 0xc0, 0xa6, 0x75, 0x05, 0x5b, 0xf4, 0x2c, 0xa5, 0xb3, 0x77, 0x94, 0x6d, 0xde, 0x29,
	0x73, 0xab, 0xe2, 0x31, 0xe5, 0xf9, 0x66, 0x5b, 0xc5, 0x50, 0x5a, 0x50, 0x70, 0xd3, 0xc1, 0x01,
	0xbc, 0xaf, 0xe3, 0xea, 0x5d, 0x10, 0xbc, 0x96, 0xa7, 0xda, 0xf5, 0x54, 0xef, 0xd0, 0xa6, 0xa4,
	0x1a, 0x0d, 0x2c, 0x28, 0x2f, 0x5a, 0x63, 0x25, 0x0e, 0xa7, 0x59, 0x46, 0xd5, 0x6c, 0x51, 0xef,
	0x3c, 0x5a, 0xda, 0xaa, 0x74, 0xb3, 0xa7, 0x0d, 0xb5, 0x37, 0x5c, 0x58, 0x20, 0xb4, 0x76, 0x45,
	0x7f, 0x0a, 0x2c, 0x30, 0x2d, 0x22, 0x52, 0x2e, 0x0b, 0x57, 0x0b, 0x4b, 0xb8, 0xb8, 0x98, 0x7b,
	0xf9, 0x13, 0x68, 0x4e, 0x0a, 0xad, 0x39, 0xc6, 0x47, 0x05, 0x34, 0xfe, 0x27, 0xcb, 0x98, 0x48,
	0xec, 0x08, 0x2f, 0xdb, 0xe5, 0x66, 0x13, 0x1a, 0x7a, 0x4c, 0x15, 0x3b, 0xb8, 0x4c, 0x71, 0xc6,
	0x56, 0xf2, 0x65, 0x5b, 0xe3, 0x06, 0xe0, 0x47, 0x7d, 0xb0, 0xd7, 0x8a, 0xfe, 0x16, 0xd8, 0xe6,
	0x5b, 0x00, 0xdc, 0xdb, 0xa0, 0xee, 0x7c, 0x5d, 0x7a, 0x6c, 0x97, 0xa6, 0xdb, 0x5a, 0x97, 0xf7,
	0x25, 0x07, 0x82, 0x9f, 0x40, 0xcd, 0x39, 0xa5, 0x3b, 0x55, 0xeb, 0xcf, 0xa3, 0xbb, 0xfd, 0xb1,
	0x79, 0x7f, 0x0a, 0x35, 0xa7, 0x5c, 0x77, 0xd6, 0x2c, 0xf3, 0xce, 0x2a, 0xf3, 0x72, 0x14, 0x37,
	0xa1, 0x21, 0xdf, 0x08, 0xa6, 0x2e, 0x5c, 0xb1, 0xb8, 0x51, 0xfe, 0x0b, 0x68, 0xf7, 0x29, 0x4f,
	0x0f, 0x8c, 0xa1, 0xf1, 0x38, 0x63, 0xc2, 0x68, 0xac, 0x1f, 0x53, 0xb8, 0xd2, 0x80, 0xb2, 0x98,
	0x66, 0x3e, 0x69, 0xf7, 0x60, 0x9d, 0xeb, 0x73, 0x16, 0x33, 0x7e, 0xe3, 0x20, 0xb0, 0x1e, 0xfd,
	0x3e, 0xb0, 0xeb, 0x39, 0x0a, 0xf1, 0x5b, 0x75, 0x30, 0xc7, 0x73, 0x6e, 0x52, 0xb6, 0x50, 0x86,
	0x52, 0x18, 0x36, 0x6f, 0x8e, 0x4f, 0xa0, 0x41, 0x0b, 0xa5, 0xbe, 0x3f, 0xe6, 0x23, 0x7a, 0xc5,
	0xa4, 0x0d, 0x58, 0x43, 0xbd, 0x34, 0xb1, 0x99, 0xa8, 0xdf, 0xfe, 0xfc, 0x2a, 0x47, 0x3f, 0xb7,
	0x83, 0x08, 0x67, 0x9a, 0x35, 0x65, 0x07, 0xaa, 0x19, 0xe5, 0xe9, 0x1d, 0xbb, 0xbb, 0xbd, 0x5e,
	0x99, 0x94, 0xfb, 0x7f, 0xa9, 0x41, 0xbd, 0xaf, 0x47, 0x47, 0x4a, 0x49, 0x15, 0x6e, 0x00, 0x1c,
	0x29, 0x35, 0x9c, 0xda, 0x4f, 0x5e, 0xf2, 0x5e, 0xd8, 0x82, 0xf5, 0x23, 0xa5, 0x0e, 0x59, 0x2c,
	0x13, 0x46, 0x02, 0x7f, 0x3c, 0x12, 0xf6, 0x58, 0x0a, 0x09, 0x34, 0x8f, 0x94, 0xc2, 0x02, 0x38,
	0x7a, 0xcb, 0xb5, 0x21, 0xe5, 0x70, 0x13, 0xda, 0x47, 0x4a, 0x0d, 0xa4, 0x5b, 0xa7, 0x71, 0x5a,
	0x92, 0x8a, 0x27, 0xfa, 0xaf, 0x4c, 0xfd, 0x6c, 0x9a, 0xa6, 0xa4, 0x1a, 0x6e, 0xc3, 0xe6, 0x5c,
	0xf2, 0x02, 0xf7, 0x9a, 0xe7, 0x46, 0xd2, 0x40, 0x1a, 0x27, 0xb7, 0x16, 0xb6, 0xa1, 0x81, 0xdc,
	0xd4, 0xd0, 0x4b, 0xaa, 0x19, 0xa9, 0x87, 0x1f, 0xc2, 0x63, 0xe4, 0x72, 0x7b, 0xe0, 0xf3, 0xf9,
	0x47, 0x2c, 0x16, 0xd9, 0xe9, 0xd4, 0x90, 0x75, 0x2f, 0xff, 0x25, 0xe5, 0x0b, 0xb7, 0xc3, 0x01,
	0x81, 0xf0, 0x3e, 0x10, 0x2f, 0xbf, 0x77, 0xd8, 0xd3, 0x47, 0xd9, 0xc4, 0xcc, 0x48, 0x23, 0x7c,
	0x00, 0xf7, 0xac, 0xe1, 0x76, 0x55, 0x77, 0x1f, 0x95, 0x8a, 0x34, 0x3d, 0x33, 0x4a, 0xe8, 0x69,
	0xac, 0x3f, 0x2e, 0x46, 0xa4, 0xe5, 0x4d, 0x7c, 0x81, 0x00, 0x98, 0x4b, 0xd8, 0xf0, 0xac, 0xb6,
	0xc2, 0x92, 0x9c, 0xda, 0x0e, 0x3b, 0x70, 0x3f, 0xf7, 0xc6, 0x56, 0x7b, 0x7e, 0x43, 0xc2, 0x87,
	0xf0, 0x60, 0xe9, 0x66, 0xee, 0xed, 0xbd, 0xf0, 0x31, 0x6c, 0x7b, 0xad, 0xf9, 0xa7, 0xf9, 0xfc,
	0x32, 0x0c, 0xdf, 0x87, 0x8e, 0x7f, 0x67, 0xf7, 0xd4, 0x9e, 0x3e, 0x9d, 0x9a, 0xd3, 0xab, 0x13,
	0x9e, 0x71, 0x43, 0x36, 0xc3, 0x47, 0xb0, 0x55, 0xc4, 0xa5, 0x27, 0x6e, 0x68, 0xca, 0x93, 0x33,
	0xaa, 0x68, 0x46, 0xee, 0x87, 0x1f, 0xc1, 0x2e, 0x9a, 0x4d, 0xaf, 0x99, 0xbc, 0xba, 0xf2, 0xab,
	0xdd, 0x33, 0xca, 0x53, 0x96, 0xa0, 0x78, 0x21, 0xa7, 0xa3, 0x31, 0x79, 0x10, 0xee, 0xc0, 0xc3,
	0x77, 0x70, 0xf5, 0x4e, 0xc9, 0x56, 0xf8, 0x04, 0x76, 0xde, 0x71, 0x7d, 0xce, 0x26, 0x8c, 0x1a,
	0xb2, 0x1d, 0x46, 0xf0, 0xc1, 0x92, 0xf9, 0x17, 0x42, 0x4f, 0x27, 0x13, 0xa9, 0x4c, 0x0e, 0x15,
	0xa4, 0xe3, 0xed, 0x2c, 0x78, 0x8a, 0x22, 0x7a, 0xe8, 0x2d, 0x28, 0xee, 0x96, 0xca, 0xe9, 0x91,
	0xb7, 0xa0, 0xb8, 0xbe, 0x55, 0x43, 0x8f, 0x6f, 0x49, 0x58, 0xaa, 0xa6, 0xf7, 0xc3, 0x2d, 0x08,
	0xf3, 0x54, 0x89, 0x53, 0x33, 0x76, 0xf7, 0x64, 0x27, 0xbc, 0x07, 0xad, 0xbc, 0x34, 0x5c, 0x99,
	0x7e, 0xb0, 0xc4, 0xfa, 0x45, 0x4a, 0xe3, 0xeb, 0x14, 0x45, 0x7c, 0xe8, 0xb3, 0xdd, 0x4d, 0xa7,
	0x97, 0xae, 0x8a, 0xcc, 0x64, 0x46, 0x76, 0x7d, 0xe2, 0x50, 0xc0, 0x99, 0xe2, 0x31, 0xeb, 0x5e,
	0x8d, 0xe6, 0x5a, 0x9f, 0xf8, 0x84, 0xa3, 0xa8, 0xe2, 0x4f, 0x8b, 0x13, 0x19, 0x5f, 0x93, 0xc8,
	0x5f, 0x3d, 0x67, 0x02, 0xd7, 0x04, 0x56, 0xd4, 0x04, 0xf9, 0x3f, 0x5f, 0x6b, 0x3d, 0x3d, 0x60,
	0x2c, 0x71, 0x8b, 0x39, 0xf9, 0x68, 0xff, 0x57, 0xd0, 0xf0, 0x7f, 0x3b, 0x75, 0x65, 0x82, 0x1f,
	0x7e, 0xeb, 0xa7, 0x67, 0x3e, 0xd9, 0xe4, 0xbd, 0x30, 0x84, 0x8d, 0xd3, 0xb3, 0xc5, 0x79, 0x4a,
	0x82, 0x10, 0x60, 0xed, 0xf4, 0x0c, 0xbf, 0xcc, 0x49, 0x09, 0x45, 0x9e, 0x9e, 0x39, 0x59, 0x3e,
	0x81, 0xa4, 0xec, 0x18, 0x10, 0x20, 0x48, 0x65, 0xff, 0x1f, 0xfe, 0x8f, 0x24, 0xcc, 0x55, 0xd8,
	0x84, 0xfa, 0x21, 0xbd, 0x62, 0x62, 0xd4, 0x3f, 0x26, 0x01, 0x9e, 0x9e, 0x4f, 0xa9, 0x38, 0xa4,
	0x62, 0x44, 0x4a, 0xa8, 0xf8, 0x50, 0x8a, 0xd1, 0x0b, 0xca, 0xfb, 0xc7, 0xa4, 0x8c, 0xe8, 0xf1,
	0x2d, 0x15, 0xdd, 0xb1, 0x63, 0xae, 0xe0, 0x79, 0x38, 0xa6, 0x12, 0x1f, 0xf4, 0x8f, 0x49, 0x15,
	0x1f, 0x0f, 0xb8, 0x18, 0x1d, 0xe0, 0x69, 0x0d, 0x6f, 0xbf, 0xe1, 0xe2, 0x98, 0x53, 0x31, 0x7a,
	0xfe, 0x25, 0xa9, 0x15, 0x8a, 0x9e, 0xbf, 0x22, 0x75, 0xec, 0x78, 0x77, 0xfa, 0xfc, 0xcd, 0x67,
	0x9f, 0xfe, 0x88, 0xac, 0xa3, 0x81, 0x03, 0x3e, 0x1d, 0xf0, 0x29, 0x81, 0xb0, 0x06, 0xe5, 0xc3,
	0xc3, 0x57, 0xa4, 0x81, 0x6f, 0xbe, 0x99, 0xb2, 0x13, 0x3e, 0xed, 0x1f, 0x93, 0x26, 0x9a, 0x73,
	0x42, 0xc5, 0xab, 0xb1, 0xc4, 0x63, 0xcb, 0x1e, 0xf1, 0x6c, 0x8f, 0x1b, 0x78, 0x7c, 0x35, 0xa6,
	0x62, 0xf4, 0x2d, 0xeb, 0x1f, 0x93, 0xf6, 0xfe, 0x8f, 0xa1, 0x79, 0x3a, 0x61, 0x62, 0xee, 0x67,
	0x08, 0x1b, 0x2e, 0x2f, 0x07, 0x22, 0x39, 0x12, 0xd8, 0xfe, 0x41, 0x41, 0x7b, 0x26, 0x95, 0x2d,
	0x14, 0x52, 0xda, 0xff, 0x19, 0x34, 0x31, 0x8e, 0x87, 0xfe, 0x3f, 0x96, 0xb0, 0x0e, 0x95, 0x17,
	0xec, 0xad, 0x21, 0xef, 0x85, 0xeb, 0x50, 0x3d, 0xca, 0xe4, 0x6f, 0x38, 0x09, 0xf0, 0xe7, 0xd7,
	0x92, 0xc7, 0x08, 0x92, 0x0d, 0xa8, 0x7d, 0x31, 0xe5, 0x69, 0xc2, 0x05, 0x29, 0xef, 0x7f, 0x09,
	0x2d, 0x7c, 0x3c, 0x8c, 0xe5, 0x84, 0xd9, 0xd7, 0x0d, 0xa8, 0x5d, 0x08, 0xde, 0xa5, 0x1a, 0x05,
	0x00, 0xac, 0xf5, 0xac, 0x41, 0x2e, 0xd0, 0x3d, 0xe1, 0xaa, 0xd7, 0x21, 0x6d, 0x4f, 0x1c, 0xa4,
	0xa9, 0x23, 0x68, 0x52, 0xde, 0x1f, 0x00, 0xd8, 0xfd, 0xcc, 0x7d, 0xfa, 0xaf, 0x43, 0x15, 0x9b,
	0x10, 0xb3, 0xdf, 0x80, 0x5a, 0x8e, 0xdf, 0x01, 0xa6, 0x7a, 0xb5, 0x76, 0x6d, 0xfe, 0xcf, 0xa8,
	0xd2, 0xcc, 0x02, 0x98, 0xc5, 0x7d, 0x52, 0xde, 0x7f, 0x08, 0x4d, 0xfb, 0x81, 0xcf, 0xcd, 0xcc,
	0x1a, 0x66, 0x9d, 0xc1, 0x72, 0x08, 0xf6, 0xff, 0x19, 0x78, 0x5d, 0x6e, 0x46, 0xb8, 0x8a, 0x74,
	0xca, 0xe7, 0x83, 0xc2, 0x75, 0x9c, 0x45, 0x9a, 0x97, 0x2c, 0x1e, 0x53, 0x83, 0x85, 0x99, 0x83,
	0x5d, 0xe0, 0xe1, 0x1a, 0x47, 0x94, 0xbb, 0xcd, 0xb7, 0x40, 0x87, 0x1c, 0xa4, 0xe4, 0xf1, 0xc0,
	0xbe, 0x3f, 0x70, 0x9b, 0x64, 0xfe, 0xb8, 0xec, 0xbb, 0xca, 0xde, 0x9d, 0x51, 0xad, 0xdf, 0x48,
	0x35, 0x07, 0xd8, 0x8a, 0x6f, 0x50, 0xff, 0x66, 0xde, 0x6d, 0x55, 0x0f, 0x93, 0x05, 0x7d, 0xc8,
	0x4c, 0xfe, 0x98, 0xac, 0xf9, 0xe9, 0x90, 0x13, 0x06, 0xd2, 0xf4, 0xa9, 0x89, 0xc7, 0xa4, 0xb6,
	0xff, 0x87, 0x00, 0x5a, 0xf9, 0xc6, 0xec, 0xdc, 0x75, 0x0a, 0x72, 0x5a, 0xe1, 0xb1, 0x9b, 0x18,
	0x2b, 0xc6, 0x06, 0x9e, 0x7d, 0xd5, 0xce, 0x92, 0x8f, 0x9a, 0x67, 0xcf, 0xc7, 0xa5, 0xf3, 0xfa,
	0xa5, 0xe2, 0x86, 0xe5, 0xb3, 0xcd, 0x47, 0xa4, 0xb2, 0x7f, 0x00, 0x0f, 0x56, 0x97, 0x63, 0x67,
	0x10, 0x16, 0xa5, 0x3b, 0x17, 0xc6, 0xdc, 0x07, 0x52, 0xa4, 0xd4, 0x8b, 0x08, 0xf6, 0x9f, 0x40,
	0xb8, 0xbc, 0x4e, 0xe4, 0x25, 0x97, 0xb7, 0x7d, 0xf0, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a,
	0x12, 0x98, 0xd9, 0xde, 0x16, 0x00, 0x00,
}
