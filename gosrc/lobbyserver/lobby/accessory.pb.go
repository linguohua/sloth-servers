// Code generated by protoc-gen-go. DO NOT EDIT.
// source: accessory.proto

/*
Package lobby is a generated protocol buffer package.

It is generated from these files:
	accessory.proto

It has these top-level messages:
	AccessoryMessage
	MsgCreateRoomReq
	UserProfile
	RoomInfo
	MsgCreateRoomRsp
	MsgReleaseRoomReq
	MsgReleaseRoomRsp
	MsgChat
	RoomIDList
	MsgLoadRoomListRsp
	MsgUpdateUserInfo
	RoomCost
	MsgLoginReply
	MsgRequestRoomInfo
	MsgRequestRoomInfoRsp
	MsgUpdateRoomState
	MsgUpdateRoomList
	MsgRequestUserScoreInfo
	MsgRequestUserScoreInfoRsp
	MsgLoadUserHeadIconURI
	MsgHeadIconInfo
	MsgLoadUserHeadIconURIReply
	MsgUpdateUserMoney
	MsgAccReplayRoom
	MsgAccLoadReplayRoomsReply
	MsgAccLoadReplayRecord
	MsgUserInfo
	MsgReplayPlayerInfo
	MsgReplayRoom
*/
package lobby

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgError int32

const (
	MsgError_ErrSuccess                         MsgError = 0
	MsgError_ErrDecode                          MsgError = 1
	MsgError_ErrEncode                          MsgError = 2
	MsgError_ErrRoomExist                       MsgError = 3
	MsgError_ErrNoRoomConfig                    MsgError = 4
	MsgError_ErrServerIsFull                    MsgError = 5
	MsgError_ErrDecodeRoomConfig                MsgError = 6
	MsgError_ErrRoomNotExist                    MsgError = 7
	MsgError_ErrDatabase                        MsgError = 8
	MsgError_ErrRequestGameServerTimeOut        MsgError = 9
	MsgError_ErrWaitGameServerSN                MsgError = 10
	MsgError_ErrRoomIDIsEmpty                   MsgError = 11
	MsgError_ErrNotRoomCreater                  MsgError = 12
	MsgError_ErrGameIsPlaying                   MsgError = 13
	MsgError_ErrTokenIsEmpty                    MsgError = 14
	MsgError_ErrUserIdIsEmpty                   MsgError = 15
	MsgError_ErrRoomNumberIsEmpty               MsgError = 16
	MsgError_ErrRoomNumberNotExist              MsgError = 17
	MsgError_ErrGameServerIDNotExist            MsgError = 18
	MsgError_ErrRoomCountIsOutOfLimit           MsgError = 19
	MsgError_ErrRequestInvalidParam             MsgError = 20
	MsgError_ErrTakeoffDiamondFailedNotEnough   MsgError = 21
	MsgError_ErrTakeoffDiamondFailedIO          MsgError = 22
	MsgError_ErrTakeoffDiamondFailedRepeat      MsgError = 23
	MsgError_ErrGameServerUnsupportRoomType     MsgError = 24
	MsgError_ErrGameServerRoomExist             MsgError = 25
	MsgError_ErrGameServerNoRoomConfig          MsgError = 26
	MsgError_ErrGameServerDecodeRoomConfig      MsgError = 27
	MsgError_ErrGameServerRoomNotExist          MsgError = 28
	MsgError_ErrUserInOtherRoom                 MsgError = 29
	MsgError_ErrRoomIsFull                      MsgError = 30
	MsgError_ErrUserInBlacklist                 MsgError = 31
	MsgError_ErrUserCanNotCreateCLubRoom        MsgError = 32
	MsgError_ErrUserCanNotJoinCLubRoom          MsgError = 33
	MsgError_ErrClubIDIsEmtpy                   MsgError = 34
	MsgError_ErrRoomPriceCfgNotExist            MsgError = 35
	MsgError_ErrUserCreateRoomLock              MsgError = 36
	MsgError_ErrGenerateRoomNumber              MsgError = 37
	MsgError_ErrGroupPayMasterDiamondNotEnough  MsgError = 38
	MsgError_ErrNotSupportGroupMasterPay        MsgError = 39
	MsgError_ErrOutOfMaxClubCreateRoomNum       MsgError = 40
	MsgError_ErrOutOfMaxClubMemberCreateRoomNum MsgError = 41
)

var MsgError_name = map[int32]string{
	0:  "ErrSuccess",
	1:  "ErrDecode",
	2:  "ErrEncode",
	3:  "ErrRoomExist",
	4:  "ErrNoRoomConfig",
	5:  "ErrServerIsFull",
	6:  "ErrDecodeRoomConfig",
	7:  "ErrRoomNotExist",
	8:  "ErrDatabase",
	9:  "ErrRequestGameServerTimeOut",
	10: "ErrWaitGameServerSN",
	11: "ErrRoomIDIsEmpty",
	12: "ErrNotRoomCreater",
	13: "ErrGameIsPlaying",
	14: "ErrTokenIsEmpty",
	15: "ErrUserIdIsEmpty",
	16: "ErrRoomNumberIsEmpty",
	17: "ErrRoomNumberNotExist",
	18: "ErrGameServerIDNotExist",
	19: "ErrRoomCountIsOutOfLimit",
	20: "ErrRequestInvalidParam",
	21: "ErrTakeoffDiamondFailedNotEnough",
	22: "ErrTakeoffDiamondFailedIO",
	23: "ErrTakeoffDiamondFailedRepeat",
	24: "ErrGameServerUnsupportRoomType",
	25: "ErrGameServerRoomExist",
	26: "ErrGameServerNoRoomConfig",
	27: "ErrGameServerDecodeRoomConfig",
	28: "ErrGameServerRoomNotExist",
	29: "ErrUserInOtherRoom",
	30: "ErrRoomIsFull",
	31: "ErrUserInBlacklist",
	32: "ErrUserCanNotCreateCLubRoom",
	33: "ErrUserCanNotJoinCLubRoom",
	34: "ErrClubIDIsEmtpy",
	35: "ErrRoomPriceCfgNotExist",
	36: "ErrUserCreateRoomLock",
	37: "ErrGenerateRoomNumber",
	38: "ErrGroupPayMasterDiamondNotEnough",
	39: "ErrNotSupportGroupMasterPay",
	40: "ErrOutOfMaxClubCreateRoomNum",
	41: "ErrOutOfMaxClubMemberCreateRoomNum",
}
var MsgError_value = map[string]int32{
	"ErrSuccess":                         0,
	"ErrDecode":                          1,
	"ErrEncode":                          2,
	"ErrRoomExist":                       3,
	"ErrNoRoomConfig":                    4,
	"ErrServerIsFull":                    5,
	"ErrDecodeRoomConfig":                6,
	"ErrRoomNotExist":                    7,
	"ErrDatabase":                        8,
	"ErrRequestGameServerTimeOut":        9,
	"ErrWaitGameServerSN":                10,
	"ErrRoomIDIsEmpty":                   11,
	"ErrNotRoomCreater":                  12,
	"ErrGameIsPlaying":                   13,
	"ErrTokenIsEmpty":                    14,
	"ErrUserIdIsEmpty":                   15,
	"ErrRoomNumberIsEmpty":               16,
	"ErrRoomNumberNotExist":              17,
	"ErrGameServerIDNotExist":            18,
	"ErrRoomCountIsOutOfLimit":           19,
	"ErrRequestInvalidParam":             20,
	"ErrTakeoffDiamondFailedNotEnough":   21,
	"ErrTakeoffDiamondFailedIO":          22,
	"ErrTakeoffDiamondFailedRepeat":      23,
	"ErrGameServerUnsupportRoomType":     24,
	"ErrGameServerRoomExist":             25,
	"ErrGameServerNoRoomConfig":          26,
	"ErrGameServerDecodeRoomConfig":      27,
	"ErrGameServerRoomNotExist":          28,
	"ErrUserInOtherRoom":                 29,
	"ErrRoomIsFull":                      30,
	"ErrUserInBlacklist":                 31,
	"ErrUserCanNotCreateCLubRoom":        32,
	"ErrUserCanNotJoinCLubRoom":          33,
	"ErrClubIDIsEmtpy":                   34,
	"ErrRoomPriceCfgNotExist":            35,
	"ErrUserCreateRoomLock":              36,
	"ErrGenerateRoomNumber":              37,
	"ErrGroupPayMasterDiamondNotEnough":  38,
	"ErrNotSupportGroupMasterPay":        39,
	"ErrOutOfMaxClubCreateRoomNum":       40,
	"ErrOutOfMaxClubMemberCreateRoomNum": 41,
}

func (x MsgError) Enum() *MsgError {
	p := new(MsgError)
	*p = x
	return p
}
func (x MsgError) String() string {
	return proto.EnumName(MsgError_name, int32(x))
}
func (x *MsgError) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgError_value, data, "MsgError")
	if err != nil {
		return err
	}
	*x = MsgError(value)
	return nil
}
func (MsgError) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MessageCode int32

const (
	MessageCode_OPInvalid              MessageCode = 0
	MessageCode_OPCreateRoom           MessageCode = 1
	MessageCode_OPDeleteRoom           MessageCode = 2
	MessageCode_OPChat                 MessageCode = 3
	MessageCode_OPGetRooms             MessageCode = 4
	MessageCode_OPLoginReply           MessageCode = 5
	MessageCode_OPRequestRoomInfo      MessageCode = 6
	MessageCode_OPLoadRooms            MessageCode = 7
	MessageCode_OPUpdateUserInfo       MessageCode = 8
	MessageCode_OPUpdateRoomState      MessageCode = 9
	MessageCode_OPUpdateRoomList       MessageCode = 10
	MessageCode_OPVoiceData            MessageCode = 11
	MessageCode_OPRequestUserScoreInfo MessageCode = 12
	MessageCode_OPUpdateUserMoney      MessageCode = 13
	MessageCode_OPBroadcast            MessageCode = 14
	MessageCode_OPSendUserInfo         MessageCode = 15
	MessageCode_OPUnicast              MessageCode = 16
	MessageCode_OPUpdateMail           MessageCode = 17
	MessageCode_OPLoginGifts           MessageCode = 18
	MessageCode_OPUpdateClubFun        MessageCode = 19
	MessageCode_OPUpdateRoomPriceCfg   MessageCode = 20
	MessageCode_OPNotifyUserRoomIsFull MessageCode = 21
)

var MessageCode_name = map[int32]string{
	0:  "OPInvalid",
	1:  "OPCreateRoom",
	2:  "OPDeleteRoom",
	3:  "OPChat",
	4:  "OPGetRooms",
	5:  "OPLoginReply",
	6:  "OPRequestRoomInfo",
	7:  "OPLoadRooms",
	8:  "OPUpdateUserInfo",
	9:  "OPUpdateRoomState",
	10: "OPUpdateRoomList",
	11: "OPVoiceData",
	12: "OPRequestUserScoreInfo",
	13: "OPUpdateUserMoney",
	14: "OPBroadcast",
	15: "OPSendUserInfo",
	16: "OPUnicast",
	17: "OPUpdateMail",
	18: "OPLoginGifts",
	19: "OPUpdateClubFun",
	20: "OPUpdateRoomPriceCfg",
	21: "OPNotifyUserRoomIsFull",
}
var MessageCode_value = map[string]int32{
	"OPInvalid":              0,
	"OPCreateRoom":           1,
	"OPDeleteRoom":           2,
	"OPChat":                 3,
	"OPGetRooms":             4,
	"OPLoginReply":           5,
	"OPRequestRoomInfo":      6,
	"OPLoadRooms":            7,
	"OPUpdateUserInfo":       8,
	"OPUpdateRoomState":      9,
	"OPUpdateRoomList":       10,
	"OPVoiceData":            11,
	"OPRequestUserScoreInfo": 12,
	"OPUpdateUserMoney":      13,
	"OPBroadcast":            14,
	"OPSendUserInfo":         15,
	"OPUnicast":              16,
	"OPUpdateMail":           17,
	"OPLoginGifts":           18,
	"OPUpdateClubFun":        19,
	"OPUpdateRoomPriceCfg":   20,
	"OPNotifyUserRoomIsFull": 21,
}

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}
func (x MessageCode) String() string {
	return proto.EnumName(MessageCode_name, int32(x))
}
func (x *MessageCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageCode_value, data, "MessageCode")
	if err != nil {
		return err
	}
	*x = MessageCode(value)
	return nil
}
func (MessageCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 房间类型
type RoomType int32

const (
	// 大丰麻将
	RoomType_DafengMJ RoomType = 1
	// 贯蛋
	RoomType_GuanDang RoomType = 2
	// 东台
	RoomType_DongTaiMJ RoomType = 3
	// 盐城
	RoomType_YanChengMJ RoomType = 4
	// 韶关
	RoomType_ShaoGuanMJ RoomType = 5
	// 宁安
	RoomType_NingAnMJ RoomType = 6
	// 新疆杠后
	RoomType_XinJiangGH RoomType = 7
	// 大丰关张
	RoomType_DafengGZ RoomType = 8
	// 大丰7王523
	RoomType_Dafeng7w523 RoomType = 9
	// 牛牛
	RoomType_NiuNiu RoomType = 10
	// 斗地主
	RoomType_DDZ RoomType = 11
	// 新疆血流
	RoomType_XueLiuMJ RoomType = 12
	// 兰州麻将
	RoomType_LanZhouMJ RoomType = 13
	// 老兰州
	RoomType_LLanZouMJ RoomType = 14
	// 张掖
	RoomType_ZhangYeMJ RoomType = 15
)

var RoomType_name = map[int32]string{
	1:  "DafengMJ",
	2:  "GuanDang",
	3:  "DongTaiMJ",
	4:  "YanChengMJ",
	5:  "ShaoGuanMJ",
	6:  "NingAnMJ",
	7:  "XinJiangGH",
	8:  "DafengGZ",
	9:  "Dafeng7w523",
	10: "NiuNiu",
	11: "DDZ",
	12: "XueLiuMJ",
	13: "LanZhouMJ",
	14: "LLanZouMJ",
	15: "ZhangYeMJ",
}
var RoomType_value = map[string]int32{
	"DafengMJ":    1,
	"GuanDang":    2,
	"DongTaiMJ":   3,
	"YanChengMJ":  4,
	"ShaoGuanMJ":  5,
	"NingAnMJ":    6,
	"XinJiangGH":  7,
	"DafengGZ":    8,
	"Dafeng7w523": 9,
	"NiuNiu":      10,
	"DDZ":         11,
	"XueLiuMJ":    12,
	"LanZhouMJ":   13,
	"LLanZouMJ":   14,
	"ZhangYeMJ":   15,
}

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}
func (x RoomType) String() string {
	return proto.EnumName(RoomType_name, int32(x))
}
func (x *RoomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RoomType_value, data, "RoomType")
	if err != nil {
		return err
	}
	*x = RoomType(value)
	return nil
}
func (RoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 开房方式，如立即开局、代人开房
type OpenRoomType int32

const (
	// 创建立即进入
	OpenRoomType_CreateAndEnter OpenRoomType = 1
	// 代别人开房
	OpenRoomType_CreateForOther OpenRoomType = 2
)

var OpenRoomType_name = map[int32]string{
	1: "CreateAndEnter",
	2: "CreateForOther",
}
var OpenRoomType_value = map[string]int32{
	"CreateAndEnter": 1,
	"CreateForOther": 2,
}

func (x OpenRoomType) Enum() *OpenRoomType {
	p := new(OpenRoomType)
	*p = x
	return p
}
func (x OpenRoomType) String() string {
	return proto.EnumName(OpenRoomType_name, int32(x))
}
func (x *OpenRoomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OpenRoomType_value, data, "OpenRoomType")
	if err != nil {
		return err
	}
	*x = OpenRoomType(value)
	return nil
}
func (OpenRoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 聊天信息中的数据类型
type ChatDataType int32

const (
	ChatDataType_Text    ChatDataType = 0
	ChatDataType_Emoji   ChatDataType = 1
	ChatDataType_Voice   ChatDataType = 2
	ChatDataType_Buildin ChatDataType = 3
)

var ChatDataType_name = map[int32]string{
	0: "Text",
	1: "Emoji",
	2: "Voice",
	3: "Buildin",
}
var ChatDataType_value = map[string]int32{
	"Text":    0,
	"Emoji":   1,
	"Voice":   2,
	"Buildin": 3,
}

func (x ChatDataType) Enum() *ChatDataType {
	p := new(ChatDataType)
	*p = x
	return p
}
func (x ChatDataType) String() string {
	return proto.EnumName(ChatDataType_name, int32(x))
}
func (x *ChatDataType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatDataType_value, data, "ChatDataType")
	if err != nil {
		return err
	}
	*x = ChatDataType(value)
	return nil
}
func (ChatDataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 聊天消息的范围
// 单播，房间内，游戏服务器内，全游戏（游戏一般会有多个服务器）
// 目前只需要实现单播，和房间内即可
type ChatScopeType int32

const (
	ChatScopeType_UniCast      ChatScopeType = 0
	ChatScopeType_InRoom       ChatScopeType = 1
	ChatScopeType_InServer     ChatScopeType = 2
	ChatScopeType_InAllServers ChatScopeType = 3
)

var ChatScopeType_name = map[int32]string{
	0: "UniCast",
	1: "InRoom",
	2: "InServer",
	3: "InAllServers",
}
var ChatScopeType_value = map[string]int32{
	"UniCast":      0,
	"InRoom":       1,
	"InServer":     2,
	"InAllServers": 3,
}

func (x ChatScopeType) Enum() *ChatScopeType {
	p := new(ChatScopeType)
	*p = x
	return p
}
func (x ChatScopeType) String() string {
	return proto.EnumName(ChatScopeType_name, int32(x))
}
func (x *ChatScopeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatScopeType_value, data, "ChatScopeType")
	if err != nil {
		return err
	}
	*x = ChatScopeType(value)
	return nil
}
func (ChatScopeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type LoginState int32

const (
	LoginState_Faild           LoginState = 0
	LoginState_Success         LoginState = 1
	LoginState_UserInBlacklist LoginState = 2
	LoginState_ParseTokenError LoginState = 3
)

var LoginState_name = map[int32]string{
	0: "Faild",
	1: "Success",
	2: "UserInBlacklist",
	3: "ParseTokenError",
}
var LoginState_value = map[string]int32{
	"Faild":           0,
	"Success":         1,
	"UserInBlacklist": 2,
	"ParseTokenError": 3,
}

func (x LoginState) Enum() *LoginState {
	p := new(LoginState)
	*p = x
	return p
}
func (x LoginState) String() string {
	return proto.EnumName(LoginState_name, int32(x))
}
func (x *LoginState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LoginState_value, data, "LoginState")
	if err != nil {
		return err
	}
	*x = LoginState(value)
	return nil
}
func (LoginState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ActivityType int32

const (
	ActivityType_Email ActivityType = 1
)

var ActivityType_name = map[int32]string{
	1: "Email",
}
var ActivityType_value = map[string]int32{
	"Email": 1,
}

func (x ActivityType) Enum() *ActivityType {
	p := new(ActivityType)
	*p = x
	return p
}
func (x ActivityType) String() string {
	return proto.EnumName(ActivityType_name, int32(x))
}
func (x *ActivityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActivityType_value, data, "ActivityType")
	if err != nil {
		return err
	}
	*x = ActivityType(value)
	return nil
}
func (ActivityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// 消息包装，把其他消息体格式化为byte array，
// 加上消息码构成一个AccessoryMessage，便于解析
type AccessoryMessage struct {
	Ops              *int32 `protobuf:"varint,1,req,name=Ops" json:"Ops,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AccessoryMessage) Reset()                    { *m = AccessoryMessage{} }
func (m *AccessoryMessage) String() string            { return proto.CompactTextString(m) }
func (*AccessoryMessage) ProtoMessage()               {}
func (*AccessoryMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccessoryMessage) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *AccessoryMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 玩家创建房间
type MsgCreateRoomReq struct {
	Config           *string `protobuf:"bytes,1,req,name=config" json:"config,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgCreateRoomReq) Reset()                    { *m = MsgCreateRoomReq{} }
func (m *MsgCreateRoomReq) String() string            { return proto.CompactTextString(m) }
func (*MsgCreateRoomReq) ProtoMessage()               {}
func (*MsgCreateRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MsgCreateRoomReq) GetConfig() string {
	if m != nil && m.Config != nil {
		return *m.Config
	}
	return ""
}

// 用户信息
type UserProfile struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	UserName         *string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	NickName         *string `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserProfile) Reset()                    { *m = UserProfile{} }
func (m *UserProfile) String() string            { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()               {}
func (*UserProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserProfile) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *UserProfile) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *UserProfile) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

// 玩家房间信息
type RoomInfo struct {
	RoomID           *string        `protobuf:"bytes,1,req,name=roomID" json:"roomID,omitempty"`
	RoomNumber       *string        `protobuf:"bytes,2,req,name=roomNumber" json:"roomNumber,omitempty"`
	GameServerID     *string        `protobuf:"bytes,3,req,name=gameServerID" json:"gameServerID,omitempty"`
	State            *int32         `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	Config           *string        `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`
	TimeStamp        *string        `protobuf:"bytes,6,opt,name=timeStamp" json:"timeStamp,omitempty"`
	Users            []*UserProfile `protobuf:"bytes,7,rep,name=users" json:"users,omitempty"`
	HandStartted     *int32         `protobuf:"varint,8,opt,name=handStartted" json:"handStartted,omitempty"`
	LastActiveTime   *uint32        `protobuf:"varint,9,opt,name=lastActiveTime" json:"lastActiveTime,omitempty"`
	PropCfg          *string        `protobuf:"bytes,10,opt,name=propCfg" json:"propCfg,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RoomInfo) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *RoomInfo) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

func (m *RoomInfo) GetGameServerID() string {
	if m != nil && m.GameServerID != nil {
		return *m.GameServerID
	}
	return ""
}

func (m *RoomInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *RoomInfo) GetConfig() string {
	if m != nil && m.Config != nil {
		return *m.Config
	}
	return ""
}

func (m *RoomInfo) GetTimeStamp() string {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return ""
}

func (m *RoomInfo) GetUsers() []*UserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *RoomInfo) GetHandStartted() int32 {
	if m != nil && m.HandStartted != nil {
		return *m.HandStartted
	}
	return 0
}

func (m *RoomInfo) GetLastActiveTime() uint32 {
	if m != nil && m.LastActiveTime != nil {
		return *m.LastActiveTime
	}
	return 0
}

func (m *RoomInfo) GetPropCfg() string {
	if m != nil && m.PropCfg != nil {
		return *m.PropCfg
	}
	return ""
}

// 玩家创建房间返回信息
type MsgCreateRoomRsp struct {
	Result           *int32    `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomInfo         *RoomInfo `protobuf:"bytes,2,opt,name=roomInfo" json:"roomInfo,omitempty"`
	RetMsg           *string   `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	Diamond          *int32    `protobuf:"varint,4,opt,name=diamond" json:"diamond,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgCreateRoomRsp) Reset()                    { *m = MsgCreateRoomRsp{} }
func (m *MsgCreateRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgCreateRoomRsp) ProtoMessage()               {}
func (*MsgCreateRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MsgCreateRoomRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgCreateRoomRsp) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MsgCreateRoomRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *MsgCreateRoomRsp) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

// 解散玩家创建的房间
type MsgReleaseRoomReq struct {
	RoomID           *string `protobuf:"bytes,1,req,name=roomID" json:"roomID,omitempty"`
	RoomType         *int32  `protobuf:"varint,2,opt,name=roomType" json:"roomType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReleaseRoomReq) Reset()                    { *m = MsgReleaseRoomReq{} }
func (m *MsgReleaseRoomReq) String() string            { return proto.CompactTextString(m) }
func (*MsgReleaseRoomReq) ProtoMessage()               {}
func (*MsgReleaseRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MsgReleaseRoomReq) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *MsgReleaseRoomReq) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

// 解散玩家创建的房间返回信息
type MsgReleaseRoomRsp struct {
	Result           *int32  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomID           *string `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	RetMsg           *string `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReleaseRoomRsp) Reset()                    { *m = MsgReleaseRoomRsp{} }
func (m *MsgReleaseRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgReleaseRoomRsp) ProtoMessage()               {}
func (*MsgReleaseRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MsgReleaseRoomRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgReleaseRoomRsp) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *MsgReleaseRoomRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 聊天消息
type MsgChat struct {
	Scope            *int32  `protobuf:"varint,1,req,name=scope" json:"scope,omitempty"`
	From             *string `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	To               *string `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	DataType         *int32  `protobuf:"varint,4,req,name=dataType" json:"dataType,omitempty"`
	Data             []byte  `protobuf:"bytes,5,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgChat) Reset()                    { *m = MsgChat{} }
func (m *MsgChat) String() string            { return proto.CompactTextString(m) }
func (*MsgChat) ProtoMessage()               {}
func (*MsgChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MsgChat) GetScope() int32 {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return 0
}

func (m *MsgChat) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *MsgChat) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *MsgChat) GetDataType() int32 {
	if m != nil && m.DataType != nil {
		return *m.DataType
	}
	return 0
}

func (m *MsgChat) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 房间列表，主要用于把用户的房间列表保存到redis上
type RoomIDList struct {
	RoomIDs          []string `protobuf:"bytes,1,rep,name=roomIDs" json:"roomIDs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RoomIDList) Reset()                    { *m = RoomIDList{} }
func (m *RoomIDList) String() string            { return proto.CompactTextString(m) }
func (*RoomIDList) ProtoMessage()               {}
func (*RoomIDList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RoomIDList) GetRoomIDs() []string {
	if m != nil {
		return m.RoomIDs
	}
	return nil
}

// 拉取房间列表返回
type MsgLoadRoomListRsp struct {
	Result           *int32      `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomInfos        []*RoomInfo `protobuf:"bytes,2,rep,name=roomInfos" json:"roomInfos,omitempty"`
	RetMsg           *string     `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgLoadRoomListRsp) Reset()                    { *m = MsgLoadRoomListRsp{} }
func (m *MsgLoadRoomListRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadRoomListRsp) ProtoMessage()               {}
func (*MsgLoadRoomListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MsgLoadRoomListRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgLoadRoomListRsp) GetRoomInfos() []*RoomInfo {
	if m != nil {
		return m.RoomInfos
	}
	return nil
}

func (m *MsgLoadRoomListRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 更新用户信息，包括定位信息等
type MsgUpdateUserInfo struct {
	Location         *string `protobuf:"bytes,1,req,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgUpdateUserInfo) Reset()                    { *m = MsgUpdateUserInfo{} }
func (m *MsgUpdateUserInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateUserInfo) ProtoMessage()               {}
func (*MsgUpdateUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MsgUpdateUserInfo) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

type RoomCost struct {
	HandNum          *uint32 `protobuf:"varint,1,req,name=handNum" json:"handNum,omitempty"`
	Pay              *uint32 `protobuf:"varint,2,req,name=pay" json:"pay,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoomCost) Reset()                    { *m = RoomCost{} }
func (m *RoomCost) String() string            { return proto.CompactTextString(m) }
func (*RoomCost) ProtoMessage()               {}
func (*RoomCost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RoomCost) GetHandNum() uint32 {
	if m != nil && m.HandNum != nil {
		return *m.HandNum
	}
	return 0
}

func (m *RoomCost) GetPay() uint32 {
	if m != nil && m.Pay != nil {
		return *m.Pay
	}
	return 0
}

type MsgLoginReply struct {
	Result           *int32      `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Token            *string     `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	RoomInfos        []*RoomInfo `protobuf:"bytes,3,rep,name=roomInfos" json:"roomInfos,omitempty"`
	RetMsg           *string     `protobuf:"bytes,4,opt,name=retMsg" json:"retMsg,omitempty"`
	LastRoomInfo     *RoomInfo   `protobuf:"bytes,5,opt,name=lastRoomInfo" json:"lastRoomInfo,omitempty"`
	RoomDiscount     *string     `protobuf:"bytes,6,opt,name=roomDiscount" json:"roomDiscount,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgLoginReply) Reset()                    { *m = MsgLoginReply{} }
func (m *MsgLoginReply) String() string            { return proto.CompactTextString(m) }
func (*MsgLoginReply) ProtoMessage()               {}
func (*MsgLoginReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MsgLoginReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgLoginReply) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *MsgLoginReply) GetRoomInfos() []*RoomInfo {
	if m != nil {
		return m.RoomInfos
	}
	return nil
}

func (m *MsgLoginReply) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *MsgLoginReply) GetLastRoomInfo() *RoomInfo {
	if m != nil {
		return m.LastRoomInfo
	}
	return nil
}

func (m *MsgLoginReply) GetRoomDiscount() string {
	if m != nil && m.RoomDiscount != nil {
		return *m.RoomDiscount
	}
	return ""
}

type MsgRequestRoomInfo struct {
	RoomNumber       *string `protobuf:"bytes,1,req,name=roomNumber" json:"roomNumber,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRequestRoomInfo) Reset()                    { *m = MsgRequestRoomInfo{} }
func (m *MsgRequestRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestRoomInfo) ProtoMessage()               {}
func (*MsgRequestRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *MsgRequestRoomInfo) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

type MsgRequestRoomInfoRsp struct {
	Result           *int32    `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	RoomInfo         *RoomInfo `protobuf:"bytes,2,opt,name=roomInfo" json:"roomInfo,omitempty"`
	RetMsg           *string   `protobuf:"bytes,7,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgRequestRoomInfoRsp) Reset()                    { *m = MsgRequestRoomInfoRsp{} }
func (m *MsgRequestRoomInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestRoomInfoRsp) ProtoMessage()               {}
func (*MsgRequestRoomInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MsgRequestRoomInfoRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgRequestRoomInfoRsp) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MsgRequestRoomInfoRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 服务器向客户端更新房间状态
type MsgUpdateRoomState struct {
	State            *int32         `protobuf:"varint,1,req,name=state" json:"state,omitempty"`
	RoomID           *string        `protobuf:"bytes,2,req,name=roomID" json:"roomID,omitempty"`
	Users            []*UserProfile `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
	HandStartted     *int32         `protobuf:"varint,4,req,name=handStartted" json:"handStartted,omitempty"`
	LastActiveTime   *uint32        `protobuf:"varint,5,req,name=lastActiveTime" json:"lastActiveTime,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *MsgUpdateRoomState) Reset()                    { *m = MsgUpdateRoomState{} }
func (m *MsgUpdateRoomState) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateRoomState) ProtoMessage()               {}
func (*MsgUpdateRoomState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *MsgUpdateRoomState) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *MsgUpdateRoomState) GetRoomID() string {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return ""
}

func (m *MsgUpdateRoomState) GetUsers() []*UserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *MsgUpdateRoomState) GetHandStartted() int32 {
	if m != nil && m.HandStartted != nil {
		return *m.HandStartted
	}
	return 0
}

func (m *MsgUpdateRoomState) GetLastActiveTime() uint32 {
	if m != nil && m.LastActiveTime != nil {
		return *m.LastActiveTime
	}
	return 0
}

// 服务器向客户端更新房间列表
type MsgUpdateRoomList struct {
	RoomInfos        []*RoomInfo `protobuf:"bytes,1,rep,name=roomInfos" json:"roomInfos,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *MsgUpdateRoomList) Reset()                    { *m = MsgUpdateRoomList{} }
func (m *MsgUpdateRoomList) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateRoomList) ProtoMessage()               {}
func (*MsgUpdateRoomList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MsgUpdateRoomList) GetRoomInfos() []*RoomInfo {
	if m != nil {
		return m.RoomInfos
	}
	return nil
}

// 个人信息 局数得分
type MsgRequestUserScoreInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	GameID           *string `protobuf:"bytes,2,opt,name=gameID" json:"gameID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRequestUserScoreInfo) Reset()                    { *m = MsgRequestUserScoreInfo{} }
func (m *MsgRequestUserScoreInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestUserScoreInfo) ProtoMessage()               {}
func (*MsgRequestUserScoreInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MsgRequestUserScoreInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgRequestUserScoreInfo) GetGameID() string {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return ""
}

type MsgRequestUserScoreInfoRsp struct {
	MaxWinScore      *int32  `protobuf:"varint,1,req,name=maxWinScore" json:"maxWinScore,omitempty"`
	CustomCount      *int32  `protobuf:"varint,2,req,name=customCount" json:"customCount,omitempty"`
	MaxWinMoney      *int32  `protobuf:"varint,3,opt,name=maxWinMoney" json:"maxWinMoney,omitempty"`
	CoinCount        *int32  `protobuf:"varint,4,opt,name=coinCount" json:"coinCount,omitempty"`
	RetMsg           *string `protobuf:"bytes,7,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgRequestUserScoreInfoRsp) Reset()                    { *m = MsgRequestUserScoreInfoRsp{} }
func (m *MsgRequestUserScoreInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*MsgRequestUserScoreInfoRsp) ProtoMessage()               {}
func (*MsgRequestUserScoreInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *MsgRequestUserScoreInfoRsp) GetMaxWinScore() int32 {
	if m != nil && m.MaxWinScore != nil {
		return *m.MaxWinScore
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetCustomCount() int32 {
	if m != nil && m.CustomCount != nil {
		return *m.CustomCount
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetMaxWinMoney() int32 {
	if m != nil && m.MaxWinMoney != nil {
		return *m.MaxWinMoney
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetCoinCount() int32 {
	if m != nil && m.CoinCount != nil {
		return *m.CoinCount
	}
	return 0
}

func (m *MsgRequestUserScoreInfoRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 加载多个用户头像
type MsgLoadUserHeadIconURI struct {
	UserIDs          []string `protobuf:"bytes,1,rep,name=userIDs" json:"userIDs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MsgLoadUserHeadIconURI) Reset()                    { *m = MsgLoadUserHeadIconURI{} }
func (m *MsgLoadUserHeadIconURI) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadUserHeadIconURI) ProtoMessage()               {}
func (*MsgLoadUserHeadIconURI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *MsgLoadUserHeadIconURI) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

// 用户的头像信息
type MsgHeadIconInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	Sex              *uint32 `protobuf:"varint,2,opt,name=sex" json:"sex,omitempty"`
	HeadIconURI      *string `protobuf:"bytes,3,opt,name=headIconURI" json:"headIconURI,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgHeadIconInfo) Reset()                    { *m = MsgHeadIconInfo{} }
func (m *MsgHeadIconInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgHeadIconInfo) ProtoMessage()               {}
func (*MsgHeadIconInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *MsgHeadIconInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgHeadIconInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgHeadIconInfo) GetHeadIconURI() string {
	if m != nil && m.HeadIconURI != nil {
		return *m.HeadIconURI
	}
	return ""
}

// 用户头像信息列表
type MsgLoadUserHeadIconURIReply struct {
	Result           *int32             `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	HeadIconInfos    []*MsgHeadIconInfo `protobuf:"bytes,2,rep,name=headIconInfos" json:"headIconInfos,omitempty"`
	RetMsg           *string            `protobuf:"bytes,3,opt,name=retMsg" json:"retMsg,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MsgLoadUserHeadIconURIReply) Reset()                    { *m = MsgLoadUserHeadIconURIReply{} }
func (m *MsgLoadUserHeadIconURIReply) String() string            { return proto.CompactTextString(m) }
func (*MsgLoadUserHeadIconURIReply) ProtoMessage()               {}
func (*MsgLoadUserHeadIconURIReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *MsgLoadUserHeadIconURIReply) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgLoadUserHeadIconURIReply) GetHeadIconInfos() []*MsgHeadIconInfo {
	if m != nil {
		return m.HeadIconInfos
	}
	return nil
}

func (m *MsgLoadUserHeadIconURIReply) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

// 更新用户的钱包
type MsgUpdateUserMoney struct {
	Diamond          *uint32 `protobuf:"varint,1,req,name=diamond" json:"diamond,omitempty"`
	ActivityType     *uint32 `protobuf:"varint,2,opt,name=activityType" json:"activityType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgUpdateUserMoney) Reset()                    { *m = MsgUpdateUserMoney{} }
func (m *MsgUpdateUserMoney) String() string            { return proto.CompactTextString(m) }
func (*MsgUpdateUserMoney) ProtoMessage()               {}
func (*MsgUpdateUserMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *MsgUpdateUserMoney) GetDiamond() uint32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *MsgUpdateUserMoney) GetActivityType() uint32 {
	if m != nil && m.ActivityType != nil {
		return *m.ActivityType
	}
	return 0
}

// 回播房间信息
type MsgAccReplayRoom struct {
	ReplayRoomBytes  []byte `protobuf:"bytes,1,req,name=replayRoomBytes" json:"replayRoomBytes,omitempty"`
	RecordRoomType   *int32 `protobuf:"varint,2,req,name=recordRoomType" json:"recordRoomType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgAccReplayRoom) Reset()                    { *m = MsgAccReplayRoom{} }
func (m *MsgAccReplayRoom) String() string            { return proto.CompactTextString(m) }
func (*MsgAccReplayRoom) ProtoMessage()               {}
func (*MsgAccReplayRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *MsgAccReplayRoom) GetReplayRoomBytes() []byte {
	if m != nil {
		return m.ReplayRoomBytes
	}
	return nil
}

func (m *MsgAccReplayRoom) GetRecordRoomType() int32 {
	if m != nil && m.RecordRoomType != nil {
		return *m.RecordRoomType
	}
	return 0
}

// 回放房间记录概要列表
type MsgAccLoadReplayRoomsReply struct {
	ReplayRooms      []*MsgAccReplayRoom `protobuf:"bytes,1,rep,name=replayRooms" json:"replayRooms,omitempty"`
	Cursor           *int32              `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
	TotalCursor      *int32              `protobuf:"varint,3,opt,name=totalCursor" json:"totalCursor,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *MsgAccLoadReplayRoomsReply) Reset()                    { *m = MsgAccLoadReplayRoomsReply{} }
func (m *MsgAccLoadReplayRoomsReply) String() string            { return proto.CompactTextString(m) }
func (*MsgAccLoadReplayRoomsReply) ProtoMessage()               {}
func (*MsgAccLoadReplayRoomsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *MsgAccLoadReplayRoomsReply) GetReplayRooms() []*MsgAccReplayRoom {
	if m != nil {
		return m.ReplayRooms
	}
	return nil
}

func (m *MsgAccLoadReplayRoomsReply) GetCursor() int32 {
	if m != nil && m.Cursor != nil {
		return *m.Cursor
	}
	return 0
}

func (m *MsgAccLoadReplayRoomsReply) GetTotalCursor() int32 {
	if m != nil && m.TotalCursor != nil {
		return *m.TotalCursor
	}
	return 0
}

// 回放记录
type MsgAccLoadReplayRecord struct {
	ReplayRecordBytes []byte  `protobuf:"bytes,1,req,name=replayRecordBytes" json:"replayRecordBytes,omitempty"`
	RoomJSONConfig    *string `protobuf:"bytes,2,req,name=roomJSONConfig" json:"roomJSONConfig,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *MsgAccLoadReplayRecord) Reset()                    { *m = MsgAccLoadReplayRecord{} }
func (m *MsgAccLoadReplayRecord) String() string            { return proto.CompactTextString(m) }
func (*MsgAccLoadReplayRecord) ProtoMessage()               {}
func (*MsgAccLoadReplayRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MsgAccLoadReplayRecord) GetReplayRecordBytes() []byte {
	if m != nil {
		return m.ReplayRecordBytes
	}
	return nil
}

func (m *MsgAccLoadReplayRecord) GetRoomJSONConfig() string {
	if m != nil && m.RoomJSONConfig != nil {
		return *m.RoomJSONConfig
	}
	return ""
}

// 玩家信息
type MsgUserInfo struct {
	Uid              *string `protobuf:"bytes,1,req,name=uid" json:"uid,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Sex              *int64  `protobuf:"varint,3,req,name=sex" json:"sex,omitempty"`
	Protrait         *string `protobuf:"bytes,4,req,name=protrait" json:"protrait,omitempty"`
	Token            *string `protobuf:"bytes,5,req,name=token" json:"token,omitempty"`
	Diamond          *int64  `protobuf:"varint,6,req,name=diamond" json:"diamond,omitempty"`
	Nick             *string `protobuf:"bytes,7,req,name=nick" json:"nick,omitempty"`
	Charm            *int64  `protobuf:"varint,8,req,name=charm" json:"charm,omitempty"`
	Addr             *string `protobuf:"bytes,9,req,name=addr" json:"addr,omitempty"`
	Avatar           *string `protobuf:"bytes,10,req,name=avatar" json:"avatar,omitempty"`
	Dan              *int64  `protobuf:"varint,11,opt,name=dan" json:"dan,omitempty"`
	Gold             *int64  `protobuf:"varint,12,opt,name=gold" json:"gold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgUserInfo) Reset()                    { *m = MsgUserInfo{} }
func (m *MsgUserInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgUserInfo) ProtoMessage()               {}
func (*MsgUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MsgUserInfo) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *MsgUserInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MsgUserInfo) GetSex() int64 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgUserInfo) GetProtrait() string {
	if m != nil && m.Protrait != nil {
		return *m.Protrait
	}
	return ""
}

func (m *MsgUserInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *MsgUserInfo) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *MsgUserInfo) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *MsgUserInfo) GetCharm() int64 {
	if m != nil && m.Charm != nil {
		return *m.Charm
	}
	return 0
}

func (m *MsgUserInfo) GetAddr() string {
	if m != nil && m.Addr != nil {
		return *m.Addr
	}
	return ""
}

func (m *MsgUserInfo) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *MsgUserInfo) GetDan() int64 {
	if m != nil && m.Dan != nil {
		return *m.Dan
	}
	return 0
}

func (m *MsgUserInfo) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

// 回放房间中的玩家信息
type MsgReplayPlayerInfo struct {
	UserID           *string `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	Nick             *string `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	ChairID          *int32  `protobuf:"varint,3,req,name=chairID" json:"chairID,omitempty"`
	TotalScore       *int32  `protobuf:"varint,4,opt,name=totalScore" json:"totalScore,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,opt,name=sex" json:"sex,omitempty"`
	HeadIconURI      *string `protobuf:"bytes,6,opt,name=headIconURI" json:"headIconURI,omitempty"`
	AvatarID         *int32  `protobuf:"varint,7,opt,name=avatarID" json:"avatarID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgReplayPlayerInfo) Reset()                    { *m = MsgReplayPlayerInfo{} }
func (m *MsgReplayPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgReplayPlayerInfo) ProtoMessage()               {}
func (*MsgReplayPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *MsgReplayPlayerInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgReplayPlayerInfo) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *MsgReplayPlayerInfo) GetChairID() int32 {
	if m != nil && m.ChairID != nil {
		return *m.ChairID
	}
	return 0
}

func (m *MsgReplayPlayerInfo) GetTotalScore() int32 {
	if m != nil && m.TotalScore != nil {
		return *m.TotalScore
	}
	return 0
}

func (m *MsgReplayPlayerInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgReplayPlayerInfo) GetHeadIconURI() string {
	if m != nil && m.HeadIconURI != nil {
		return *m.HeadIconURI
	}
	return ""
}

func (m *MsgReplayPlayerInfo) GetAvatarID() int32 {
	if m != nil && m.AvatarID != nil {
		return *m.AvatarID
	}
	return 0
}

// 回播房间记录
type MsgReplayRoom struct {
	RecordRoomType   *int32                 `protobuf:"varint,1,req,name=recordRoomType" json:"recordRoomType,omitempty"`
	StartTime        *uint32                `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	EndTime          *uint32                `protobuf:"varint,3,req,name=endTime" json:"endTime,omitempty"`
	RoomNumber       *string                `protobuf:"bytes,4,req,name=roomNumber" json:"roomNumber,omitempty"`
	RoomConfigID     *string                `protobuf:"bytes,8,opt,name=roomConfigID" json:"roomConfigID,omitempty"`
	Players          []*MsgReplayPlayerInfo `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *MsgReplayRoom) Reset()                    { *m = MsgReplayRoom{} }
func (m *MsgReplayRoom) String() string            { return proto.CompactTextString(m) }
func (*MsgReplayRoom) ProtoMessage()               {}
func (*MsgReplayRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MsgReplayRoom) GetRecordRoomType() int32 {
	if m != nil && m.RecordRoomType != nil {
		return *m.RecordRoomType
	}
	return 0
}

func (m *MsgReplayRoom) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *MsgReplayRoom) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *MsgReplayRoom) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

func (m *MsgReplayRoom) GetRoomConfigID() string {
	if m != nil && m.RoomConfigID != nil {
		return *m.RoomConfigID
	}
	return ""
}

func (m *MsgReplayRoom) GetPlayers() []*MsgReplayPlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func init() {
	proto.RegisterType((*AccessoryMessage)(nil), "lobby.AccessoryMessage")
	proto.RegisterType((*MsgCreateRoomReq)(nil), "lobby.MsgCreateRoomReq")
	proto.RegisterType((*UserProfile)(nil), "lobby.UserProfile")
	proto.RegisterType((*RoomInfo)(nil), "lobby.RoomInfo")
	proto.RegisterType((*MsgCreateRoomRsp)(nil), "lobby.MsgCreateRoomRsp")
	proto.RegisterType((*MsgReleaseRoomReq)(nil), "lobby.MsgReleaseRoomReq")
	proto.RegisterType((*MsgReleaseRoomRsp)(nil), "lobby.MsgReleaseRoomRsp")
	proto.RegisterType((*MsgChat)(nil), "lobby.MsgChat")
	proto.RegisterType((*RoomIDList)(nil), "lobby.RoomIDList")
	proto.RegisterType((*MsgLoadRoomListRsp)(nil), "lobby.MsgLoadRoomListRsp")
	proto.RegisterType((*MsgUpdateUserInfo)(nil), "lobby.MsgUpdateUserInfo")
	proto.RegisterType((*RoomCost)(nil), "lobby.RoomCost")
	proto.RegisterType((*MsgLoginReply)(nil), "lobby.MsgLoginReply")
	proto.RegisterType((*MsgRequestRoomInfo)(nil), "lobby.MsgRequestRoomInfo")
	proto.RegisterType((*MsgRequestRoomInfoRsp)(nil), "lobby.MsgRequestRoomInfoRsp")
	proto.RegisterType((*MsgUpdateRoomState)(nil), "lobby.MsgUpdateRoomState")
	proto.RegisterType((*MsgUpdateRoomList)(nil), "lobby.MsgUpdateRoomList")
	proto.RegisterType((*MsgRequestUserScoreInfo)(nil), "lobby.MsgRequestUserScoreInfo")
	proto.RegisterType((*MsgRequestUserScoreInfoRsp)(nil), "lobby.MsgRequestUserScoreInfoRsp")
	proto.RegisterType((*MsgLoadUserHeadIconURI)(nil), "lobby.MsgLoadUserHeadIconURI")
	proto.RegisterType((*MsgHeadIconInfo)(nil), "lobby.MsgHeadIconInfo")
	proto.RegisterType((*MsgLoadUserHeadIconURIReply)(nil), "lobby.MsgLoadUserHeadIconURIReply")
	proto.RegisterType((*MsgUpdateUserMoney)(nil), "lobby.MsgUpdateUserMoney")
	proto.RegisterType((*MsgAccReplayRoom)(nil), "lobby.MsgAccReplayRoom")
	proto.RegisterType((*MsgAccLoadReplayRoomsReply)(nil), "lobby.MsgAccLoadReplayRoomsReply")
	proto.RegisterType((*MsgAccLoadReplayRecord)(nil), "lobby.MsgAccLoadReplayRecord")
	proto.RegisterType((*MsgUserInfo)(nil), "lobby.MsgUserInfo")
	proto.RegisterType((*MsgReplayPlayerInfo)(nil), "lobby.MsgReplayPlayerInfo")
	proto.RegisterType((*MsgReplayRoom)(nil), "lobby.MsgReplayRoom")
	proto.RegisterEnum("lobby.MsgError", MsgError_name, MsgError_value)
	proto.RegisterEnum("lobby.MessageCode", MessageCode_name, MessageCode_value)
	proto.RegisterEnum("lobby.RoomType", RoomType_name, RoomType_value)
	proto.RegisterEnum("lobby.OpenRoomType", OpenRoomType_name, OpenRoomType_value)
	proto.RegisterEnum("lobby.ChatDataType", ChatDataType_name, ChatDataType_value)
	proto.RegisterEnum("lobby.ChatScopeType", ChatScopeType_name, ChatScopeType_value)
	proto.RegisterEnum("lobby.LoginState", LoginState_name, LoginState_value)
	proto.RegisterEnum("lobby.ActivityType", ActivityType_name, ActivityType_value)
}

func init() { proto.RegisterFile("accessory.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x72, 0x1b, 0xb9,
	0x11, 0x36, 0x49, 0x51, 0x24, 0x9b, 0xa4, 0x04, 0x41, 0xb2, 0x44, 0xdb, 0xeb, 0x5d, 0x79, 0xb2,
	0xde, 0x70, 0x95, 0xac, 0x0f, 0x4e, 0x6d, 0xb6, 0x52, 0x7b, 0x92, 0x49, 0x5a, 0xa6, 0x22, 0xfe,
	0x94, 0x68, 0x65, 0xbd, 0xbe, 0x41, 0x33, 0xe0, 0x70, 0xa2, 0x21, 0xc0, 0xc5, 0x60, 0x1c, 0xf3,
	0x92, 0x53, 0x8e, 0x79, 0x87, 0x54, 0xe5, 0x3d, 0x52, 0x95, 0xc7, 0xc8, 0x39, 0x0f, 0x90, 0x67,
	0x48, 0x35, 0x80, 0xe1, 0x90, 0x92, 0x5c, 0x9b, 0xaa, 0xdc, 0x06, 0xdd, 0x8d, 0xc6, 0xd7, 0xdd,
	0x5f, 0x37, 0x30, 0xb0, 0xcb, 0x7c, 0x9f, 0x27, 0x89, 0x54, 0xcb, 0x17, 0x0b, 0x25, 0xb5, 0xa4,
	0xe5, 0x58, 0x5e, 0x5f, 0x2f, 0xbd, 0x6f, 0x80, 0x9c, 0x66, 0x9a, 0x01, 0x4f, 0x12, 0x16, 0x72,
	0x5a, 0x87, 0xd2, 0x68, 0x91, 0xb4, 0x0a, 0xc7, 0xc5, 0x76, 0x99, 0x36, 0x60, 0xab, 0xcb, 0x34,
	0x6b, 0x15, 0x8f, 0x0b, 0xed, 0x86, 0xe7, 0x01, 0x19, 0x24, 0x61, 0x47, 0x71, 0xa6, 0xf9, 0xa5,
	0x94, 0xf3, 0x4b, 0xfe, 0x13, 0xdd, 0x81, 0x6d, 0x5f, 0x8a, 0x69, 0x14, 0x9a, 0x1d, 0x35, 0xef,
	0x14, 0xea, 0x57, 0x09, 0x57, 0x63, 0x25, 0xa7, 0x51, 0xcc, 0x51, 0x9d, 0x26, 0x5c, 0xf5, 0xbb,
	0x56, 0x4d, 0x09, 0x54, 0x71, 0x3d, 0x64, 0x73, 0x6e, 0x9c, 0x1a, 0x89, 0x88, 0xfc, 0x1b, 0x23,
	0x29, 0xa1, 0xc4, 0xfb, 0x57, 0x01, 0xaa, 0xe8, 0xbe, 0x2f, 0xa6, 0x12, 0x1d, 0x28, 0xfc, 0xce,
	0x1c, 0x50, 0x00, 0x5c, 0x0f, 0xd3, 0xf9, 0x35, 0x57, 0xad, 0xa2, 0x91, 0x1d, 0x40, 0x23, 0x64,
	0x73, 0x3e, 0xe1, 0xea, 0x83, 0x39, 0xaa, 0x64, 0xa4, 0x4d, 0x28, 0x27, 0x9a, 0x69, 0xde, 0xda,
	0x3a, 0x2e, 0xb4, 0xcb, 0x6b, 0x40, 0xcb, 0xe6, 0xdc, 0x3d, 0xa8, 0xe9, 0x68, 0xce, 0x27, 0x9a,
	0xcd, 0x17, 0xad, 0x6d, 0x23, 0x7a, 0x06, 0x65, 0x04, 0x97, 0xb4, 0x2a, 0xc7, 0xa5, 0x76, 0xfd,
	0x25, 0x7d, 0x61, 0xb2, 0xf4, 0x62, 0x3d, 0x9e, 0x03, 0x68, 0xcc, 0x98, 0x08, 0x26, 0x9a, 0x29,
	0xad, 0x79, 0xd0, 0xaa, 0x1a, 0xdf, 0x87, 0xb0, 0x13, 0xb3, 0x44, 0x9f, 0xfa, 0x3a, 0xfa, 0xc0,
	0xdf, 0x46, 0x73, 0xde, 0xaa, 0x1d, 0x17, 0xda, 0x4d, 0xba, 0x0b, 0x95, 0x85, 0x92, 0x8b, 0xce,
	0x34, 0x6c, 0x81, 0x09, 0x6d, 0x7a, 0x3b, 0x83, 0xc9, 0xc2, 0x44, 0xc8, 0x93, 0x34, 0xd6, 0x2e,
	0xe7, 0xcf, 0xa0, 0xaa, 0x5c, 0xf4, 0x26, 0x45, 0xf5, 0x97, 0xbb, 0x0e, 0xc8, 0x46, 0x52, 0xb8,
	0x1e, 0x24, 0xa1, 0xcd, 0x18, 0x9e, 0x13, 0x44, 0x6c, 0x2e, 0x45, 0x60, 0x83, 0xf5, 0xbe, 0x85,
	0xbd, 0x41, 0x12, 0x5e, 0xf2, 0x98, 0xb3, 0x64, 0xbd, 0x54, 0x1b, 0xa9, 0x24, 0xf6, 0xa0, 0xb7,
	0xcb, 0x85, 0xad, 0x45, 0xd9, 0xeb, 0xdc, 0xd9, 0x76, 0x0f, 0xbe, 0xdc, 0x8d, 0x2d, 0xe0, 0x2d,
	0x30, 0xde, 0x25, 0x54, 0x30, 0xc6, 0x19, 0xd3, 0xa6, 0x04, 0xbe, 0x5c, 0xf0, 0x9c, 0x4d, 0x53,
	0x25, 0xe7, 0x6e, 0x1f, 0x40, 0x51, 0x4b, 0x17, 0x00, 0x81, 0x6a, 0xc0, 0x34, 0x33, 0x50, 0xb6,
	0x32, 0x5b, 0x94, 0xb4, 0xca, 0xc7, 0xc5, 0x76, 0xc3, 0x7b, 0x0a, 0x60, 0x82, 0xef, 0x5e, 0x44,
	0x89, 0xc6, 0x70, 0x2d, 0x02, 0xa4, 0x69, 0xa9, 0x5d, 0xf3, 0xde, 0x01, 0x1d, 0x24, 0xe1, 0x85,
	0x64, 0x01, 0x5a, 0xa1, 0xcd, 0x7d, 0xc0, 0x3d, 0xa8, 0x65, 0x89, 0x4d, 0x5a, 0x45, 0x53, 0xe2,
	0x9f, 0xcb, 0xac, 0xf7, 0xdc, 0x64, 0xe4, 0x6a, 0x11, 0x30, 0xcd, 0x91, 0x07, 0xc6, 0x88, 0x40,
	0x35, 0x96, 0x3e, 0xd3, 0x91, 0x14, 0x8e, 0xf5, 0x6d, 0xcb, 0xd8, 0x8e, 0xb4, 0xe8, 0x90, 0x22,
	0xc3, 0x74, 0x6e, 0x94, 0x4d, 0xec, 0xa8, 0x05, 0x5b, 0x1a, 0xae, 0x36, 0xbd, 0xbf, 0x15, 0xa0,
	0x69, 0xb0, 0x86, 0x91, 0xb8, 0xe4, 0x8b, 0x78, 0x79, 0x07, 0x66, 0x13, 0xca, 0x5a, 0xde, 0x70,
	0xe1, 0xd2, 0xb4, 0x81, 0xba, 0xf4, 0x73, 0xa8, 0xb7, 0xcc, 0x9e, 0xe7, 0xd0, 0x40, 0x3e, 0x66,
	0x7a, 0xc3, 0xf8, 0x7b, 0xb6, 0x1d, 0x40, 0x03, 0x5d, 0x77, 0xa3, 0xc4, 0x97, 0xa9, 0xd0, 0xb6,
	0x0b, 0xbc, 0xb6, 0x49, 0xe6, 0x25, 0xff, 0x29, 0xe5, 0xb9, 0x8b, 0x5b, 0x7d, 0x67, 0xa3, 0x7e,
	0x0f, 0x0f, 0xef, 0x5a, 0xfe, 0xdf, 0x94, 0xae, 0x18, 0x14, 0x7f, 0x29, 0x18, 0x18, 0x36, 0xf3,
	0x68, 0x35, 0xc1, 0x5e, 0xce, 0x9b, 0xfa, 0x2e, 0x17, 0x8b, 0xeb, 0x1d, 0x5c, 0xfa, 0x9f, 0x3b,
	0xd8, 0xd2, 0xed, 0x6e, 0x07, 0x97, 0x4d, 0xb9, 0xbe, 0x5b, 0xab, 0x7f, 0xc6, 0xad, 0xcd, 0x92,
	0x14, 0xee, 0x2d, 0x89, 0xf7, 0x3b, 0x38, 0xca, 0x73, 0x83, 0xe7, 0x4f, 0x7c, 0xa9, 0x78, 0x16,
	0xea, 0xc6, 0x4c, 0xdc, 0x81, 0x6d, 0x1c, 0x5f, 0x59, 0x43, 0x79, 0x7f, 0x86, 0xc7, 0x9f, 0xd8,
	0x8a, 0xb9, 0xdd, 0x87, 0xfa, 0x9c, 0x7d, 0xfc, 0x21, 0x12, 0x46, 0xea, 0xf2, 0xb0, 0x0f, 0x75,
	0x3f, 0x4d, 0x34, 0x32, 0x10, 0x0b, 0x59, 0xcc, 0x84, 0xd6, 0x72, 0x20, 0x05, 0x5f, 0x1a, 0x42,
	0x97, 0x71, 0xec, 0xf9, 0x32, 0x12, 0xd6, 0x6e, 0x35, 0x19, 0x37, 0x52, 0xff, 0x35, 0x1c, 0xba,
	0x6e, 0xc2, 0xc3, 0xdf, 0x70, 0x16, 0xf4, 0x7d, 0x29, 0xae, 0x2e, 0xfb, 0x48, 0x6d, 0x8b, 0x3c,
	0x6b, 0xbc, 0x0e, 0xec, 0x0e, 0x92, 0x30, 0x33, 0xb9, 0x37, 0xba, 0x3a, 0x94, 0x12, 0xfe, 0xd1,
	0x84, 0xd6, 0x44, 0x48, 0xb3, 0xdc, 0x9f, 0xeb, 0xb1, 0x18, 0x9e, 0xdc, 0x7f, 0xde, 0xfd, 0xfd,
	0xf1, 0x0d, 0x34, 0x67, 0x6b, 0x07, 0x66, 0xad, 0x7c, 0xe8, 0x2a, 0x70, 0x0f, 0x9e, 0x8d, 0x8e,
	0xfe, 0x7e, 0x8d, 0x57, 0x78, 0x9e, 0x49, 0xce, 0xfa, 0x04, 0xb5, 0x4d, 0x7b, 0x00, 0x0d, 0x86,
	0x64, 0x88, 0xf4, 0x72, 0x35, 0x20, 0x9b, 0x5e, 0xc7, 0xcc, 0xef, 0x53, 0xdf, 0x47, 0x68, 0x6c,
	0x89, 0xd5, 0xa6, 0x47, 0xb0, 0xab, 0x56, 0xab, 0x57, 0x4b, 0xcd, 0xed, 0xe5, 0xd9, 0x40, 0x4e,
	0x29, 0xee, 0x4b, 0x65, 0x86, 0x92, 0x73, 0x52, 0x6c, 0x97, 0x3d, 0x69, 0xea, 0x7b, 0xea, 0xfb,
	0x66, 0x60, 0xad, 0xb6, 0x26, 0x36, 0xdc, 0x5f, 0x43, 0x3d, 0x77, 0x97, 0xd1, 0xeb, 0x28, 0x0f,
	0x6e, 0xf3, 0x70, 0xbc, 0xd5, 0x52, 0x95, 0x48, 0x65, 0x27, 0x38, 0x26, 0x58, 0x4b, 0xcd, 0xe2,
	0x8e, 0x15, 0x9a, 0x9a, 0x7b, 0xbf, 0x37, 0x05, 0xdd, 0x3c, 0xd0, 0x00, 0xa3, 0x8f, 0x60, 0x4f,
	0xad, 0xad, 0x6f, 0xa3, 0x97, 0x72, 0x7e, 0x3e, 0x19, 0x0d, 0x3b, 0xf6, 0xde, 0x34, 0x2d, 0xe6,
	0xfd, 0xa3, 0x00, 0x75, 0x4c, 0x60, 0x36, 0x0c, 0xeb, 0x50, 0x4a, 0xa3, 0xc0, 0x15, 0xbb, 0x01,
	0x5b, 0xc2, 0x5e, 0xed, 0x6b, 0xa5, 0xc7, 0xeb, 0xb8, 0x84, 0x43, 0x13, 0xdf, 0x1e, 0x8a, 0x45,
	0xda, 0xf4, 0x5c, 0x2d, 0x1f, 0x74, 0x65, 0xb3, 0x5c, 0x2b, 0xc1, 0xb6, 0xd9, 0x81, 0xce, 0x22,
	0xff, 0xa6, 0x55, 0xc9, 0xac, 0xfd, 0x19, 0x53, 0xf3, 0x56, 0x35, 0x53, 0xb2, 0x20, 0x50, 0xad,
	0x5a, 0xd6, 0x42, 0xec, 0x03, 0xd3, 0x4c, 0xb5, 0x20, 0x3b, 0x39, 0x60, 0xa2, 0x55, 0x3f, 0x2e,
	0x58, 0xd3, 0x50, 0xc6, 0x41, 0xab, 0x81, 0x2b, 0xef, 0xaf, 0x05, 0xd8, 0x37, 0xed, 0x85, 0x61,
	0x8f, 0x63, 0xb6, 0x74, 0x71, 0xdc, 0xe6, 0x6d, 0x76, 0x7a, 0x31, 0xbb, 0x61, 0xfd, 0x19, 0x8b,
	0xb2, 0xd7, 0x45, 0x19, 0xe7, 0xa1, 0x49, 0xb4, 0xed, 0x42, 0xdb, 0x48, 0x2e, 0xde, 0xf2, 0x7d,
	0x54, 0xdf, 0xce, 0xee, 0x39, 0x8b, 0xb3, 0xdf, 0x35, 0xcd, 0x56, 0xf6, 0xfe, 0x6e, 0xef, 0x83,
	0xb5, 0x92, 0xde, 0xa5, 0x8d, 0xe5, 0xfd, 0x1e, 0xd4, 0x12, 0x1c, 0x5a, 0x66, 0x3a, 0x99, 0xcb,
	0x04, 0x51, 0x71, 0x11, 0x18, 0x41, 0xc9, 0x08, 0x36, 0xa7, 0xf4, 0x56, 0xf6, 0x3a, 0x52, 0xe6,
	0x6e, 0xc2, 0x22, 0xf6, 0xbb, 0xe6, 0xc9, 0x52, 0xa3, 0xbf, 0x82, 0xca, 0xc2, 0x04, 0x9f, 0xb4,
	0xca, 0x86, 0x62, 0x8f, 0x73, 0x8a, 0xdd, 0xce, 0xcd, 0xc9, 0x7f, 0xaa, 0x50, 0x1d, 0x24, 0x61,
	0x4f, 0x29, 0xa9, 0xe8, 0x0e, 0x40, 0x4f, 0xa9, 0x49, 0x6a, 0x1e, 0x8e, 0xe4, 0x01, 0x6d, 0x42,
	0xad, 0xa7, 0x54, 0x97, 0xfb, 0x32, 0xe0, 0xa4, 0xe0, 0x96, 0x3d, 0x61, 0x96, 0x45, 0x4a, 0xa0,
	0xd1, 0x53, 0x0a, 0x43, 0xe9, 0x7d, 0x8c, 0x12, 0x4d, 0x4a, 0x74, 0x1f, 0x76, 0x7b, 0x4a, 0x0d,
	0xe5, 0xe5, 0x0a, 0x14, 0xd9, 0x72, 0x42, 0xf7, 0x82, 0x4b, 0x5e, 0xa7, 0x71, 0x4c, 0xca, 0xf4,
	0x08, 0xf6, 0x57, 0x9e, 0xd7, 0xac, 0xb7, 0x9d, 0x35, 0x8a, 0x86, 0x52, 0x5b, 0xbf, 0x15, 0xba,
	0x0b, 0x75, 0xb4, 0x66, 0x9a, 0x5d, 0xb3, 0x84, 0x93, 0x2a, 0xfd, 0x02, 0x9e, 0xa0, 0x95, 0x9d,
	0xa3, 0x67, 0xab, 0x07, 0x22, 0xa6, 0x6b, 0x94, 0x6a, 0x52, 0x73, 0xfe, 0x7f, 0x60, 0xd1, 0x9a,
	0x76, 0x32, 0x24, 0x40, 0x0f, 0x80, 0x38, 0xff, 0xfd, 0x6e, 0x3f, 0xe9, 0xcd, 0x17, 0x7a, 0x49,
	0xea, 0xf4, 0x21, 0xec, 0x19, 0xe0, 0xe6, 0xaa, 0xb3, 0x6f, 0x38, 0x45, 0x1a, 0xce, 0x18, 0x3d,
	0xf4, 0x13, 0xcc, 0x59, 0x24, 0x42, 0xd2, 0x74, 0x10, 0xdf, 0x22, 0xbf, 0x33, 0x0f, 0x3b, 0xce,
	0xd4, 0xb4, 0x4e, 0x90, 0x49, 0x77, 0x69, 0x0b, 0x0e, 0xb2, 0x68, 0x4c, 0xdd, 0x32, 0x0d, 0xa1,
	0x8f, 0xe0, 0xe1, 0x86, 0x66, 0x15, 0xed, 0x1e, 0x7d, 0x02, 0x47, 0xee, 0xd4, 0xec, 0xd9, 0xbb,
	0x52, 0x52, 0xfa, 0x19, 0xb4, 0xdc, 0x3e, 0x33, 0xe7, 0xfb, 0xc9, 0x28, 0xd5, 0xa3, 0xe9, 0x45,
	0x34, 0x8f, 0x34, 0xd9, 0xa7, 0x8f, 0xe1, 0x30, 0xcf, 0x4b, 0x5f, 0x7c, 0x60, 0x71, 0x14, 0x8c,
	0x99, 0x62, 0x73, 0x72, 0x40, 0xbf, 0x84, 0x63, 0x84, 0xcd, 0x6e, 0xb8, 0x9c, 0x4e, 0xbb, 0xb6,
	0x1d, 0x5f, 0xb3, 0x28, 0xe6, 0x01, 0xba, 0x17, 0x32, 0x0d, 0x67, 0xe4, 0x21, 0x7d, 0x0a, 0x8f,
	0x3e, 0x61, 0xd5, 0x1f, 0x91, 0x43, 0xfa, 0x0c, 0x9e, 0x7e, 0x42, 0x7d, 0xc9, 0x17, 0x9c, 0x69,
	0x72, 0x44, 0x3d, 0xf8, 0x7c, 0x03, 0xfe, 0x95, 0x48, 0xd2, 0xc5, 0x42, 0x2a, 0x9d, 0x91, 0x9e,
	0xb4, 0x1c, 0xce, 0xdc, 0x26, 0x27, 0xd1, 0x23, 0x87, 0x20, 0xd7, 0x6d, 0xd0, 0xe9, 0xb1, 0x43,
	0x90, 0xab, 0xef, 0x70, 0xe8, 0xc9, 0x1d, 0x0f, 0x1b, 0x6c, 0xfa, 0x8c, 0x1e, 0x02, 0xcd, 0x4a,
	0x25, 0x46, 0x7a, 0x66, 0xf5, 0xe4, 0x29, 0xdd, 0x83, 0x66, 0x46, 0x0d, 0x4b, 0xd3, 0xcf, 0x37,
	0x4c, 0x5f, 0xc5, 0xcc, 0xbf, 0x89, 0xd1, 0xc5, 0x17, 0x8e, 0x7f, 0x28, 0xef, 0x30, 0x31, 0x94,
	0xda, 0x52, 0xa6, 0x73, 0x91, 0x5e, 0x1b, 0x5f, 0xc7, 0x0e, 0x42, 0x6e, 0x70, 0x8e, 0x17, 0x73,
	0xa6, 0x7e, 0xe6, 0xd8, 0xd2, 0x89, 0xd3, 0x6b, 0xcb, 0x42, 0xbd, 0x58, 0x12, 0xcf, 0x15, 0x1e,
	0x4d, 0xc6, 0x2a, 0xf2, 0x79, 0x67, 0x1a, 0xae, 0x50, 0xff, 0xc2, 0x11, 0xc6, 0x78, 0x5c, 0xfd,
	0x63, 0x5c, 0x48, 0xff, 0x86, 0x7c, 0xe9, 0x54, 0x67, 0x5c, 0x70, 0xe5, 0x14, 0x96, 0x53, 0xe4,
	0x39, 0x7d, 0x0e, 0xcf, 0x50, 0xa5, 0x64, 0xba, 0x18, 0xb3, 0xe5, 0x80, 0x25, 0x9a, 0x2b, 0x57,
	0xb6, 0xbc, 0xea, 0x5f, 0xb9, 0x78, 0x86, 0x52, 0x4f, 0x6c, 0xa9, 0xcc, 0x06, 0x6b, 0x3d, 0x66,
	0x4b, 0xf2, 0x4b, 0x7a, 0x0c, 0x9f, 0xf5, 0x94, 0x32, 0x5c, 0x1b, 0xb0, 0x8f, 0x08, 0x3c, 0x47,
	0x31, 0x4c, 0xe7, 0xa4, 0x4d, 0xbf, 0x02, 0xef, 0x96, 0xc5, 0x80, 0x23, 0x88, 0x4d, 0xbb, 0xaf,
	0x4f, 0xfe, 0x59, 0x82, 0xba, 0xfb, 0x21, 0xed, 0xc8, 0x00, 0x9f, 0x7d, 0xb5, 0xd1, 0xd8, 0x51,
	0x95, 0x3c, 0xc0, 0xa1, 0x32, 0x1a, 0xe7, 0x7b, 0x48, 0xc1, 0x4a, 0xba, 0x3c, 0xe6, 0x4e, 0x52,
	0xa4, 0x00, 0xdb, 0xa3, 0x31, 0xfe, 0x85, 0x90, 0x12, 0x8e, 0xac, 0xd1, 0xf8, 0x8c, 0x1b, 0x72,
	0x25, 0x64, 0xcb, 0x5a, 0xe7, 0x4f, 0x70, 0x52, 0xc6, 0xde, 0x1e, 0x8d, 0x6f, 0xbd, 0x64, 0xc9,
	0x36, 0xce, 0x14, 0x34, 0xb4, 0xff, 0x15, 0x09, 0xa9, 0x60, 0x4d, 0x46, 0xe3, 0xcd, 0xdf, 0x01,
	0x52, 0xb5, 0xbb, 0x6f, 0x3d, 0x55, 0x49, 0x6d, 0xdd, 0x38, 0x7b, 0x3b, 0x12, 0xb0, 0x3e, 0xff,
	0x20, 0x23, 0x9f, 0xe3, 0xac, 0x22, 0x75, 0xe4, 0xf9, 0xea, 0xec, 0x8d, 0xe7, 0x1e, 0x69, 0xac,
	0x7b, 0x5e, 0x3d, 0x56, 0x48, 0xd3, 0xfa, 0x78, 0xa5, 0x24, 0x0b, 0x7c, 0x96, 0x68, 0xb2, 0x43,
	0x29, 0xec, 0x8c, 0xc6, 0x13, 0x2e, 0x82, 0x15, 0xaa, 0x5d, 0x9b, 0xb4, 0x2b, 0x11, 0x19, 0x13,
	0x62, 0x83, 0xb6, 0xae, 0x06, 0x2c, 0x8a, 0xc9, 0xde, 0x5a, 0x1a, 0xce, 0xa2, 0xa9, 0x4e, 0x08,
	0xc5, 0xa9, 0x95, 0xd9, 0x60, 0x71, 0x5e, 0xa7, 0x82, 0xec, 0xe3, 0x7c, 0x5a, 0x0f, 0x23, 0xa3,
	0x1d, 0x39, 0xb0, 0xc8, 0x87, 0x52, 0x47, 0xd3, 0x25, 0x9e, 0xbb, 0xd6, 0x15, 0x0f, 0x4f, 0xfe,
	0xed, 0xfe, 0xe2, 0xb1, 0x99, 0x69, 0x03, 0xaa, 0x5d, 0x36, 0xe5, 0x22, 0x1c, 0x9c, 0x93, 0x02,
	0xae, 0xce, 0x52, 0x26, 0xba, 0x4c, 0x84, 0xa4, 0x88, 0x30, 0xbb, 0x52, 0x84, 0x6f, 0x59, 0x34,
	0x38, 0xb7, 0xb5, 0xfa, 0x91, 0x89, 0xce, 0xcc, 0x1a, 0x6f, 0xe1, 0x7a, 0x32, 0x63, 0x12, 0x37,
	0x0c, 0xce, 0x09, 0xfe, 0x18, 0x56, 0x87, 0x91, 0x08, 0x4f, 0x71, 0xb5, 0x8d, 0xda, 0x77, 0x91,
	0x38, 0x8f, 0x98, 0x08, 0xcf, 0xde, 0x90, 0x4a, 0x7e, 0xd0, 0xd9, 0x7b, 0x52, 0xc5, 0x34, 0xd9,
	0xd5, 0x77, 0x7f, 0xfa, 0xf6, 0xe5, 0x6f, 0x08, 0xfe, 0x73, 0x6e, 0x0f, 0xa3, 0x74, 0x18, 0xa5,
	0x04, 0x68, 0x05, 0x4a, 0xdd, 0xee, 0x7b, 0x52, 0xc7, 0x3d, 0xef, 0x52, 0x7e, 0x11, 0xa5, 0x83,
	0x73, 0xd2, 0x40, 0x38, 0x17, 0x4c, 0xbc, 0x9f, 0x49, 0x5c, 0x36, 0xcd, 0x12, 0xd7, 0x66, 0xb9,
	0x83, 0xcb, 0xf7, 0x33, 0x26, 0xc2, 0x1f, 0xf9, 0xe0, 0x9c, 0xec, 0x9e, 0xfc, 0x16, 0x1a, 0xa3,
	0x05, 0x17, 0xab, 0x38, 0x29, 0xec, 0x58, 0x5a, 0x9e, 0x8a, 0xa0, 0x27, 0xf0, 0x7e, 0x28, 0xe4,
	0xb2, 0xd7, 0x52, 0x99, 0x49, 0x42, 0x8a, 0x27, 0xdf, 0x43, 0x03, 0xa9, 0xd9, 0x75, 0xff, 0xbc,
	0xb4, 0x0a, 0x5b, 0x6f, 0xf9, 0x47, 0x4d, 0x1e, 0xd0, 0x1a, 0x94, 0x7b, 0x73, 0xf9, 0xc7, 0x88,
	0x14, 0xf0, 0xd3, 0xd0, 0x84, 0x14, 0x69, 0x1d, 0x2a, 0xaf, 0xd2, 0x28, 0x0e, 0x22, 0x41, 0x4a,
	0x27, 0x6f, 0xa0, 0x89, 0x9b, 0x27, 0xf8, 0x67, 0x6d, 0x76, 0xd7, 0xa1, 0x72, 0x25, 0xa2, 0x0e,
	0x96, 0xf9, 0x01, 0x86, 0xd8, 0x17, 0xae, 0x2b, 0x1a, 0x50, 0xed, 0x0b, 0x3b, 0xde, 0xec, 0x55,
	0xdc, 0x17, 0xa7, 0x71, 0x6c, 0x05, 0x09, 0x29, 0x9d, 0x0c, 0x01, 0x4c, 0xf9, 0xed, 0xbf, 0x55,
	0x0d, 0xca, 0x38, 0xa5, 0xb1, 0xc1, 0xea, 0x50, 0xc9, 0x2e, 0xf8, 0x02, 0x92, 0xe2, 0xf6, 0x70,
	0x2b, 0xa2, 0x70, 0xcc, 0x54, 0xc2, 0xcd, 0x0d, 0x67, 0x1e, 0x06, 0xa4, 0x74, 0xf2, 0x08, 0x1a,
	0xa7, 0x6b, 0x8f, 0x66, 0x1b, 0x0c, 0x72, 0xad, 0xf0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e,
	0xd6, 0xd3, 0x7d, 0x83, 0x12, 0x00, 0x00,
}
