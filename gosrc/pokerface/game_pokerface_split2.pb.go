// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game_pokerface_split2.proto

package pokerface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomState int32

const (
	// RoomIdle 房间空闲
	RoomState_SRoomIdle RoomState = 0
	// RoomWaiting 房间正在等待玩家进入
	RoomState_SRoomWaiting RoomState = 1
	// RoomPlaying 游戏正在进行中
	RoomState_SRoomPlaying RoomState = 2
	// 房间已经删除
	RoomState_SRoomDeleted RoomState = 3
)

var RoomState_name = map[int32]string{
	0: "SRoomIdle",
	1: "SRoomWaiting",
	2: "SRoomPlaying",
	3: "SRoomDeleted",
}

var RoomState_value = map[string]int32{
	"SRoomIdle":    0,
	"SRoomWaiting": 1,
	"SRoomPlaying": 2,
	"SRoomDeleted": 3,
}

func (x RoomState) Enum() *RoomState {
	p := new(RoomState)
	*p = x
	return p
}

func (x RoomState) String() string {
	return proto.EnumName(RoomState_name, int32(x))
}

func (x *RoomState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RoomState_value, data, "RoomState")
	if err != nil {
		return err
	}
	*x = RoomState(value)
	return nil
}

func (RoomState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{0}
}

type PlayerState int32

const (
	PlayerState_PSNone    PlayerState = 0
	PlayerState_PSReady   PlayerState = 1
	PlayerState_PSOffline PlayerState = 2
	PlayerState_PSPlaying PlayerState = 3
)

var PlayerState_name = map[int32]string{
	0: "PSNone",
	1: "PSReady",
	2: "PSOffline",
	3: "PSPlaying",
}

var PlayerState_value = map[string]int32{
	"PSNone":    0,
	"PSReady":   1,
	"PSOffline": 2,
	"PSPlaying": 3,
}

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}

func (x PlayerState) String() string {
	return proto.EnumName(PlayerState_name, int32(x))
}

func (x *PlayerState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerState_value, data, "PlayerState")
	if err != nil {
		return err
	}
	*x = PlayerState(value)
	return nil
}

func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{1}
}

// 解散请求的状态
type DisbandState int32

const (
	DisbandState_Waiting                        DisbandState = 1
	DisbandState_Done                           DisbandState = 2
	DisbandState_DoneWithOtherReject            DisbandState = 3
	DisbandState_DoneWithRoomServerNotResponse  DisbandState = 4
	DisbandState_DoneWithWaitReplyTimeout       DisbandState = 5
	DisbandState_ErrorDuplicateAcquire          DisbandState = 6
	DisbandState_ErrorNeedOwnerWhenGameNotStart DisbandState = 7
	DisbandState_ErrorWatcherNotDisband         DisbandState = 8
)

var DisbandState_name = map[int32]string{
	1: "Waiting",
	2: "Done",
	3: "DoneWithOtherReject",
	4: "DoneWithRoomServerNotResponse",
	5: "DoneWithWaitReplyTimeout",
	6: "ErrorDuplicateAcquire",
	7: "ErrorNeedOwnerWhenGameNotStart",
	8: "ErrorWatcherNotDisband",
}

var DisbandState_value = map[string]int32{
	"Waiting":                        1,
	"Done":                           2,
	"DoneWithOtherReject":            3,
	"DoneWithRoomServerNotResponse":  4,
	"DoneWithWaitReplyTimeout":       5,
	"ErrorDuplicateAcquire":          6,
	"ErrorNeedOwnerWhenGameNotStart": 7,
	"ErrorWatcherNotDisband":         8,
}

func (x DisbandState) Enum() *DisbandState {
	p := new(DisbandState)
	*p = x
	return p
}

func (x DisbandState) String() string {
	return proto.EnumName(DisbandState_name, int32(x))
}

func (x *DisbandState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DisbandState_value, data, "DisbandState")
	if err != nil {
		return err
	}
	*x = DisbandState(value)
	return nil
}

func (DisbandState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{2}
}

type TipCode int32

const (
	TipCode_TCNone                        TipCode = 0
	TipCode_TCWaitOpponentsAction         TipCode = 1
	TipCode_TCDonateFailedNoEnoughDiamond TipCode = 2
)

var TipCode_name = map[int32]string{
	0: "TCNone",
	1: "TCWaitOpponentsAction",
	2: "TCDonateFailedNoEnoughDiamond",
}

var TipCode_value = map[string]int32{
	"TCNone":                        0,
	"TCWaitOpponentsAction":         1,
	"TCDonateFailedNoEnoughDiamond": 2,
}

func (x TipCode) Enum() *TipCode {
	p := new(TipCode)
	*p = x
	return p
}

func (x TipCode) String() string {
	return proto.EnumName(TipCode_name, int32(x))
}

func (x *TipCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TipCode_value, data, "TipCode")
	if err != nil {
		return err
	}
	*x = TipCode(value)
	return nil
}

func (TipCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{3}
}

// 房间删除原因
type RoomDeleteReason int32

const (
	RoomDeleteReason_IdleTimeout            RoomDeleteReason = 1
	RoomDeleteReason_DisbandByOwnerFromRMS  RoomDeleteReason = 2
	RoomDeleteReason_DisbandByApplication   RoomDeleteReason = 3
	RoomDeleteReason_DisbandBySystem        RoomDeleteReason = 4
	RoomDeleteReason_DisbandMaxHand         RoomDeleteReason = 5
	RoomDeleteReason_DisbandInLoseProtected RoomDeleteReason = 6
)

var RoomDeleteReason_name = map[int32]string{
	1: "IdleTimeout",
	2: "DisbandByOwnerFromRMS",
	3: "DisbandByApplication",
	4: "DisbandBySystem",
	5: "DisbandMaxHand",
	6: "DisbandInLoseProtected",
}

var RoomDeleteReason_value = map[string]int32{
	"IdleTimeout":            1,
	"DisbandByOwnerFromRMS":  2,
	"DisbandByApplication":   3,
	"DisbandBySystem":        4,
	"DisbandMaxHand":         5,
	"DisbandInLoseProtected": 6,
}

func (x RoomDeleteReason) Enum() *RoomDeleteReason {
	p := new(RoomDeleteReason)
	*p = x
	return p
}

func (x RoomDeleteReason) String() string {
	return proto.EnumName(RoomDeleteReason_name, int32(x))
}

func (x *RoomDeleteReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RoomDeleteReason_value, data, "RoomDeleteReason")
	if err != nil {
		return err
	}
	*x = RoomDeleteReason(value)
	return nil
}

func (RoomDeleteReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{4}
}

type KickoutResult int32

const (
	KickoutResult_KickoutResult_Success               KickoutResult = 1
	KickoutResult_KickoutResult_FailedGameHasStartted KickoutResult = 2
	KickoutResult_KickoutResult_FailedNeedOwner       KickoutResult = 3
	KickoutResult_KickoutResult_FailedPlayerNotExist  KickoutResult = 4
)

var KickoutResult_name = map[int32]string{
	1: "KickoutResult_Success",
	2: "KickoutResult_FailedGameHasStartted",
	3: "KickoutResult_FailedNeedOwner",
	4: "KickoutResult_FailedPlayerNotExist",
}

var KickoutResult_value = map[string]int32{
	"KickoutResult_Success":               1,
	"KickoutResult_FailedGameHasStartted": 2,
	"KickoutResult_FailedNeedOwner":       3,
	"KickoutResult_FailedPlayerNotExist":  4,
}

func (x KickoutResult) Enum() *KickoutResult {
	p := new(KickoutResult)
	*p = x
	return p
}

func (x KickoutResult) String() string {
	return proto.EnumName(KickoutResult_name, int32(x))
}

func (x *KickoutResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(KickoutResult_value, data, "KickoutResult")
	if err != nil {
		return err
	}
	*x = KickoutResult(value)
	return nil
}

func (KickoutResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{5}
}

// 进入房间结果
type EnterRoomStatus int32

const (
	EnterRoomStatus_Success                        EnterRoomStatus = 0
	EnterRoomStatus_RoomNotExist                   EnterRoomStatus = 1
	EnterRoomStatus_RoomIsFulled                   EnterRoomStatus = 2
	EnterRoomStatus_RoomPlaying                    EnterRoomStatus = 3
	EnterRoomStatus_InAnotherRoom                  EnterRoomStatus = 4
	EnterRoomStatus_MonkeyRoomUserIDNotMatch       EnterRoomStatus = 5
	EnterRoomStatus_MonkeyRoomUserLoginSeqNotMatch EnterRoomStatus = 6
	EnterRoomStatus_AppModuleNeedUpgrade           EnterRoomStatus = 7
	EnterRoomStatus_InRoomBlackList                EnterRoomStatus = 8
	EnterRoomStatus_TakeoffDiamondFailedNotEnough  EnterRoomStatus = 9
	EnterRoomStatus_TakeoffDiamondFailedIO         EnterRoomStatus = 10
	EnterRoomStatus_ParseTokenError                EnterRoomStatus = 11
	EnterRoomStatus_RoomInApplicateDisband         EnterRoomStatus = 12
	EnterRoomStatus_NotClubMember                  EnterRoomStatus = 13
)

var EnterRoomStatus_name = map[int32]string{
	0:  "Success",
	1:  "RoomNotExist",
	2:  "RoomIsFulled",
	3:  "RoomPlaying",
	4:  "InAnotherRoom",
	5:  "MonkeyRoomUserIDNotMatch",
	6:  "MonkeyRoomUserLoginSeqNotMatch",
	7:  "AppModuleNeedUpgrade",
	8:  "InRoomBlackList",
	9:  "TakeoffDiamondFailedNotEnough",
	10: "TakeoffDiamondFailedIO",
	11: "ParseTokenError",
	12: "RoomInApplicateDisband",
	13: "NotClubMember",
}

var EnterRoomStatus_value = map[string]int32{
	"Success":                        0,
	"RoomNotExist":                   1,
	"RoomIsFulled":                   2,
	"RoomPlaying":                    3,
	"InAnotherRoom":                  4,
	"MonkeyRoomUserIDNotMatch":       5,
	"MonkeyRoomUserLoginSeqNotMatch": 6,
	"AppModuleNeedUpgrade":           7,
	"InRoomBlackList":                8,
	"TakeoffDiamondFailedNotEnough":  9,
	"TakeoffDiamondFailedIO":         10,
	"ParseTokenError":                11,
	"RoomInApplicateDisband":         12,
	"NotClubMember":                  13,
}

func (x EnterRoomStatus) Enum() *EnterRoomStatus {
	p := new(EnterRoomStatus)
	*p = x
	return p
}

func (x EnterRoomStatus) String() string {
	return proto.EnumName(EnterRoomStatus_name, int32(x))
}

func (x *EnterRoomStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnterRoomStatus_value, data, "EnterRoomStatus")
	if err != nil {
		return err
	}
	*x = EnterRoomStatus(value)
	return nil
}

func (EnterRoomStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{6}
}

// 进入房间后，如果有其他用户则利用
// 本消息把用户信息发送给客户端
type MsgPlayerInfo struct {
	UserID               *string  `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	ChairID              *int32   `protobuf:"varint,2,req,name=chairID" json:"chairID,omitempty"`
	State                *int32   `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	Name                 *string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Nick                 *string  `protobuf:"bytes,5,opt,name=nick" json:"nick,omitempty"`
	Sex                  *uint32  `protobuf:"varint,6,opt,name=sex" json:"sex,omitempty"`
	HeadIconURI          *string  `protobuf:"bytes,7,opt,name=headIconURI" json:"headIconURI,omitempty"`
	Ip                   *string  `protobuf:"bytes,8,opt,name=ip" json:"ip,omitempty"`
	Location             *string  `protobuf:"bytes,9,opt,name=location" json:"location,omitempty"`
	DfHands              *int32   `protobuf:"varint,10,opt,name=dfHands" json:"dfHands,omitempty"`
	Diamond              *int32   `protobuf:"varint,11,opt,name=diamond" json:"diamond,omitempty"`
	Charm                *int32   `protobuf:"varint,12,opt,name=charm" json:"charm,omitempty"`
	AvatarID             *int32   `protobuf:"varint,13,opt,name=avatarID" json:"avatarID,omitempty"`
	ClubIDs              []string `protobuf:"bytes,14,rep,name=clubIDs" json:"clubIDs,omitempty"`
	Dan                  *int32   `protobuf:"varint,15,opt,name=dan" json:"dan,omitempty"`
	IsLooker             *bool    `protobuf:"varint,16,opt,name=isLooker" json:"isLooker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerInfo) Reset()         { *m = MsgPlayerInfo{} }
func (m *MsgPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerInfo) ProtoMessage()    {}
func (*MsgPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{0}
}
func (m *MsgPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPlayerInfo.Unmarshal(m, b)
}
func (m *MsgPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPlayerInfo.Marshal(b, m, deterministic)
}
func (m *MsgPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerInfo.Merge(m, src)
}
func (m *MsgPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_MsgPlayerInfo.Size(m)
}
func (m *MsgPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerInfo proto.InternalMessageInfo

func (m *MsgPlayerInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgPlayerInfo) GetChairID() int32 {
	if m != nil && m.ChairID != nil {
		return *m.ChairID
	}
	return 0
}

func (m *MsgPlayerInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *MsgPlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MsgPlayerInfo) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *MsgPlayerInfo) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *MsgPlayerInfo) GetHeadIconURI() string {
	if m != nil && m.HeadIconURI != nil {
		return *m.HeadIconURI
	}
	return ""
}

func (m *MsgPlayerInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *MsgPlayerInfo) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *MsgPlayerInfo) GetDfHands() int32 {
	if m != nil && m.DfHands != nil {
		return *m.DfHands
	}
	return 0
}

func (m *MsgPlayerInfo) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *MsgPlayerInfo) GetCharm() int32 {
	if m != nil && m.Charm != nil {
		return *m.Charm
	}
	return 0
}

func (m *MsgPlayerInfo) GetAvatarID() int32 {
	if m != nil && m.AvatarID != nil {
		return *m.AvatarID
	}
	return 0
}

func (m *MsgPlayerInfo) GetClubIDs() []string {
	if m != nil {
		return m.ClubIDs
	}
	return nil
}

func (m *MsgPlayerInfo) GetDan() int32 {
	if m != nil && m.Dan != nil {
		return *m.Dan
	}
	return 0
}

func (m *MsgPlayerInfo) GetIsLooker() bool {
	if m != nil && m.IsLooker != nil {
		return *m.IsLooker
	}
	return false
}

// 每个玩家一手牌得分记录
type PlayerHandScoreRecord struct {
	UserID               *string  `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	WinType              *int32   `protobuf:"varint,2,req,name=winType" json:"winType,omitempty"`
	Score                *int32   `protobuf:"varint,3,req,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerHandScoreRecord) Reset()         { *m = PlayerHandScoreRecord{} }
func (m *PlayerHandScoreRecord) String() string { return proto.CompactTextString(m) }
func (*PlayerHandScoreRecord) ProtoMessage()    {}
func (*PlayerHandScoreRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{1}
}
func (m *PlayerHandScoreRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerHandScoreRecord.Unmarshal(m, b)
}
func (m *PlayerHandScoreRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerHandScoreRecord.Marshal(b, m, deterministic)
}
func (m *PlayerHandScoreRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerHandScoreRecord.Merge(m, src)
}
func (m *PlayerHandScoreRecord) XXX_Size() int {
	return xxx_messageInfo_PlayerHandScoreRecord.Size(m)
}
func (m *PlayerHandScoreRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerHandScoreRecord.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerHandScoreRecord proto.InternalMessageInfo

func (m *PlayerHandScoreRecord) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *PlayerHandScoreRecord) GetWinType() int32 {
	if m != nil && m.WinType != nil {
		return *m.WinType
	}
	return 0
}

func (m *PlayerHandScoreRecord) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 房间的牌局一手牌得分记录
type MsgRoomHandScoreRecord struct {
	// 手牌结束类型
	EndType *int32 `protobuf:"varint,1,req,name=endType" json:"endType,omitempty"`
	// 第几手牌
	HandIndex *int32 `protobuf:"varint,2,req,name=handIndex" json:"handIndex,omitempty"`
	// 本手牌每个玩家的得分情况
	PlayerRecords        []*PlayerHandScoreRecord `protobuf:"bytes,3,rep,name=playerRecords" json:"playerRecords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MsgRoomHandScoreRecord) Reset()         { *m = MsgRoomHandScoreRecord{} }
func (m *MsgRoomHandScoreRecord) String() string { return proto.CompactTextString(m) }
func (*MsgRoomHandScoreRecord) ProtoMessage()    {}
func (*MsgRoomHandScoreRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{2}
}
func (m *MsgRoomHandScoreRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRoomHandScoreRecord.Unmarshal(m, b)
}
func (m *MsgRoomHandScoreRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRoomHandScoreRecord.Marshal(b, m, deterministic)
}
func (m *MsgRoomHandScoreRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRoomHandScoreRecord.Merge(m, src)
}
func (m *MsgRoomHandScoreRecord) XXX_Size() int {
	return xxx_messageInfo_MsgRoomHandScoreRecord.Size(m)
}
func (m *MsgRoomHandScoreRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRoomHandScoreRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRoomHandScoreRecord proto.InternalMessageInfo

func (m *MsgRoomHandScoreRecord) GetEndType() int32 {
	if m != nil && m.EndType != nil {
		return *m.EndType
	}
	return 0
}

func (m *MsgRoomHandScoreRecord) GetHandIndex() int32 {
	if m != nil && m.HandIndex != nil {
		return *m.HandIndex
	}
	return 0
}

func (m *MsgRoomHandScoreRecord) GetPlayerRecords() []*PlayerHandScoreRecord {
	if m != nil {
		return m.PlayerRecords
	}
	return nil
}

// 房间信息，用于各种状态更新
type MsgRoomInfo struct {
	State                *int32                    `protobuf:"varint,1,req,name=state" json:"state,omitempty"`
	Players              []*MsgPlayerInfo          `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	OwnerID              *string                   `protobuf:"bytes,3,opt,name=ownerID" json:"ownerID,omitempty"`
	RoomNumber           *string                   `protobuf:"bytes,4,opt,name=roomNumber" json:"roomNumber,omitempty"`
	HandStartted         *int32                    `protobuf:"varint,5,opt,name=handStartted" json:"handStartted,omitempty"`
	ScoreRecords         []*MsgRoomHandScoreRecord `protobuf:"bytes,6,rep,name=scoreRecords" json:"scoreRecords,omitempty"`
	HandFinished         *int32                    `protobuf:"varint,7,opt,name=handFinished" json:"handFinished,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MsgRoomInfo) Reset()         { *m = MsgRoomInfo{} }
func (m *MsgRoomInfo) String() string { return proto.CompactTextString(m) }
func (*MsgRoomInfo) ProtoMessage()    {}
func (*MsgRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{3}
}
func (m *MsgRoomInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRoomInfo.Unmarshal(m, b)
}
func (m *MsgRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRoomInfo.Marshal(b, m, deterministic)
}
func (m *MsgRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRoomInfo.Merge(m, src)
}
func (m *MsgRoomInfo) XXX_Size() int {
	return xxx_messageInfo_MsgRoomInfo.Size(m)
}
func (m *MsgRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRoomInfo proto.InternalMessageInfo

func (m *MsgRoomInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *MsgRoomInfo) GetPlayers() []*MsgPlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *MsgRoomInfo) GetOwnerID() string {
	if m != nil && m.OwnerID != nil {
		return *m.OwnerID
	}
	return ""
}

func (m *MsgRoomInfo) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

func (m *MsgRoomInfo) GetHandStartted() int32 {
	if m != nil && m.HandStartted != nil {
		return *m.HandStartted
	}
	return 0
}

func (m *MsgRoomInfo) GetScoreRecords() []*MsgRoomHandScoreRecord {
	if m != nil {
		return m.ScoreRecords
	}
	return nil
}

func (m *MsgRoomInfo) GetHandFinished() int32 {
	if m != nil && m.HandFinished != nil {
		return *m.HandFinished
	}
	return 0
}

// 房间分数记录
type RoomScoreRecords struct {
	ScoreRecords         []*MsgRoomHandScoreRecord `protobuf:"bytes,1,rep,name=scoreRecords" json:"scoreRecords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RoomScoreRecords) Reset()         { *m = RoomScoreRecords{} }
func (m *RoomScoreRecords) String() string { return proto.CompactTextString(m) }
func (*RoomScoreRecords) ProtoMessage()    {}
func (*RoomScoreRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{4}
}
func (m *RoomScoreRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomScoreRecords.Unmarshal(m, b)
}
func (m *RoomScoreRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomScoreRecords.Marshal(b, m, deterministic)
}
func (m *RoomScoreRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomScoreRecords.Merge(m, src)
}
func (m *RoomScoreRecords) XXX_Size() int {
	return xxx_messageInfo_RoomScoreRecords.Size(m)
}
func (m *RoomScoreRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomScoreRecords.DiscardUnknown(m)
}

var xxx_messageInfo_RoomScoreRecords proto.InternalMessageInfo

func (m *RoomScoreRecords) GetScoreRecords() []*MsgRoomHandScoreRecord {
	if m != nil {
		return m.ScoreRecords
	}
	return nil
}

// 客户端发送给服务器
// 回复解散请求
type MsgDisbandAnswer struct {
	Agree                *bool    `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDisbandAnswer) Reset()         { *m = MsgDisbandAnswer{} }
func (m *MsgDisbandAnswer) String() string { return proto.CompactTextString(m) }
func (*MsgDisbandAnswer) ProtoMessage()    {}
func (*MsgDisbandAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{5}
}
func (m *MsgDisbandAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDisbandAnswer.Unmarshal(m, b)
}
func (m *MsgDisbandAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDisbandAnswer.Marshal(b, m, deterministic)
}
func (m *MsgDisbandAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisbandAnswer.Merge(m, src)
}
func (m *MsgDisbandAnswer) XXX_Size() int {
	return xxx_messageInfo_MsgDisbandAnswer.Size(m)
}
func (m *MsgDisbandAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisbandAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisbandAnswer proto.InternalMessageInfo

func (m *MsgDisbandAnswer) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

// 服务器通知客户端解散请求的执行情况
type MsgDisbandNotify struct {
	DisbandState         *int32   `protobuf:"varint,1,req,name=disbandState" json:"disbandState,omitempty"`
	Applicant            *int32   `protobuf:"varint,2,req,name=applicant" json:"applicant,omitempty"`
	Waits                []int32  `protobuf:"varint,3,rep,name=waits" json:"waits,omitempty"`
	Agrees               []int32  `protobuf:"varint,4,rep,name=agrees" json:"agrees,omitempty"`
	Rejects              []int32  `protobuf:"varint,5,rep,name=rejects" json:"rejects,omitempty"`
	Countdown            *int32   `protobuf:"varint,6,opt,name=countdown" json:"countdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDisbandNotify) Reset()         { *m = MsgDisbandNotify{} }
func (m *MsgDisbandNotify) String() string { return proto.CompactTextString(m) }
func (*MsgDisbandNotify) ProtoMessage()    {}
func (*MsgDisbandNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{6}
}
func (m *MsgDisbandNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDisbandNotify.Unmarshal(m, b)
}
func (m *MsgDisbandNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDisbandNotify.Marshal(b, m, deterministic)
}
func (m *MsgDisbandNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisbandNotify.Merge(m, src)
}
func (m *MsgDisbandNotify) XXX_Size() int {
	return xxx_messageInfo_MsgDisbandNotify.Size(m)
}
func (m *MsgDisbandNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisbandNotify.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisbandNotify proto.InternalMessageInfo

func (m *MsgDisbandNotify) GetDisbandState() int32 {
	if m != nil && m.DisbandState != nil {
		return *m.DisbandState
	}
	return 0
}

func (m *MsgDisbandNotify) GetApplicant() int32 {
	if m != nil && m.Applicant != nil {
		return *m.Applicant
	}
	return 0
}

func (m *MsgDisbandNotify) GetWaits() []int32 {
	if m != nil {
		return m.Waits
	}
	return nil
}

func (m *MsgDisbandNotify) GetAgrees() []int32 {
	if m != nil {
		return m.Agrees
	}
	return nil
}

func (m *MsgDisbandNotify) GetRejects() []int32 {
	if m != nil {
		return m.Rejects
	}
	return nil
}

func (m *MsgDisbandNotify) GetCountdown() int32 {
	if m != nil && m.Countdown != nil {
		return *m.Countdown
	}
	return 0
}

// 游戏结束每个玩家的统计信息
type MsgGameOverPlayerStat struct {
	ChairID              *int32   `protobuf:"varint,1,req,name=chairID" json:"chairID,omitempty"`
	Score                *int32   `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	WinChuckCounter      *int32   `protobuf:"varint,3,req,name=winChuckCounter" json:"winChuckCounter,omitempty"`
	WinSelfDrawnCounter  *int32   `protobuf:"varint,4,req,name=winSelfDrawnCounter" json:"winSelfDrawnCounter,omitempty"`
	ChuckerCounter       *int32   `protobuf:"varint,5,req,name=chuckerCounter" json:"chuckerCounter,omitempty"`
	RobKongCounter       *int32   `protobuf:"varint,6,opt,name=robKongCounter" json:"robKongCounter,omitempty"`
	KongerCounter        *int32   `protobuf:"varint,7,opt,name=kongerCounter" json:"kongerCounter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgGameOverPlayerStat) Reset()         { *m = MsgGameOverPlayerStat{} }
func (m *MsgGameOverPlayerStat) String() string { return proto.CompactTextString(m) }
func (*MsgGameOverPlayerStat) ProtoMessage()    {}
func (*MsgGameOverPlayerStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{7}
}
func (m *MsgGameOverPlayerStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgGameOverPlayerStat.Unmarshal(m, b)
}
func (m *MsgGameOverPlayerStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgGameOverPlayerStat.Marshal(b, m, deterministic)
}
func (m *MsgGameOverPlayerStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGameOverPlayerStat.Merge(m, src)
}
func (m *MsgGameOverPlayerStat) XXX_Size() int {
	return xxx_messageInfo_MsgGameOverPlayerStat.Size(m)
}
func (m *MsgGameOverPlayerStat) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGameOverPlayerStat.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGameOverPlayerStat proto.InternalMessageInfo

func (m *MsgGameOverPlayerStat) GetChairID() int32 {
	if m != nil && m.ChairID != nil {
		return *m.ChairID
	}
	return 0
}

func (m *MsgGameOverPlayerStat) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgGameOverPlayerStat) GetWinChuckCounter() int32 {
	if m != nil && m.WinChuckCounter != nil {
		return *m.WinChuckCounter
	}
	return 0
}

func (m *MsgGameOverPlayerStat) GetWinSelfDrawnCounter() int32 {
	if m != nil && m.WinSelfDrawnCounter != nil {
		return *m.WinSelfDrawnCounter
	}
	return 0
}

func (m *MsgGameOverPlayerStat) GetChuckerCounter() int32 {
	if m != nil && m.ChuckerCounter != nil {
		return *m.ChuckerCounter
	}
	return 0
}

func (m *MsgGameOverPlayerStat) GetRobKongCounter() int32 {
	if m != nil && m.RobKongCounter != nil {
		return *m.RobKongCounter
	}
	return 0
}

func (m *MsgGameOverPlayerStat) GetKongerCounter() int32 {
	if m != nil && m.KongerCounter != nil {
		return *m.KongerCounter
	}
	return 0
}

// 游戏结束通知，服务器下发给所有玩家
type MsgGameOver struct {
	PlayerStats          []*MsgGameOverPlayerStat `protobuf:"bytes,1,rep,name=playerStats" json:"playerStats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MsgGameOver) Reset()         { *m = MsgGameOver{} }
func (m *MsgGameOver) String() string { return proto.CompactTextString(m) }
func (*MsgGameOver) ProtoMessage()    {}
func (*MsgGameOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{8}
}
func (m *MsgGameOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgGameOver.Unmarshal(m, b)
}
func (m *MsgGameOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgGameOver.Marshal(b, m, deterministic)
}
func (m *MsgGameOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGameOver.Merge(m, src)
}
func (m *MsgGameOver) XXX_Size() int {
	return xxx_messageInfo_MsgGameOver.Size(m)
}
func (m *MsgGameOver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGameOver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGameOver proto.InternalMessageInfo

func (m *MsgGameOver) GetPlayerStats() []*MsgGameOverPlayerStat {
	if m != nil {
		return m.PlayerStats
	}
	return nil
}

// 对应OPRoomShowTips，主要是monkey房间使用
type MsgRoomShowTips struct {
	Tips                 *string  `protobuf:"bytes,1,opt,name=tips" json:"tips,omitempty"`
	TipCode              *int32   `protobuf:"varint,2,req,name=tipCode" json:"tipCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgRoomShowTips) Reset()         { *m = MsgRoomShowTips{} }
func (m *MsgRoomShowTips) String() string { return proto.CompactTextString(m) }
func (*MsgRoomShowTips) ProtoMessage()    {}
func (*MsgRoomShowTips) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{9}
}
func (m *MsgRoomShowTips) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRoomShowTips.Unmarshal(m, b)
}
func (m *MsgRoomShowTips) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRoomShowTips.Marshal(b, m, deterministic)
}
func (m *MsgRoomShowTips) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRoomShowTips.Merge(m, src)
}
func (m *MsgRoomShowTips) XXX_Size() int {
	return xxx_messageInfo_MsgRoomShowTips.Size(m)
}
func (m *MsgRoomShowTips) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRoomShowTips.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRoomShowTips proto.InternalMessageInfo

func (m *MsgRoomShowTips) GetTips() string {
	if m != nil && m.Tips != nil {
		return *m.Tips
	}
	return ""
}

func (m *MsgRoomShowTips) GetTipCode() int32 {
	if m != nil && m.TipCode != nil {
		return *m.TipCode
	}
	return 0
}

// 房间删除通知
type MsgRoomDelete struct {
	Reason               *int32   `protobuf:"varint,1,req,name=reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgRoomDelete) Reset()         { *m = MsgRoomDelete{} }
func (m *MsgRoomDelete) String() string { return proto.CompactTextString(m) }
func (*MsgRoomDelete) ProtoMessage()    {}
func (*MsgRoomDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{10}
}
func (m *MsgRoomDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRoomDelete.Unmarshal(m, b)
}
func (m *MsgRoomDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRoomDelete.Marshal(b, m, deterministic)
}
func (m *MsgRoomDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRoomDelete.Merge(m, src)
}
func (m *MsgRoomDelete) XXX_Size() int {
	return xxx_messageInfo_MsgRoomDelete.Size(m)
}
func (m *MsgRoomDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRoomDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRoomDelete proto.InternalMessageInfo

func (m *MsgRoomDelete) GetReason() int32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

// 房主请求服务器踢开某个玩家
type MsgKickout struct {
	VictimUserID         *string  `protobuf:"bytes,1,req,name=victimUserID" json:"victimUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgKickout) Reset()         { *m = MsgKickout{} }
func (m *MsgKickout) String() string { return proto.CompactTextString(m) }
func (*MsgKickout) ProtoMessage()    {}
func (*MsgKickout) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{11}
}
func (m *MsgKickout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgKickout.Unmarshal(m, b)
}
func (m *MsgKickout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgKickout.Marshal(b, m, deterministic)
}
func (m *MsgKickout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgKickout.Merge(m, src)
}
func (m *MsgKickout) XXX_Size() int {
	return xxx_messageInfo_MsgKickout.Size(m)
}
func (m *MsgKickout) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgKickout.DiscardUnknown(m)
}

var xxx_messageInfo_MsgKickout proto.InternalMessageInfo

func (m *MsgKickout) GetVictimUserID() string {
	if m != nil && m.VictimUserID != nil {
		return *m.VictimUserID
	}
	return ""
}

// 服务器回复
type MsgKickoutResult struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	VictimUserID         *string  `protobuf:"bytes,2,opt,name=victimUserID" json:"victimUserID,omitempty"`
	VictimNick           *string  `protobuf:"bytes,3,opt,name=victimNick" json:"victimNick,omitempty"`
	ByWhoNick            *string  `protobuf:"bytes,4,opt,name=byWhoNick" json:"byWhoNick,omitempty"`
	ByWhoUserID          *string  `protobuf:"bytes,5,opt,name=byWhoUserID" json:"byWhoUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgKickoutResult) Reset()         { *m = MsgKickoutResult{} }
func (m *MsgKickoutResult) String() string { return proto.CompactTextString(m) }
func (*MsgKickoutResult) ProtoMessage()    {}
func (*MsgKickoutResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{12}
}
func (m *MsgKickoutResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgKickoutResult.Unmarshal(m, b)
}
func (m *MsgKickoutResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgKickoutResult.Marshal(b, m, deterministic)
}
func (m *MsgKickoutResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgKickoutResult.Merge(m, src)
}
func (m *MsgKickoutResult) XXX_Size() int {
	return xxx_messageInfo_MsgKickoutResult.Size(m)
}
func (m *MsgKickoutResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgKickoutResult.DiscardUnknown(m)
}

var xxx_messageInfo_MsgKickoutResult proto.InternalMessageInfo

func (m *MsgKickoutResult) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *MsgKickoutResult) GetVictimUserID() string {
	if m != nil && m.VictimUserID != nil {
		return *m.VictimUserID
	}
	return ""
}

func (m *MsgKickoutResult) GetVictimNick() string {
	if m != nil && m.VictimNick != nil {
		return *m.VictimNick
	}
	return ""
}

func (m *MsgKickoutResult) GetByWhoNick() string {
	if m != nil && m.ByWhoNick != nil {
		return *m.ByWhoNick
	}
	return ""
}

func (m *MsgKickoutResult) GetByWhoUserID() string {
	if m != nil && m.ByWhoUserID != nil {
		return *m.ByWhoUserID
	}
	return ""
}

// 进入房间回复
// 进入成功后，包括玩家本身以及其他玩家，均通过OPRoomUpdate获得房间新状态和数据
type MsgEnterRoomResult struct {
	Status               *int32   `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgEnterRoomResult) Reset()         { *m = MsgEnterRoomResult{} }
func (m *MsgEnterRoomResult) String() string { return proto.CompactTextString(m) }
func (*MsgEnterRoomResult) ProtoMessage()    {}
func (*MsgEnterRoomResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{13}
}
func (m *MsgEnterRoomResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgEnterRoomResult.Unmarshal(m, b)
}
func (m *MsgEnterRoomResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgEnterRoomResult.Marshal(b, m, deterministic)
}
func (m *MsgEnterRoomResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnterRoomResult.Merge(m, src)
}
func (m *MsgEnterRoomResult) XXX_Size() int {
	return xxx_messageInfo_MsgEnterRoomResult.Size(m)
}
func (m *MsgEnterRoomResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnterRoomResult.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnterRoomResult proto.InternalMessageInfo

func (m *MsgEnterRoomResult) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type MsgDonate struct {
	ToChairID            *int32   `protobuf:"varint,1,req,name=toChairID" json:"toChairID,omitempty"`
	ItemID               *int32   `protobuf:"varint,2,req,name=itemID" json:"itemID,omitempty"`
	FromChairID          *int32   `protobuf:"varint,3,opt,name=fromChairID" json:"fromChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgDonate) Reset()         { *m = MsgDonate{} }
func (m *MsgDonate) String() string { return proto.CompactTextString(m) }
func (*MsgDonate) ProtoMessage()    {}
func (*MsgDonate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0198ff6890bab24, []int{14}
}
func (m *MsgDonate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDonate.Unmarshal(m, b)
}
func (m *MsgDonate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDonate.Marshal(b, m, deterministic)
}
func (m *MsgDonate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDonate.Merge(m, src)
}
func (m *MsgDonate) XXX_Size() int {
	return xxx_messageInfo_MsgDonate.Size(m)
}
func (m *MsgDonate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDonate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDonate proto.InternalMessageInfo

func (m *MsgDonate) GetToChairID() int32 {
	if m != nil && m.ToChairID != nil {
		return *m.ToChairID
	}
	return 0
}

func (m *MsgDonate) GetItemID() int32 {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return 0
}

func (m *MsgDonate) GetFromChairID() int32 {
	if m != nil && m.FromChairID != nil {
		return *m.FromChairID
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgPlayerInfo)(nil), "pokerface.MsgPlayerInfo")
	proto.RegisterType((*PlayerHandScoreRecord)(nil), "pokerface.PlayerHandScoreRecord")
	proto.RegisterType((*MsgRoomHandScoreRecord)(nil), "pokerface.MsgRoomHandScoreRecord")
	proto.RegisterType((*MsgRoomInfo)(nil), "pokerface.MsgRoomInfo")
	proto.RegisterType((*RoomScoreRecords)(nil), "pokerface.RoomScoreRecords")
	proto.RegisterType((*MsgDisbandAnswer)(nil), "pokerface.MsgDisbandAnswer")
	proto.RegisterType((*MsgDisbandNotify)(nil), "pokerface.MsgDisbandNotify")
	proto.RegisterType((*MsgGameOverPlayerStat)(nil), "pokerface.MsgGameOverPlayerStat")
	proto.RegisterType((*MsgGameOver)(nil), "pokerface.MsgGameOver")
	proto.RegisterType((*MsgRoomShowTips)(nil), "pokerface.MsgRoomShowTips")
	proto.RegisterType((*MsgRoomDelete)(nil), "pokerface.MsgRoomDelete")
	proto.RegisterType((*MsgKickout)(nil), "pokerface.MsgKickout")
	proto.RegisterType((*MsgKickoutResult)(nil), "pokerface.MsgKickoutResult")
	proto.RegisterType((*MsgEnterRoomResult)(nil), "pokerface.MsgEnterRoomResult")
	proto.RegisterType((*MsgDonate)(nil), "pokerface.MsgDonate")
	proto.RegisterEnum("pokerface.RoomState", RoomState_name, RoomState_value)
	proto.RegisterEnum("pokerface.PlayerState", PlayerState_name, PlayerState_value)
	proto.RegisterEnum("pokerface.DisbandState", DisbandState_name, DisbandState_value)
	proto.RegisterEnum("pokerface.TipCode", TipCode_name, TipCode_value)
	proto.RegisterEnum("pokerface.RoomDeleteReason", RoomDeleteReason_name, RoomDeleteReason_value)
	proto.RegisterEnum("pokerface.KickoutResult", KickoutResult_name, KickoutResult_value)
	proto.RegisterEnum("pokerface.EnterRoomStatus", EnterRoomStatus_name, EnterRoomStatus_value)
}

func init() { proto.RegisterFile("game_pokerface_split2.proto", fileDescriptor_b0198ff6890bab24) }

var fileDescriptor_b0198ff6890bab24 = []byte{
	// 1371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x72, 0x1a, 0x49,
	0x12, 0xde, 0xe6, 0x9f, 0x44, 0x88, 0x52, 0xcb, 0xb2, 0xdb, 0xeb, 0xfd, 0xc1, 0xbd, 0x1b, 0xbb,
	0x5a, 0x1d, 0x1c, 0x1b, 0x8e, 0xd8, 0xd8, 0xb3, 0x0c, 0x92, 0x4d, 0x58, 0x20, 0x05, 0xe0, 0xd0,
	0xd1, 0x51, 0xea, 0x4e, 0xa0, 0x87, 0xa6, 0xaa, 0xdd, 0x55, 0x2d, 0xc4, 0x65, 0x1e, 0x61, 0xde,
	0x60, 0xe6, 0x29, 0xe6, 0x45, 0xe6, 0xea, 0xa7, 0x99, 0xc8, 0xaa, 0x6e, 0x04, 0xb6, 0x0e, 0x73,
	0xa3, 0xb2, 0xf2, 0xe7, 0xab, 0xfc, 0xbe, 0xcc, 0x06, 0x5e, 0xcd, 0xf9, 0x0a, 0x3f, 0x27, 0x72,
	0x89, 0xe9, 0x8c, 0x07, 0xf8, 0x59, 0x25, 0x71, 0xa4, 0xdf, 0xbe, 0x49, 0x52, 0xa9, 0xa5, 0xdb,
	0xdc, 0xda, 0xfd, 0x9f, 0x4a, 0xd0, 0x1e, 0xaa, 0xf9, 0x4d, 0xcc, 0x37, 0x98, 0x0e, 0xc4, 0x4c,
	0xba, 0x87, 0x50, 0xcb, 0x14, 0xa6, 0x83, 0xbe, 0xe7, 0x74, 0x4b, 0xa7, 0x4d, 0xb7, 0x03, 0xf5,
	0x60, 0xc1, 0x23, 0x32, 0x94, 0xba, 0xa5, 0xd3, 0xaa, 0xdb, 0x86, 0xaa, 0xd2, 0x5c, 0xa3, 0x57,
	0x36, 0xc7, 0x03, 0xa8, 0x08, 0xbe, 0x42, 0xaf, 0xd2, 0x75, 0x4e, 0x9b, 0xe6, 0x14, 0x05, 0x4b,
	0xaf, 0x6a, 0x4e, 0x2d, 0x28, 0x2b, 0x7c, 0xf0, 0x6a, 0x5d, 0xe7, 0xb4, 0xed, 0x1e, 0x43, 0x6b,
	0x81, 0x3c, 0x1c, 0x04, 0x52, 0x7c, 0x1a, 0x0f, 0xbc, 0xba, 0xf1, 0x00, 0x28, 0x45, 0x89, 0xd7,
	0x30, 0xbf, 0x19, 0x34, 0x62, 0x19, 0x70, 0x1d, 0x49, 0xe1, 0x35, 0x8d, 0xa5, 0x03, 0xf5, 0x70,
	0xf6, 0x81, 0x8b, 0x50, 0x79, 0xd0, 0x75, 0x4e, 0xab, 0xc6, 0x10, 0xf1, 0x95, 0x14, 0xa1, 0xd7,
	0x32, 0x86, 0x36, 0x54, 0x83, 0x05, 0x4f, 0x57, 0xde, 0x81, 0x39, 0x32, 0x68, 0xf0, 0x7b, 0xae,
	0x39, 0xa1, 0x6d, 0x17, 0x11, 0x41, 0x9c, 0xdd, 0x0d, 0xfa, 0xca, 0x3b, 0xec, 0x96, 0x2d, 0xa6,
	0x90, 0x0b, 0xaf, 0x53, 0xf8, 0x47, 0xea, 0x4a, 0x52, 0x3b, 0x3c, 0xd6, 0x75, 0x4e, 0x1b, 0xfe,
	0x7b, 0x38, 0xb1, 0xcd, 0xa0, 0xb2, 0x93, 0x40, 0xa6, 0x38, 0xc6, 0x40, 0xa6, 0xe1, 0x53, 0x7d,
	0x59, 0x47, 0x62, 0xba, 0x49, 0x70, 0xa7, 0x2f, 0xe4, 0x6f, 0xfb, 0xe2, 0x67, 0xf0, 0x7c, 0xa8,
	0xe6, 0x63, 0x29, 0x57, 0xdf, 0x66, 0xea, 0x40, 0x1d, 0x45, 0x68, 0x22, 0x1d, 0x13, 0x79, 0x04,
	0xcd, 0x05, 0x17, 0xe1, 0x40, 0x84, 0xf8, 0x90, 0x27, 0xfb, 0x3f, 0xb4, 0x13, 0x03, 0xc3, 0xc6,
	0x28, 0xaf, 0xdc, 0x2d, 0x9f, 0xb6, 0xde, 0x76, 0xdf, 0x6c, 0xa9, 0x7b, 0xf3, 0x24, 0x4c, 0xff,
	0x37, 0x07, 0x5a, 0x79, 0x5d, 0x43, 0xe7, 0x96, 0x2d, 0x5b, 0xea, 0x3f, 0x50, 0xb7, 0x79, 0x95,
	0x57, 0x32, 0x19, 0xbd, 0x9d, 0x8c, 0xfb, 0x42, 0xe8, 0x40, 0x5d, 0xae, 0x85, 0x79, 0x71, 0xd9,
	0xb0, 0xe1, 0x02, 0xa4, 0x52, 0xae, 0x46, 0xd9, 0xea, 0x0e, 0xd3, 0x9c, 0xef, 0x67, 0x70, 0x40,
	0xd0, 0x27, 0x9a, 0xa7, 0x5a, 0x63, 0x68, 0x78, 0x27, 0xf4, 0x07, 0xea, 0x11, 0x93, 0xf2, 0x6a,
	0xa6, 0xd4, 0xeb, 0xfd, 0x52, 0x4f, 0xb5, 0x26, 0x4f, 0x77, 0x19, 0x89, 0x48, 0x2d, 0x30, 0x34,
	0x22, 0xa9, 0xfa, 0x1f, 0x81, 0x91, 0xf3, 0x8e, 0xa3, 0xfa, 0xae, 0x84, 0xf3, 0x07, 0x4b, 0xf8,
	0xaf, 0x81, 0x0d, 0xd5, 0xbc, 0x1f, 0xa9, 0x3b, 0x2e, 0xc2, 0x73, 0xa1, 0xd6, 0x98, 0x52, 0x93,
	0xf8, 0x3c, 0x45, 0xdb, 0xa4, 0x86, 0xff, 0xe3, 0xae, 0xcb, 0x48, 0xea, 0x68, 0xb6, 0x21, 0x64,
	0xa1, 0x35, 0x4c, 0x76, 0xda, 0x79, 0x04, 0x4d, 0x9e, 0x24, 0x71, 0x14, 0x70, 0xa1, 0x1f, 0x65,
	0xb0, 0xe6, 0x91, 0xb6, 0x8c, 0x55, 0x49, 0x36, 0x26, 0xb5, 0xf2, 0x2a, 0xe6, 0xdc, 0x81, 0x7a,
	0x8a, 0x3f, 0x60, 0xa0, 0x95, 0x57, 0x35, 0x86, 0x23, 0x68, 0x06, 0x32, 0x13, 0x3a, 0x94, 0x6b,
	0x61, 0x26, 0xa5, 0xea, 0xff, 0xea, 0xc0, 0xc9, 0x50, 0xcd, 0xdf, 0xf3, 0x15, 0x5e, 0xdf, 0x63,
	0x6a, 0x39, 0xa1, 0xb2, 0xbb, 0xc3, 0xe8, 0xec, 0x8b, 0xce, 0x16, 0x7f, 0x01, 0x9d, 0x75, 0x24,
	0x7a, 0x8b, 0x2c, 0x58, 0xf6, 0x28, 0x29, 0xa6, 0xf9, 0x94, 0xbe, 0x82, 0xe3, 0x75, 0x24, 0x26,
	0x18, 0xcf, 0xfa, 0x29, 0x5f, 0x8b, 0xe2, 0xb2, 0x62, 0x2e, 0x9f, 0xc3, 0x61, 0x40, 0x21, 0x98,
	0x16, 0xf6, 0x6a, 0x61, 0x4f, 0xe5, 0xdd, 0x47, 0x29, 0xe6, 0x85, 0xdd, 0xe0, 0x73, 0x4f, 0xa0,
	0xbd, 0x94, 0x62, 0xfe, 0xe8, 0x6e, 0x69, 0xea, 0x1b, 0xe5, 0x15, 0xa8, 0xdd, 0xff, 0x41, 0x2b,
	0xd9, 0x22, 0x2f, 0x08, 0xea, 0xee, 0x13, 0xf4, 0xfd, 0x13, 0xfd, 0xff, 0x42, 0x27, 0x67, 0x6e,
	0xb2, 0x90, 0xeb, 0x69, 0x94, 0x28, 0x5a, 0x2a, 0x3a, 0x4a, 0x28, 0x45, 0xbe, 0x14, 0x74, 0x94,
	0xf4, 0x64, 0x98, 0x3f, 0xda, 0xff, 0xbb, 0x59, 0x61, 0x14, 0xd1, 0xc7, 0x18, 0x35, 0x52, 0xcf,
	0x53, 0xe4, 0x4a, 0x0a, 0xdb, 0x24, 0xdf, 0x07, 0x18, 0xaa, 0xf9, 0xc7, 0x28, 0x58, 0xca, 0x4c,
	0x13, 0x93, 0xf7, 0x51, 0xa0, 0xa3, 0xd5, 0xa7, 0x9d, 0x71, 0xf6, 0xb5, 0xe1, 0x3c, 0xf7, 0x19,
	0xa3, 0xca, 0x62, 0x6d, 0xf3, 0xd0, 0xaf, 0xbc, 0xd9, 0xdf, 0x46, 0x96, 0x8a, 0xb1, 0xb0, 0xd6,
	0x11, 0x2d, 0x3e, 0x3b, 0x2a, 0x47, 0xd0, 0xbc, 0xdb, 0xdc, 0x2e, 0xa4, 0x31, 0xd9, 0x49, 0x39,
	0x86, 0x96, 0x31, 0xe5, 0xb1, 0x66, 0x41, 0xfa, 0xff, 0x04, 0x77, 0xa8, 0xe6, 0x17, 0xd4, 0x44,
	0xc2, 0xff, 0x58, 0x97, 0x66, 0x36, 0x53, 0x39, 0xfe, 0x1e, 0x34, 0x49, 0x8f, 0x52, 0x70, 0x8d,
	0x94, 0x5a, 0xcb, 0xde, 0x9e, 0x08, 0x0e, 0xa1, 0x16, 0x69, 0x5c, 0x6d, 0x37, 0xf4, 0x31, 0xb4,
	0x66, 0xa9, 0x5c, 0x15, 0x4e, 0x04, 0xa9, 0x7a, 0x76, 0x03, 0x4d, 0xd3, 0x54, 0x52, 0xaf, 0xdb,
	0x86, 0xe6, 0xc4, 0xac, 0x88, 0x30, 0x46, 0xf6, 0x27, 0x97, 0xc1, 0x81, 0x39, 0xde, 0xf2, 0x48,
	0x47, 0x62, 0xce, 0x9c, 0xad, 0x85, 0x88, 0x21, 0x4b, 0x69, 0x6b, 0xb1, 0x3d, 0x0e, 0x59, 0xf9,
	0xac, 0x0f, 0xad, 0x47, 0xde, 0xd0, 0x05, 0xa8, 0xdd, 0x4c, 0x46, 0x52, 0x50, 0xc2, 0x16, 0xd4,
	0x6f, 0x26, 0x63, 0xe4, 0xe1, 0x86, 0x39, 0x54, 0xec, 0x66, 0x72, 0x3d, 0x9b, 0xc5, 0x91, 0x40,
	0x56, 0xb2, 0xc7, 0x22, 0x6f, 0xf9, 0xec, 0xab, 0x03, 0x07, 0xfd, 0x9d, 0xc9, 0xa2, 0xd8, 0x47,
	0x1c, 0x0d, 0xa8, 0xf4, 0xa5, 0x09, 0x7b, 0x01, 0xc7, 0xf4, 0xeb, 0x36, 0xd2, 0x8b, 0x6b, 0xbd,
	0xa0, 0xc5, 0x48, 0x53, 0xc4, 0xca, 0xee, 0x6b, 0xf8, 0x6b, 0x71, 0x61, 0x1e, 0x88, 0xe9, 0x3d,
	0xa6, 0x23, 0x49, 0x24, 0x26, 0x52, 0x28, 0x64, 0x15, 0xf7, 0x2f, 0xe0, 0x15, 0x2e, 0x94, 0x7a,
	0x8c, 0x49, 0xbc, 0x99, 0x46, 0x2b, 0x94, 0x99, 0x66, 0x55, 0xf7, 0x25, 0x9c, 0x5c, 0xa4, 0xa9,
	0x4c, 0xfb, 0x99, 0x99, 0x64, 0x8d, 0xe7, 0xc1, 0x97, 0x2c, 0x4a, 0x91, 0xd5, 0x5c, 0x1f, 0xfe,
	0x66, 0xae, 0x46, 0x88, 0xe1, 0x35, 0x2d, 0xc3, 0xdb, 0x05, 0x0a, 0x12, 0xed, 0x48, 0x6a, 0xb3,
	0xf3, 0x58, 0xdd, 0xfd, 0x33, 0x3c, 0x37, 0x3e, 0xb7, 0x5c, 0x07, 0x0b, 0x53, 0x39, 0x7f, 0x0e,
	0x6b, 0x9c, 0x4d, 0xa0, 0x3e, 0xb5, 0x5a, 0xa5, 0xf6, 0x4c, 0x7b, 0x79, 0x7b, 0x5e, 0xc2, 0xc9,
	0xb4, 0x47, 0x48, 0xae, 0x93, 0x44, 0x0a, 0x14, 0x5a, 0x9d, 0x07, 0xf4, 0xd9, 0x63, 0x0e, 0xbd,
	0x66, 0xda, 0xb3, 0x54, 0x5f, 0xf2, 0x28, 0xc6, 0x70, 0x24, 0x2f, 0x84, 0xcc, 0xe6, 0x8b, 0xbe,
	0xfd, 0xee, 0xb1, 0xd2, 0xd9, 0xcf, 0x8e, 0xdd, 0x87, 0x96, 0x89, 0xb1, 0x51, 0xba, 0xdb, 0x81,
	0x16, 0x91, 0x59, 0xbc, 0xca, 0xa1, 0x1a, 0x39, 0x8e, 0x77, 0x1b, 0x03, 0xfd, 0x32, 0x95, 0xab,
	0xf1, 0x70, 0xc2, 0x4a, 0xae, 0x07, 0xcf, 0xb6, 0x57, 0xe7, 0x76, 0x7d, 0x99, 0xea, 0x65, 0xf7,
	0x18, 0x3a, 0xdb, 0x9b, 0xc9, 0x46, 0x69, 0x5c, 0xb1, 0x8a, 0xeb, 0xc2, 0x61, 0x6e, 0x1c, 0xf2,
	0x07, 0x5a, 0xa7, 0xac, 0x4a, 0x8f, 0xce, 0x6d, 0x03, 0x71, 0x25, 0x15, 0xde, 0xa4, 0x52, 0x63,
	0x40, 0xba, 0xa8, 0x9d, 0xfd, 0xe2, 0x40, 0x7b, 0x7f, 0x90, 0x5e, 0xc2, 0xc9, 0x9e, 0xe1, 0xf3,
	0x24, 0x0b, 0x02, 0x54, 0x8a, 0x39, 0xee, 0xbf, 0xe1, 0x1f, 0xfb, 0x57, 0xf6, 0xd5, 0xd4, 0xe3,
	0x0f, 0x5c, 0x15, 0xdf, 0x15, 0x56, 0xa2, 0xc6, 0x3c, 0xe5, 0xb8, 0x65, 0x86, 0x95, 0xdd, 0x7f,
	0x81, 0xff, 0x94, 0x8b, 0x15, 0xe9, 0x48, 0xea, 0x8b, 0x87, 0x48, 0x69, 0x56, 0x39, 0xfb, 0x5a,
	0x82, 0xce, 0x76, 0xe6, 0x26, 0x66, 0xd2, 0x48, 0x75, 0x05, 0x28, 0x33, 0x0f, 0x74, 0xb5, 0x0d,
	0x71, 0x0a, 0xcb, 0x40, 0x5d, 0x66, 0x71, 0x6c, 0xf0, 0x74, 0xa0, 0xb5, 0x3b, 0x20, 0x65, 0xf7,
	0x08, 0xda, 0x03, 0x71, 0x2e, 0xa4, 0x11, 0xa7, 0x94, 0x2b, 0xab, 0xbb, 0xa1, 0x14, 0x4b, 0xdc,
	0xd0, 0xd9, 0x0e, 0xfe, 0x48, 0xea, 0x21, 0x09, 0x85, 0x55, 0x49, 0x5c, 0xfb, 0xb7, 0x57, 0x72,
	0x4e, 0x3b, 0xfa, 0xcb, 0xd6, 0xa7, 0x46, 0x54, 0x9d, 0x27, 0xc9, 0x50, 0x86, 0x59, 0x8c, 0xf4,
	0xd4, 0x4f, 0xc9, 0x3c, 0xe5, 0x21, 0xb2, 0x3a, 0x51, 0x35, 0x10, 0x14, 0xf9, 0x2e, 0xe6, 0xc1,
	0xf2, 0x8a, 0x60, 0x36, 0x8c, 0x7a, 0xf8, 0x12, 0xe5, 0x6c, 0x96, 0xcb, 0xa5, 0xd0, 0x90, 0xb6,
	0x22, 0x62, 0x4d, 0x62, 0xee, 0x29, 0x97, 0xc1, 0x35, 0x03, 0xca, 0x79, 0xc3, 0x53, 0x85, 0x53,
	0xb9, 0x44, 0x61, 0x44, 0xcd, 0x5a, 0x14, 0x60, 0xff, 0x4d, 0x14, 0x52, 0xc1, 0x42, 0xdf, 0x07,
	0xf4, 0xe6, 0x91, 0xd4, 0xbd, 0x38, 0xbb, 0x1b, 0x22, 0xfd, 0x2b, 0x60, 0xed, 0xdf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xf1, 0xa2, 0xfc, 0xe6, 0x7a, 0x0a, 0x00, 0x00,
}
