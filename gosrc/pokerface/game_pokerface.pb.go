// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game_pokerface.proto

package pokerface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 牌的ID
type CardID int32

const (
	CardID_R2H     CardID = 0
	CardID_R2D     CardID = 1
	CardID_R2C     CardID = 2
	CardID_R2S     CardID = 3
	CardID_R3H     CardID = 4
	CardID_R3D     CardID = 5
	CardID_R3C     CardID = 6
	CardID_R3S     CardID = 7
	CardID_R4H     CardID = 8
	CardID_R4D     CardID = 9
	CardID_R4C     CardID = 10
	CardID_R4S     CardID = 11
	CardID_R5H     CardID = 12
	CardID_R5D     CardID = 13
	CardID_R5C     CardID = 14
	CardID_R5S     CardID = 15
	CardID_R6H     CardID = 16
	CardID_R6D     CardID = 17
	CardID_R6C     CardID = 18
	CardID_R6S     CardID = 19
	CardID_R7H     CardID = 20
	CardID_R7D     CardID = 21
	CardID_R7C     CardID = 22
	CardID_R7S     CardID = 23
	CardID_R8H     CardID = 24
	CardID_R8D     CardID = 25
	CardID_R8C     CardID = 26
	CardID_R8S     CardID = 27
	CardID_R9H     CardID = 28
	CardID_R9D     CardID = 29
	CardID_R9C     CardID = 30
	CardID_R9S     CardID = 31
	CardID_R10H    CardID = 32
	CardID_R10D    CardID = 33
	CardID_R10C    CardID = 34
	CardID_R10S    CardID = 35
	CardID_JH      CardID = 36
	CardID_JD      CardID = 37
	CardID_JC      CardID = 38
	CardID_JS      CardID = 39
	CardID_QH      CardID = 40
	CardID_QD      CardID = 41
	CardID_QC      CardID = 42
	CardID_QS      CardID = 43
	CardID_KH      CardID = 44
	CardID_KD      CardID = 45
	CardID_KC      CardID = 46
	CardID_KS      CardID = 47
	CardID_AH      CardID = 48
	CardID_AD      CardID = 49
	CardID_AC      CardID = 50
	CardID_AS      CardID = 51
	CardID_JOB     CardID = 52
	CardID_JOR     CardID = 53
	CardID_CARDMAX CardID = 54
)

var CardID_name = map[int32]string{
	0:  "R2H",
	1:  "R2D",
	2:  "R2C",
	3:  "R2S",
	4:  "R3H",
	5:  "R3D",
	6:  "R3C",
	7:  "R3S",
	8:  "R4H",
	9:  "R4D",
	10: "R4C",
	11: "R4S",
	12: "R5H",
	13: "R5D",
	14: "R5C",
	15: "R5S",
	16: "R6H",
	17: "R6D",
	18: "R6C",
	19: "R6S",
	20: "R7H",
	21: "R7D",
	22: "R7C",
	23: "R7S",
	24: "R8H",
	25: "R8D",
	26: "R8C",
	27: "R8S",
	28: "R9H",
	29: "R9D",
	30: "R9C",
	31: "R9S",
	32: "R10H",
	33: "R10D",
	34: "R10C",
	35: "R10S",
	36: "JH",
	37: "JD",
	38: "JC",
	39: "JS",
	40: "QH",
	41: "QD",
	42: "QC",
	43: "QS",
	44: "KH",
	45: "KD",
	46: "KC",
	47: "KS",
	48: "AH",
	49: "AD",
	50: "AC",
	51: "AS",
	52: "JOB",
	53: "JOR",
	54: "CARDMAX",
}

var CardID_value = map[string]int32{
	"R2H":     0,
	"R2D":     1,
	"R2C":     2,
	"R2S":     3,
	"R3H":     4,
	"R3D":     5,
	"R3C":     6,
	"R3S":     7,
	"R4H":     8,
	"R4D":     9,
	"R4C":     10,
	"R4S":     11,
	"R5H":     12,
	"R5D":     13,
	"R5C":     14,
	"R5S":     15,
	"R6H":     16,
	"R6D":     17,
	"R6C":     18,
	"R6S":     19,
	"R7H":     20,
	"R7D":     21,
	"R7C":     22,
	"R7S":     23,
	"R8H":     24,
	"R8D":     25,
	"R8C":     26,
	"R8S":     27,
	"R9H":     28,
	"R9D":     29,
	"R9C":     30,
	"R9S":     31,
	"R10H":    32,
	"R10D":    33,
	"R10C":    34,
	"R10S":    35,
	"JH":      36,
	"JD":      37,
	"JC":      38,
	"JS":      39,
	"QH":      40,
	"QD":      41,
	"QC":      42,
	"QS":      43,
	"KH":      44,
	"KD":      45,
	"KC":      46,
	"KS":      47,
	"AH":      48,
	"AD":      49,
	"AC":      50,
	"AS":      51,
	"JOB":     52,
	"JOR":     53,
	"CARDMAX": 54,
}

func (x CardID) Enum() *CardID {
	p := new(CardID)
	*p = x
	return p
}

func (x CardID) String() string {
	return proto.EnumName(CardID_name, int32(x))
}

func (x *CardID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardID_value, data, "CardID")
	if err != nil {
		return err
	}
	*x = CardID(value)
	return nil
}

func (CardID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{0}
}

type MessageCode int32

const (
	MessageCode_OPInvalid            MessageCode = 0
	MessageCode_OPAction             MessageCode = 1
	MessageCode_OPActionResultNotify MessageCode = 2
	MessageCode_OPActionAllowed      MessageCode = 3
	MessageCode_OPReActionAllowed    MessageCode = 5
	MessageCode_OPDeal               MessageCode = 6
	MessageCode_OPHandOver           MessageCode = 7
	MessageCode_OPRestore            MessageCode = 8
	MessageCode_OPPlayerLeaveRoom    MessageCode = 9
	MessageCode_OPPlayerEnterRoom    MessageCode = 10
	MessageCode_OPDisbandRequest     MessageCode = 11
	MessageCode_OPDisbandNotify      MessageCode = 12
	MessageCode_OPDisbandAnswer      MessageCode = 13
	MessageCode_OPPlayerReady        MessageCode = 14
	MessageCode_OPRoomDeleted        MessageCode = 15
	MessageCode_OPRoomUpdate         MessageCode = 16
	MessageCode_OPRoomShowTips       MessageCode = 17
	MessageCode_OPGameOver           MessageCode = 18
	MessageCode_OPKickout            MessageCode = 19
	MessageCode_OPDonate             MessageCode = 20
	MessageCode_OPUpdateLocation     MessageCode = 21
	MessageCode_OP2Lobby             MessageCode = 22
	MessageCode_OPUpdatePropCfg      MessageCode = 23
	MessageCode_OPPing               MessageCode = 100
	MessageCode_OPPong               MessageCode = 101
)

var MessageCode_name = map[int32]string{
	0:   "OPInvalid",
	1:   "OPAction",
	2:   "OPActionResultNotify",
	3:   "OPActionAllowed",
	5:   "OPReActionAllowed",
	6:   "OPDeal",
	7:   "OPHandOver",
	8:   "OPRestore",
	9:   "OPPlayerLeaveRoom",
	10:  "OPPlayerEnterRoom",
	11:  "OPDisbandRequest",
	12:  "OPDisbandNotify",
	13:  "OPDisbandAnswer",
	14:  "OPPlayerReady",
	15:  "OPRoomDeleted",
	16:  "OPRoomUpdate",
	17:  "OPRoomShowTips",
	18:  "OPGameOver",
	19:  "OPKickout",
	20:  "OPDonate",
	21:  "OPUpdateLocation",
	22:  "OP2Lobby",
	23:  "OPUpdatePropCfg",
	100: "OPPing",
	101: "OPPong",
}

var MessageCode_value = map[string]int32{
	"OPInvalid":            0,
	"OPAction":             1,
	"OPActionResultNotify": 2,
	"OPActionAllowed":      3,
	"OPReActionAllowed":    5,
	"OPDeal":               6,
	"OPHandOver":           7,
	"OPRestore":            8,
	"OPPlayerLeaveRoom":    9,
	"OPPlayerEnterRoom":    10,
	"OPDisbandRequest":     11,
	"OPDisbandNotify":      12,
	"OPDisbandAnswer":      13,
	"OPPlayerReady":        14,
	"OPRoomDeleted":        15,
	"OPRoomUpdate":         16,
	"OPRoomShowTips":       17,
	"OPGameOver":           18,
	"OPKickout":            19,
	"OPDonate":             20,
	"OPUpdateLocation":     21,
	"OP2Lobby":             22,
	"OPUpdatePropCfg":      23,
	"OPPing":               100,
	"OPPong":               101,
}

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}

func (x MessageCode) String() string {
	return proto.EnumName(MessageCode_name, int32(x))
}

func (x *MessageCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageCode_value, data, "MessageCode")
	if err != nil {
		return err
	}
	*x = MessageCode(value)
	return nil
}

func (MessageCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{1}
}

// 消息包装，把其他消息体格式化为byte array，
// 加上消息码构成一个GameMessage，便于解析
type GameMessage struct {
	Ops                  *int32   `protobuf:"varint,1,req,name=Ops" json:"Ops,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameMessage) Reset()         { *m = GameMessage{} }
func (m *GameMessage) String() string { return proto.CompactTextString(m) }
func (*GameMessage) ProtoMessage()    {}
func (*GameMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{0}
}
func (m *GameMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameMessage.Unmarshal(m, b)
}
func (m *GameMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameMessage.Marshal(b, m, deterministic)
}
func (m *GameMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameMessage.Merge(m, src)
}
func (m *GameMessage) XXX_Size() int {
	return xxx_messageInfo_GameMessage.Size(m)
}
func (m *GameMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GameMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GameMessage proto.InternalMessageInfo

func (m *GameMessage) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *GameMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 牌组
type MsgCardHand struct {
	CardHandType         *int32   `protobuf:"varint,1,req,name=cardHandType" json:"cardHandType,omitempty"`
	Cards                []int32  `protobuf:"varint,2,rep,name=cards" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCardHand) Reset()         { *m = MsgCardHand{} }
func (m *MsgCardHand) String() string { return proto.CompactTextString(m) }
func (*MsgCardHand) ProtoMessage()    {}
func (*MsgCardHand) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{1}
}
func (m *MsgCardHand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCardHand.Unmarshal(m, b)
}
func (m *MsgCardHand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCardHand.Marshal(b, m, deterministic)
}
func (m *MsgCardHand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardHand.Merge(m, src)
}
func (m *MsgCardHand) XXX_Size() int {
	return xxx_messageInfo_MsgCardHand.Size(m)
}
func (m *MsgCardHand) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardHand.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardHand proto.InternalMessageInfo

func (m *MsgCardHand) GetCardHandType() int32 {
	if m != nil && m.CardHandType != nil {
		return *m.CardHandType
	}
	return 0
}

func (m *MsgCardHand) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 玩家牌列表
type MsgPlayerCardList struct {
	ChairID              *int32         `protobuf:"varint,1,req,name=chairID" json:"chairID,omitempty"`
	CardCountOnHand      *int32         `protobuf:"varint,2,req,name=cardCountOnHand" json:"cardCountOnHand,omitempty"`
	CardsOnHand          []int32        `protobuf:"varint,3,rep,name=cardsOnHand" json:"cardsOnHand,omitempty"`
	DiscardedHands       []*MsgCardHand `protobuf:"bytes,4,rep,name=discardedHands" json:"discardedHands,omitempty"`
	Flowers              []int32        `protobuf:"varint,5,rep,name=flowers" json:"flowers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MsgPlayerCardList) Reset()         { *m = MsgPlayerCardList{} }
func (m *MsgPlayerCardList) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerCardList) ProtoMessage()    {}
func (*MsgPlayerCardList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{2}
}
func (m *MsgPlayerCardList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPlayerCardList.Unmarshal(m, b)
}
func (m *MsgPlayerCardList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPlayerCardList.Marshal(b, m, deterministic)
}
func (m *MsgPlayerCardList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerCardList.Merge(m, src)
}
func (m *MsgPlayerCardList) XXX_Size() int {
	return xxx_messageInfo_MsgPlayerCardList.Size(m)
}
func (m *MsgPlayerCardList) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerCardList.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerCardList proto.InternalMessageInfo

func (m *MsgPlayerCardList) GetChairID() int32 {
	if m != nil && m.ChairID != nil {
		return *m.ChairID
	}
	return 0
}

func (m *MsgPlayerCardList) GetCardCountOnHand() int32 {
	if m != nil && m.CardCountOnHand != nil {
		return *m.CardCountOnHand
	}
	return 0
}

func (m *MsgPlayerCardList) GetCardsOnHand() []int32 {
	if m != nil {
		return m.CardsOnHand
	}
	return nil
}

func (m *MsgPlayerCardList) GetDiscardedHands() []*MsgCardHand {
	if m != nil {
		return m.DiscardedHands
	}
	return nil
}

func (m *MsgPlayerCardList) GetFlowers() []int32 {
	if m != nil {
		return m.Flowers
	}
	return nil
}

// 发牌
// 服务器下发给客户端
// 客户端收到消息后，做如下处理：
// 1. 显示自己的牌
// 2. 显示其他人的牌（暗牌，庄家14张）
// 3. 显示庄家
type MsgDeal struct {
	BankerChairID        *int32               `protobuf:"varint,1,req,name=bankerChairID" json:"bankerChairID,omitempty"`
	WindFlowerID         *int32               `protobuf:"varint,2,req,name=windFlowerID" json:"windFlowerID,omitempty"`
	PlayerCardLists      []*MsgPlayerCardList `protobuf:"bytes,3,rep,name=playerCardLists" json:"playerCardLists,omitempty"`
	CardsInWall          *int32               `protobuf:"varint,4,req,name=cardsInWall" json:"cardsInWall,omitempty"`
	Dice1                *int32               `protobuf:"varint,5,opt,name=dice1" json:"dice1,omitempty"`
	Dice2                *int32               `protobuf:"varint,6,opt,name=dice2" json:"dice2,omitempty"`
	IsContinuousBanker   *bool                `protobuf:"varint,7,opt,name=isContinuousBanker" json:"isContinuousBanker,omitempty"`
	Markup               *int32               `protobuf:"varint,8,opt,name=markup" json:"markup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MsgDeal) Reset()         { *m = MsgDeal{} }
func (m *MsgDeal) String() string { return proto.CompactTextString(m) }
func (*MsgDeal) ProtoMessage()    {}
func (*MsgDeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{3}
}
func (m *MsgDeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgDeal.Unmarshal(m, b)
}
func (m *MsgDeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgDeal.Marshal(b, m, deterministic)
}
func (m *MsgDeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeal.Merge(m, src)
}
func (m *MsgDeal) XXX_Size() int {
	return xxx_messageInfo_MsgDeal.Size(m)
}
func (m *MsgDeal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeal proto.InternalMessageInfo

func (m *MsgDeal) GetBankerChairID() int32 {
	if m != nil && m.BankerChairID != nil {
		return *m.BankerChairID
	}
	return 0
}

func (m *MsgDeal) GetWindFlowerID() int32 {
	if m != nil && m.WindFlowerID != nil {
		return *m.WindFlowerID
	}
	return 0
}

func (m *MsgDeal) GetPlayerCardLists() []*MsgPlayerCardList {
	if m != nil {
		return m.PlayerCardLists
	}
	return nil
}

func (m *MsgDeal) GetCardsInWall() int32 {
	if m != nil && m.CardsInWall != nil {
		return *m.CardsInWall
	}
	return 0
}

func (m *MsgDeal) GetDice1() int32 {
	if m != nil && m.Dice1 != nil {
		return *m.Dice1
	}
	return 0
}

func (m *MsgDeal) GetDice2() int32 {
	if m != nil && m.Dice2 != nil {
		return *m.Dice2
	}
	return 0
}

func (m *MsgDeal) GetIsContinuousBanker() bool {
	if m != nil && m.IsContinuousBanker != nil {
		return *m.IsContinuousBanker
	}
	return false
}

func (m *MsgDeal) GetMarkup() int32 {
	if m != nil && m.Markup != nil {
		return *m.Markup
	}
	return 0
}

// 服务器准许客户端做游戏动作
// 服务器发送给客户端
// 客户端收到本消息后，于界面上提示或者允许用户操作
// 在用户操作完成后（或者超时），发送MsgPlayerAction消息给服务器
type MsgAllowPlayerAction struct {
	QaIndex              *int32   `protobuf:"varint,1,req,name=qaIndex" json:"qaIndex,omitempty"`
	ActionChairID        *int32   `protobuf:"varint,2,req,name=actionChairID" json:"actionChairID,omitempty"`
	AllowedActions       *int32   `protobuf:"varint,3,req,name=allowedActions" json:"allowedActions,omitempty"`
	TimeoutInSeconds     *int32   `protobuf:"varint,4,opt,name=timeoutInSeconds" json:"timeoutInSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgAllowPlayerAction) Reset()         { *m = MsgAllowPlayerAction{} }
func (m *MsgAllowPlayerAction) String() string { return proto.CompactTextString(m) }
func (*MsgAllowPlayerAction) ProtoMessage()    {}
func (*MsgAllowPlayerAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{4}
}
func (m *MsgAllowPlayerAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgAllowPlayerAction.Unmarshal(m, b)
}
func (m *MsgAllowPlayerAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgAllowPlayerAction.Marshal(b, m, deterministic)
}
func (m *MsgAllowPlayerAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllowPlayerAction.Merge(m, src)
}
func (m *MsgAllowPlayerAction) XXX_Size() int {
	return xxx_messageInfo_MsgAllowPlayerAction.Size(m)
}
func (m *MsgAllowPlayerAction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllowPlayerAction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllowPlayerAction proto.InternalMessageInfo

func (m *MsgAllowPlayerAction) GetQaIndex() int32 {
	if m != nil && m.QaIndex != nil {
		return *m.QaIndex
	}
	return 0
}

func (m *MsgAllowPlayerAction) GetActionChairID() int32 {
	if m != nil && m.ActionChairID != nil {
		return *m.ActionChairID
	}
	return 0
}

func (m *MsgAllowPlayerAction) GetAllowedActions() int32 {
	if m != nil && m.AllowedActions != nil {
		return *m.AllowedActions
	}
	return 0
}

func (m *MsgAllowPlayerAction) GetTimeoutInSeconds() int32 {
	if m != nil && m.TimeoutInSeconds != nil {
		return *m.TimeoutInSeconds
	}
	return 0
}

// 服务器准许客户端做游戏动作
// 服务器发送给客户端
// 客户端收到本消息后，于界面上提示或者允许用户操作
// 在用户操作完成后（或者超时），发送MsgPlayerAction消息给服务器
type MsgAllowPlayerReAction struct {
	QaIndex              *int32       `protobuf:"varint,1,req,name=qaIndex" json:"qaIndex,omitempty"`
	ActionChairID        *int32       `protobuf:"varint,2,req,name=actionChairID" json:"actionChairID,omitempty"`
	AllowedActions       *int32       `protobuf:"varint,3,req,name=allowedActions" json:"allowedActions,omitempty"`
	TimeoutInSeconds     *int32       `protobuf:"varint,4,opt,name=timeoutInSeconds" json:"timeoutInSeconds,omitempty"`
	PrevActionChairID    *int32       `protobuf:"varint,5,opt,name=prevActionChairID" json:"prevActionChairID,omitempty"`
	PrevActionHand       *MsgCardHand `protobuf:"bytes,6,opt,name=prevActionHand" json:"prevActionHand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MsgAllowPlayerReAction) Reset()         { *m = MsgAllowPlayerReAction{} }
func (m *MsgAllowPlayerReAction) String() string { return proto.CompactTextString(m) }
func (*MsgAllowPlayerReAction) ProtoMessage()    {}
func (*MsgAllowPlayerReAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{5}
}
func (m *MsgAllowPlayerReAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgAllowPlayerReAction.Unmarshal(m, b)
}
func (m *MsgAllowPlayerReAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgAllowPlayerReAction.Marshal(b, m, deterministic)
}
func (m *MsgAllowPlayerReAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAllowPlayerReAction.Merge(m, src)
}
func (m *MsgAllowPlayerReAction) XXX_Size() int {
	return xxx_messageInfo_MsgAllowPlayerReAction.Size(m)
}
func (m *MsgAllowPlayerReAction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAllowPlayerReAction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAllowPlayerReAction proto.InternalMessageInfo

func (m *MsgAllowPlayerReAction) GetQaIndex() int32 {
	if m != nil && m.QaIndex != nil {
		return *m.QaIndex
	}
	return 0
}

func (m *MsgAllowPlayerReAction) GetActionChairID() int32 {
	if m != nil && m.ActionChairID != nil {
		return *m.ActionChairID
	}
	return 0
}

func (m *MsgAllowPlayerReAction) GetAllowedActions() int32 {
	if m != nil && m.AllowedActions != nil {
		return *m.AllowedActions
	}
	return 0
}

func (m *MsgAllowPlayerReAction) GetTimeoutInSeconds() int32 {
	if m != nil && m.TimeoutInSeconds != nil {
		return *m.TimeoutInSeconds
	}
	return 0
}

func (m *MsgAllowPlayerReAction) GetPrevActionChairID() int32 {
	if m != nil && m.PrevActionChairID != nil {
		return *m.PrevActionChairID
	}
	return 0
}

func (m *MsgAllowPlayerReAction) GetPrevActionHand() *MsgCardHand {
	if m != nil {
		return m.PrevActionHand
	}
	return nil
}

// 玩家执行动作
// 客户端必须是收到服务器允许动作消息并
// 通过界面让玩家完成操作之后，通过该消息通知服务器用户执行了动作
// 客户端需要填写正确的qaIndex，以及action（这两个参数都是从服务器下发）
type MsgPlayerAction struct {
	// QA索引，该索引是服务器通过出牌许可消息下发的，客户端需要回填于此
	// QA索引的目的是为了服务器对消息的控制：服务器对于新收到的消息如果其QA索引
	// 不等于服务器当前期待的QA索引，服务器将会抛弃该消息
	// QA索引就是流水号，QA代表Question&Answer
	// 本文档其余处QA索引意义与此一致
	QaIndex              *int32   `protobuf:"varint,1,req,name=qaIndex" json:"qaIndex,omitempty"`
	Action               *int32   `protobuf:"varint,2,req,name=action" json:"action,omitempty"`
	Flags                *int32   `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Cards                []int32  `protobuf:"varint,4,rep,name=cards" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerAction) Reset()         { *m = MsgPlayerAction{} }
func (m *MsgPlayerAction) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerAction) ProtoMessage()    {}
func (*MsgPlayerAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{6}
}
func (m *MsgPlayerAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPlayerAction.Unmarshal(m, b)
}
func (m *MsgPlayerAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPlayerAction.Marshal(b, m, deterministic)
}
func (m *MsgPlayerAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerAction.Merge(m, src)
}
func (m *MsgPlayerAction) XXX_Size() int {
	return xxx_messageInfo_MsgPlayerAction.Size(m)
}
func (m *MsgPlayerAction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerAction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerAction proto.InternalMessageInfo

func (m *MsgPlayerAction) GetQaIndex() int32 {
	if m != nil && m.QaIndex != nil {
		return *m.QaIndex
	}
	return 0
}

func (m *MsgPlayerAction) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *MsgPlayerAction) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *MsgPlayerAction) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 服务器通知所有玩家某个玩家进行了何种动作
// 客户端收到消息后，对界面进行更新或者播放对应动作动画
type MsgActionResultNotify struct {
	TargetChairID        *int32       `protobuf:"varint,1,req,name=targetChairID" json:"targetChairID,omitempty"`
	Action               *int32       `protobuf:"varint,2,req,name=action" json:"action,omitempty"`
	ActionHand           *MsgCardHand `protobuf:"bytes,3,opt,name=actionHand" json:"actionHand,omitempty"`
	CardsInWall          *int32       `protobuf:"varint,4,opt,name=cardsInWall" json:"cardsInWall,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MsgActionResultNotify) Reset()         { *m = MsgActionResultNotify{} }
func (m *MsgActionResultNotify) String() string { return proto.CompactTextString(m) }
func (*MsgActionResultNotify) ProtoMessage()    {}
func (*MsgActionResultNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{7}
}
func (m *MsgActionResultNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgActionResultNotify.Unmarshal(m, b)
}
func (m *MsgActionResultNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgActionResultNotify.Marshal(b, m, deterministic)
}
func (m *MsgActionResultNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActionResultNotify.Merge(m, src)
}
func (m *MsgActionResultNotify) XXX_Size() int {
	return xxx_messageInfo_MsgActionResultNotify.Size(m)
}
func (m *MsgActionResultNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActionResultNotify.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActionResultNotify proto.InternalMessageInfo

func (m *MsgActionResultNotify) GetTargetChairID() int32 {
	if m != nil && m.TargetChairID != nil {
		return *m.TargetChairID
	}
	return 0
}

func (m *MsgActionResultNotify) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *MsgActionResultNotify) GetActionHand() *MsgCardHand {
	if m != nil {
		return m.ActionHand
	}
	return nil
}

func (m *MsgActionResultNotify) GetCardsInWall() int32 {
	if m != nil && m.CardsInWall != nil {
		return *m.CardsInWall
	}
	return 0
}

// 掉线恢复
type MsgRestore struct {
	MsgDeal              *MsgDeal     `protobuf:"bytes,1,req,name=msgDeal" json:"msgDeal,omitempty"`
	PrevActionChairID    *int32       `protobuf:"varint,2,opt,name=prevActionChairID" json:"prevActionChairID,omitempty"`
	PrevActionHand       *MsgCardHand `protobuf:"bytes,3,opt,name=prevActionHand" json:"prevActionHand,omitempty"`
	LandlordChairID      *int32       `protobuf:"varint,4,opt,name=landlordChairID" json:"landlordChairID,omitempty"`
	Multiple             *int32       `protobuf:"varint,5,opt,name=multiple" json:"multiple,omitempty"`
	LastAwardCards       []int32      `protobuf:"varint,6,rep,name=lastAwardCards" json:"lastAwardCards,omitempty"`
	PlayersListA         []int32      `protobuf:"varint,7,rep,name=playersListA" json:"playersListA,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MsgRestore) Reset()         { *m = MsgRestore{} }
func (m *MsgRestore) String() string { return proto.CompactTextString(m) }
func (*MsgRestore) ProtoMessage()    {}
func (*MsgRestore) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{8}
}
func (m *MsgRestore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRestore.Unmarshal(m, b)
}
func (m *MsgRestore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRestore.Marshal(b, m, deterministic)
}
func (m *MsgRestore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRestore.Merge(m, src)
}
func (m *MsgRestore) XXX_Size() int {
	return xxx_messageInfo_MsgRestore.Size(m)
}
func (m *MsgRestore) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRestore.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRestore proto.InternalMessageInfo

func (m *MsgRestore) GetMsgDeal() *MsgDeal {
	if m != nil {
		return m.MsgDeal
	}
	return nil
}

func (m *MsgRestore) GetPrevActionChairID() int32 {
	if m != nil && m.PrevActionChairID != nil {
		return *m.PrevActionChairID
	}
	return 0
}

func (m *MsgRestore) GetPrevActionHand() *MsgCardHand {
	if m != nil {
		return m.PrevActionHand
	}
	return nil
}

func (m *MsgRestore) GetLandlordChairID() int32 {
	if m != nil && m.LandlordChairID != nil {
		return *m.LandlordChairID
	}
	return 0
}

func (m *MsgRestore) GetMultiple() int32 {
	if m != nil && m.Multiple != nil {
		return *m.Multiple
	}
	return 0
}

func (m *MsgRestore) GetLastAwardCards() []int32 {
	if m != nil {
		return m.LastAwardCards
	}
	return nil
}

func (m *MsgRestore) GetPlayersListA() []int32 {
	if m != nil {
		return m.PlayersListA
	}
	return nil
}

// 大胡者的计分
type MsgPlayerScoreGreatWin struct {
	BaseWinScore          *int32   `protobuf:"varint,1,req,name=baseWinScore" json:"baseWinScore,omitempty"`
	GreatWinType          *int32   `protobuf:"varint,2,req,name=greatWinType" json:"greatWinType,omitempty"`
	GreatWinPoints        *int32   `protobuf:"varint,3,req,name=greatWinPoints" json:"greatWinPoints,omitempty"`
	TrimGreatWinPoints    *int32   `protobuf:"varint,4,req,name=trimGreatWinPoints" json:"trimGreatWinPoints,omitempty"`
	ContinuousBankerExtra *int32   `protobuf:"varint,5,opt,name=continuousBankerExtra" json:"continuousBankerExtra,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MsgPlayerScoreGreatWin) Reset()         { *m = MsgPlayerScoreGreatWin{} }
func (m *MsgPlayerScoreGreatWin) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerScoreGreatWin) ProtoMessage()    {}
func (*MsgPlayerScoreGreatWin) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{9}
}
func (m *MsgPlayerScoreGreatWin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPlayerScoreGreatWin.Unmarshal(m, b)
}
func (m *MsgPlayerScoreGreatWin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPlayerScoreGreatWin.Marshal(b, m, deterministic)
}
func (m *MsgPlayerScoreGreatWin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerScoreGreatWin.Merge(m, src)
}
func (m *MsgPlayerScoreGreatWin) XXX_Size() int {
	return xxx_messageInfo_MsgPlayerScoreGreatWin.Size(m)
}
func (m *MsgPlayerScoreGreatWin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerScoreGreatWin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerScoreGreatWin proto.InternalMessageInfo

func (m *MsgPlayerScoreGreatWin) GetBaseWinScore() int32 {
	if m != nil && m.BaseWinScore != nil {
		return *m.BaseWinScore
	}
	return 0
}

func (m *MsgPlayerScoreGreatWin) GetGreatWinType() int32 {
	if m != nil && m.GreatWinType != nil {
		return *m.GreatWinType
	}
	return 0
}

func (m *MsgPlayerScoreGreatWin) GetGreatWinPoints() int32 {
	if m != nil && m.GreatWinPoints != nil {
		return *m.GreatWinPoints
	}
	return 0
}

func (m *MsgPlayerScoreGreatWin) GetTrimGreatWinPoints() int32 {
	if m != nil && m.TrimGreatWinPoints != nil {
		return *m.TrimGreatWinPoints
	}
	return 0
}

func (m *MsgPlayerScoreGreatWin) GetContinuousBankerExtra() int32 {
	if m != nil && m.ContinuousBankerExtra != nil {
		return *m.ContinuousBankerExtra
	}
	return 0
}

// 小胡者的计分
type MsgPlayerScoreMiniWin struct {
	MiniWinType           *int32   `protobuf:"varint,1,req,name=miniWinType" json:"miniWinType,omitempty"`
	MiniWinBasicScore     *int32   `protobuf:"varint,2,req,name=miniWinBasicScore" json:"miniWinBasicScore,omitempty"`
	MiniWinFlowerScore    *int32   `protobuf:"varint,3,req,name=miniWinFlowerScore" json:"miniWinFlowerScore,omitempty"`
	MiniMultiple          *int32   `protobuf:"varint,4,req,name=miniMultiple" json:"miniMultiple,omitempty"`
	MiniWinTrimScore      *int32   `protobuf:"varint,5,req,name=miniWinTrimScore" json:"miniWinTrimScore,omitempty"`
	ContinuousBankerExtra *int32   `protobuf:"varint,6,opt,name=continuousBankerExtra" json:"continuousBankerExtra,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MsgPlayerScoreMiniWin) Reset()         { *m = MsgPlayerScoreMiniWin{} }
func (m *MsgPlayerScoreMiniWin) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerScoreMiniWin) ProtoMessage()    {}
func (*MsgPlayerScoreMiniWin) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{10}
}
func (m *MsgPlayerScoreMiniWin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPlayerScoreMiniWin.Unmarshal(m, b)
}
func (m *MsgPlayerScoreMiniWin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPlayerScoreMiniWin.Marshal(b, m, deterministic)
}
func (m *MsgPlayerScoreMiniWin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerScoreMiniWin.Merge(m, src)
}
func (m *MsgPlayerScoreMiniWin) XXX_Size() int {
	return xxx_messageInfo_MsgPlayerScoreMiniWin.Size(m)
}
func (m *MsgPlayerScoreMiniWin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerScoreMiniWin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerScoreMiniWin proto.InternalMessageInfo

func (m *MsgPlayerScoreMiniWin) GetMiniWinType() int32 {
	if m != nil && m.MiniWinType != nil {
		return *m.MiniWinType
	}
	return 0
}

func (m *MsgPlayerScoreMiniWin) GetMiniWinBasicScore() int32 {
	if m != nil && m.MiniWinBasicScore != nil {
		return *m.MiniWinBasicScore
	}
	return 0
}

func (m *MsgPlayerScoreMiniWin) GetMiniWinFlowerScore() int32 {
	if m != nil && m.MiniWinFlowerScore != nil {
		return *m.MiniWinFlowerScore
	}
	return 0
}

func (m *MsgPlayerScoreMiniWin) GetMiniMultiple() int32 {
	if m != nil && m.MiniMultiple != nil {
		return *m.MiniMultiple
	}
	return 0
}

func (m *MsgPlayerScoreMiniWin) GetMiniWinTrimScore() int32 {
	if m != nil && m.MiniWinTrimScore != nil {
		return *m.MiniWinTrimScore
	}
	return 0
}

func (m *MsgPlayerScoreMiniWin) GetContinuousBankerExtra() int32 {
	if m != nil && m.ContinuousBankerExtra != nil {
		return *m.ContinuousBankerExtra
	}
	return 0
}

// 一手牌结束后每个玩家的计分
type MsgPlayerScore struct {
	TargetChairID            *int32                  `protobuf:"varint,1,req,name=targetChairID" json:"targetChairID,omitempty"`
	WinType                  *int32                  `protobuf:"varint,2,req,name=winType" json:"winType,omitempty"`
	Score                    *int32                  `protobuf:"varint,3,req,name=score" json:"score,omitempty"`
	SpecialScore             *int32                  `protobuf:"varint,4,req,name=specialScore" json:"specialScore,omitempty"`
	GreatWin                 *MsgPlayerScoreGreatWin `protobuf:"bytes,5,opt,name=greatWin" json:"greatWin,omitempty"`
	MiniWin                  *MsgPlayerScoreMiniWin  `protobuf:"bytes,6,opt,name=miniWin" json:"miniWin,omitempty"`
	FakeWinScore             *int32                  `protobuf:"varint,7,opt,name=fakeWinScore" json:"fakeWinScore,omitempty"`
	FakeList                 []int32                 `protobuf:"varint,8,rep,name=fakeList" json:"fakeList,omitempty"`
	IsContinuousBanker       *bool                   `protobuf:"varint,9,opt,name=isContinuousBanker" json:"isContinuousBanker,omitempty"`
	ContinuousBankerMultiple *int32                  `protobuf:"varint,10,opt,name=continuousBankerMultiple" json:"continuousBankerMultiple,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                `json:"-"`
	XXX_unrecognized         []byte                  `json:"-"`
	XXX_sizecache            int32                   `json:"-"`
}

func (m *MsgPlayerScore) Reset()         { *m = MsgPlayerScore{} }
func (m *MsgPlayerScore) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerScore) ProtoMessage()    {}
func (*MsgPlayerScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{11}
}
func (m *MsgPlayerScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgPlayerScore.Unmarshal(m, b)
}
func (m *MsgPlayerScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgPlayerScore.Marshal(b, m, deterministic)
}
func (m *MsgPlayerScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerScore.Merge(m, src)
}
func (m *MsgPlayerScore) XXX_Size() int {
	return xxx_messageInfo_MsgPlayerScore.Size(m)
}
func (m *MsgPlayerScore) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerScore.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerScore proto.InternalMessageInfo

func (m *MsgPlayerScore) GetTargetChairID() int32 {
	if m != nil && m.TargetChairID != nil {
		return *m.TargetChairID
	}
	return 0
}

func (m *MsgPlayerScore) GetWinType() int32 {
	if m != nil && m.WinType != nil {
		return *m.WinType
	}
	return 0
}

func (m *MsgPlayerScore) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *MsgPlayerScore) GetSpecialScore() int32 {
	if m != nil && m.SpecialScore != nil {
		return *m.SpecialScore
	}
	return 0
}

func (m *MsgPlayerScore) GetGreatWin() *MsgPlayerScoreGreatWin {
	if m != nil {
		return m.GreatWin
	}
	return nil
}

func (m *MsgPlayerScore) GetMiniWin() *MsgPlayerScoreMiniWin {
	if m != nil {
		return m.MiniWin
	}
	return nil
}

func (m *MsgPlayerScore) GetFakeWinScore() int32 {
	if m != nil && m.FakeWinScore != nil {
		return *m.FakeWinScore
	}
	return 0
}

func (m *MsgPlayerScore) GetFakeList() []int32 {
	if m != nil {
		return m.FakeList
	}
	return nil
}

func (m *MsgPlayerScore) GetIsContinuousBanker() bool {
	if m != nil && m.IsContinuousBanker != nil {
		return *m.IsContinuousBanker
	}
	return false
}

func (m *MsgPlayerScore) GetContinuousBankerMultiple() int32 {
	if m != nil && m.ContinuousBankerMultiple != nil {
		return *m.ContinuousBankerMultiple
	}
	return 0
}

// 一手牌结束后计分
type MsgHandScore struct {
	PlayerScores         []*MsgPlayerScore `protobuf:"bytes,1,rep,name=playerScores" json:"playerScores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MsgHandScore) Reset()         { *m = MsgHandScore{} }
func (m *MsgHandScore) String() string { return proto.CompactTextString(m) }
func (*MsgHandScore) ProtoMessage()    {}
func (*MsgHandScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{12}
}
func (m *MsgHandScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgHandScore.Unmarshal(m, b)
}
func (m *MsgHandScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgHandScore.Marshal(b, m, deterministic)
}
func (m *MsgHandScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgHandScore.Merge(m, src)
}
func (m *MsgHandScore) XXX_Size() int {
	return xxx_messageInfo_MsgHandScore.Size(m)
}
func (m *MsgHandScore) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgHandScore.DiscardUnknown(m)
}

var xxx_messageInfo_MsgHandScore proto.InternalMessageInfo

func (m *MsgHandScore) GetPlayerScores() []*MsgPlayerScore {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

// 一手牌结束通知
type MsgHandOver struct {
	EndType              *int32               `protobuf:"varint,1,req,name=endType" json:"endType,omitempty"`
	PlayerCardLists      []*MsgPlayerCardList `protobuf:"bytes,2,rep,name=playerCardLists" json:"playerCardLists,omitempty"`
	Scores               *MsgHandScore        `protobuf:"bytes,3,opt,name=scores" json:"scores,omitempty"`
	ContinueAble         *bool                `protobuf:"varint,4,opt,name=continueAble" json:"continueAble,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MsgHandOver) Reset()         { *m = MsgHandOver{} }
func (m *MsgHandOver) String() string { return proto.CompactTextString(m) }
func (*MsgHandOver) ProtoMessage()    {}
func (*MsgHandOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{13}
}
func (m *MsgHandOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgHandOver.Unmarshal(m, b)
}
func (m *MsgHandOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgHandOver.Marshal(b, m, deterministic)
}
func (m *MsgHandOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgHandOver.Merge(m, src)
}
func (m *MsgHandOver) XXX_Size() int {
	return xxx_messageInfo_MsgHandOver.Size(m)
}
func (m *MsgHandOver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgHandOver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgHandOver proto.InternalMessageInfo

func (m *MsgHandOver) GetEndType() int32 {
	if m != nil && m.EndType != nil {
		return *m.EndType
	}
	return 0
}

func (m *MsgHandOver) GetPlayerCardLists() []*MsgPlayerCardList {
	if m != nil {
		return m.PlayerCardLists
	}
	return nil
}

func (m *MsgHandOver) GetScores() *MsgHandScore {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *MsgHandOver) GetContinueAble() bool {
	if m != nil && m.ContinueAble != nil {
		return *m.ContinueAble
	}
	return false
}

// 更新玩家的GPS定位信息
type MsgUpdateLocation struct {
	UserID               *string  `protobuf:"bytes,1,req,name=userID" json:"userID,omitempty"`
	Location             *string  `protobuf:"bytes,2,req,name=location" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgUpdateLocation) Reset()         { *m = MsgUpdateLocation{} }
func (m *MsgUpdateLocation) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLocation) ProtoMessage()    {}
func (*MsgUpdateLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{14}
}
func (m *MsgUpdateLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgUpdateLocation.Unmarshal(m, b)
}
func (m *MsgUpdateLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgUpdateLocation.Marshal(b, m, deterministic)
}
func (m *MsgUpdateLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLocation.Merge(m, src)
}
func (m *MsgUpdateLocation) XXX_Size() int {
	return xxx_messageInfo_MsgUpdateLocation.Size(m)
}
func (m *MsgUpdateLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLocation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLocation proto.InternalMessageInfo

func (m *MsgUpdateLocation) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *MsgUpdateLocation) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

// 更新牌局内的道具配置
type MsgUpdatePropCfg struct {
	PropCfg              *string  `protobuf:"bytes,1,req,name=propCfg" json:"propCfg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgUpdatePropCfg) Reset()         { *m = MsgUpdatePropCfg{} }
func (m *MsgUpdatePropCfg) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePropCfg) ProtoMessage()    {}
func (*MsgUpdatePropCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec282eb57ac7377, []int{15}
}
func (m *MsgUpdatePropCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgUpdatePropCfg.Unmarshal(m, b)
}
func (m *MsgUpdatePropCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgUpdatePropCfg.Marshal(b, m, deterministic)
}
func (m *MsgUpdatePropCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePropCfg.Merge(m, src)
}
func (m *MsgUpdatePropCfg) XXX_Size() int {
	return xxx_messageInfo_MsgUpdatePropCfg.Size(m)
}
func (m *MsgUpdatePropCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePropCfg.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePropCfg proto.InternalMessageInfo

func (m *MsgUpdatePropCfg) GetPropCfg() string {
	if m != nil && m.PropCfg != nil {
		return *m.PropCfg
	}
	return ""
}

func init() {
	proto.RegisterType((*GameMessage)(nil), "pokerface.GameMessage")
	proto.RegisterType((*MsgCardHand)(nil), "pokerface.MsgCardHand")
	proto.RegisterType((*MsgPlayerCardList)(nil), "pokerface.MsgPlayerCardList")
	proto.RegisterType((*MsgDeal)(nil), "pokerface.MsgDeal")
	proto.RegisterType((*MsgAllowPlayerAction)(nil), "pokerface.MsgAllowPlayerAction")
	proto.RegisterType((*MsgAllowPlayerReAction)(nil), "pokerface.MsgAllowPlayerReAction")
	proto.RegisterType((*MsgPlayerAction)(nil), "pokerface.MsgPlayerAction")
	proto.RegisterType((*MsgActionResultNotify)(nil), "pokerface.MsgActionResultNotify")
	proto.RegisterType((*MsgRestore)(nil), "pokerface.MsgRestore")
	proto.RegisterType((*MsgPlayerScoreGreatWin)(nil), "pokerface.MsgPlayerScoreGreatWin")
	proto.RegisterType((*MsgPlayerScoreMiniWin)(nil), "pokerface.MsgPlayerScoreMiniWin")
	proto.RegisterType((*MsgPlayerScore)(nil), "pokerface.MsgPlayerScore")
	proto.RegisterType((*MsgHandScore)(nil), "pokerface.MsgHandScore")
	proto.RegisterType((*MsgHandOver)(nil), "pokerface.MsgHandOver")
	proto.RegisterType((*MsgUpdateLocation)(nil), "pokerface.MsgUpdateLocation")
	proto.RegisterType((*MsgUpdatePropCfg)(nil), "pokerface.MsgUpdatePropCfg")
	proto.RegisterEnum("pokerface.CardID", CardID_name, CardID_value)
	proto.RegisterEnum("pokerface.MessageCode", MessageCode_name, MessageCode_value)
}

func init() { proto.RegisterFile("game_pokerface.proto", fileDescriptor_3ec282eb57ac7377) }

var fileDescriptor_3ec282eb57ac7377 = []byte{
	// 1403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x76, 0xdb, 0xc4,
	0x13, 0xaf, 0xed, 0xf8, 0x23, 0xe3, 0xaf, 0xc9, 0xc6, 0x49, 0x94, 0xfe, 0xdb, 0x3f, 0xae, 0x0b,
	0xd4, 0x04, 0x48, 0x1b, 0xb7, 0x29, 0x70, 0xc5, 0x71, 0xa5, 0x52, 0xa7, 0x8d, 0xb1, 0xb1, 0xca,
	0x29, 0x77, 0x9c, 0x8d, 0xb5, 0x71, 0x75, 0x22, 0x4b, 0xaa, 0x56, 0x4e, 0x9a, 0x2b, 0x1e, 0x02,
	0xce, 0xe1, 0x21, 0xb8, 0xe3, 0x9e, 0x37, 0xe0, 0x8e, 0xc3, 0x73, 0xf0, 0x0a, 0x9c, 0xdd, 0x91,
	0x92, 0x28, 0x24, 0x3d, 0xdc, 0x70, 0x35, 0x3f, 0xcd, 0xee, 0xcc, 0xfe, 0x66, 0x76, 0x66, 0x47,
	0xd0, 0x9a, 0xf1, 0xb9, 0xf8, 0x3e, 0x0c, 0x8e, 0x44, 0x74, 0xc8, 0xa7, 0x62, 0x3b, 0x8c, 0x82,
	0x38, 0x60, 0xcb, 0x67, 0x8a, 0x4e, 0x17, 0xaa, 0xcf, 0xf8, 0x5c, 0x0c, 0x85, 0x94, 0x7c, 0x26,
	0x58, 0x15, 0x0a, 0xa3, 0x50, 0x1a, 0xb9, 0x76, 0xbe, 0x5b, 0x64, 0x35, 0x58, 0xb2, 0x78, 0xcc,
	0x8d, 0x7c, 0x3b, 0xd7, 0xad, 0x75, 0x7a, 0x50, 0x1d, 0xca, 0x99, 0xc9, 0x23, 0x67, 0xc0, 0x7d,
	0x87, 0xb5, 0xa0, 0x36, 0x4d, 0xf0, 0xcb, 0xd3, 0x50, 0x24, 0x26, 0x75, 0x28, 0x2a, 0xad, 0x34,
	0xf2, 0xed, 0x42, 0xb7, 0xd8, 0xf9, 0x31, 0x07, 0x2b, 0x43, 0x39, 0x1b, 0x7b, 0xfc, 0x54, 0x44,
	0xca, 0x74, 0xdf, 0x95, 0x31, 0x6b, 0x42, 0x79, 0xfa, 0x9a, 0xbb, 0xd1, 0x9e, 0x95, 0x58, 0x6d,
	0x40, 0x53, 0x59, 0x99, 0xc1, 0xc2, 0x8f, 0x47, 0xbe, 0x72, 0x69, 0xe4, 0xf5, 0xc2, 0x2a, 0x54,
	0xb5, 0xbb, 0x44, 0x59, 0x50, 0x4e, 0xd9, 0x36, 0x34, 0x1c, 0x57, 0x2a, 0xbd, 0xd0, 0xc7, 0x4b,
	0x63, 0xa9, 0x5d, 0xe8, 0x56, 0x7b, 0xeb, 0xdb, 0xe7, 0x71, 0x5e, 0x64, 0xda, 0x84, 0xf2, 0xa1,
	0x17, 0x9c, 0x88, 0x48, 0x1a, 0x45, 0xcd, 0xea, 0xf7, 0x1c, 0x94, 0x87, 0x72, 0x66, 0x09, 0xee,
	0xb1, 0x35, 0xa8, 0x1f, 0x70, 0xff, 0x48, 0x44, 0x66, 0x86, 0x51, 0x0b, 0x6a, 0x27, 0xae, 0xef,
	0x7c, 0xa5, 0xed, 0xf6, 0xac, 0x84, 0xce, 0x2e, 0x34, 0xc3, 0x4c, 0x28, 0x52, 0x53, 0xaa, 0xf6,
	0x6e, 0x65, 0x8f, 0xbe, 0x14, 0x6f, 0x1a, 0xc5, 0x9e, 0xff, 0x8a, 0x7b, 0x9e, 0xb1, 0x94, 0x66,
	0xca, 0x71, 0xa7, 0x62, 0xc7, 0x28, 0xb6, 0x73, 0xe7, 0x9f, 0x3d, 0xa3, 0xa4, 0x3f, 0x6f, 0x02,
	0x73, 0xa5, 0x19, 0xf8, 0xb1, 0xeb, 0x2f, 0x82, 0x85, 0x7c, 0xa2, 0x29, 0x1a, 0xe5, 0x76, 0xae,
	0x5b, 0x61, 0x0d, 0x28, 0xcd, 0x79, 0x74, 0xb4, 0x08, 0x8d, 0x8a, 0xda, 0xdb, 0x09, 0xa1, 0x35,
	0x94, 0xb3, 0xbe, 0xe7, 0x05, 0x27, 0x74, 0x70, 0x7f, 0x1a, 0xbb, 0x81, 0xaf, 0xe2, 0x7e, 0xc3,
	0xf7, 0x7c, 0x47, 0xbc, 0x4d, 0x82, 0x5a, 0x83, 0x3a, 0xd7, 0x4b, 0x69, 0xac, 0x14, 0xd5, 0x3a,
	0x34, 0xb8, 0x32, 0x16, 0x0e, 0x19, 0xaa, 0xa0, 0x94, 0xde, 0x00, 0x8c, 0xdd, 0xb9, 0x08, 0x16,
	0xf1, 0x9e, 0x6f, 0x8b, 0x69, 0x40, 0x99, 0x56, 0x27, 0xfe, 0x96, 0x83, 0xf5, 0xec, 0x91, 0x13,
	0xf1, 0x5f, 0x1f, 0xca, 0x36, 0x61, 0x25, 0x8c, 0xc4, 0x71, 0x3f, 0xe3, 0x8c, 0x92, 0xb7, 0x0d,
	0x8d, 0xf3, 0x25, 0x5d, 0x29, 0x2a, 0x8b, 0xd7, 0x56, 0x44, 0x67, 0x0c, 0xcd, 0xb3, 0x5b, 0xba,
	0x8e, 0x77, 0x03, 0x4a, 0xc4, 0x3b, 0x21, 0x5c, 0x87, 0xe2, 0xa1, 0xc7, 0x67, 0x8a, 0x67, 0xee,
	0x62, 0xa1, 0x2f, 0xe9, 0x92, 0xfa, 0x01, 0xd6, 0x54, 0x42, 0xb4, 0xc1, 0x44, 0xc8, 0x85, 0x17,
	0x7f, 0x1d, 0xc4, 0xee, 0xe1, 0xa9, 0x0a, 0x3f, 0xe6, 0xd1, 0x4c, 0xc4, 0xd9, 0xfa, 0xba, 0xec,
	0x7d, 0x0b, 0x80, 0x9f, 0xb3, 0x2f, 0xbc, 0x8b, 0xfd, 0x3f, 0xcb, 0x49, 0x5d, 0xc9, 0x9f, 0x39,
	0x80, 0xa1, 0x9c, 0x4d, 0x84, 0x8c, 0x83, 0x48, 0xb0, 0xbb, 0x50, 0x9e, 0x53, 0x85, 0xeb, 0x03,
	0xab, 0x3d, 0x96, 0x75, 0xa6, 0x6b, 0xff, 0xca, 0x8c, 0xe6, 0xaf, 0xc9, 0xe8, 0xbb, 0x39, 0x6d,
	0x40, 0xd3, 0xe3, 0xbe, 0xe3, 0x05, 0x91, 0x93, 0x3a, 0xa2, 0x5b, 0x43, 0xa8, 0xcc, 0x17, 0x5e,
	0xec, 0x86, 0x9e, 0x48, 0x2e, 0x6b, 0x1d, 0x1a, 0x1e, 0x97, 0x71, 0xff, 0x44, 0x75, 0xbc, 0x4e,
	0x61, 0x49, 0xb7, 0x75, 0x0b, 0x6a, 0xd4, 0x5c, 0x52, 0x35, 0x4d, 0xdf, 0x28, 0xeb, 0xc4, 0xfe,
	0x4c, 0xa5, 0x46, 0x77, 0x65, 0x4f, 0x83, 0x48, 0x3c, 0x8b, 0x04, 0x8f, 0x5f, 0xb9, 0xbe, 0x32,
	0x38, 0xe0, 0x52, 0xbc, 0x72, 0x7d, 0xad, 0x3f, 0xef, 0xdc, 0x59, 0xb2, 0x43, 0xbf, 0x4b, 0x67,
	0xe5, 0x96, 0x6a, 0xc7, 0x81, 0xeb, 0xc7, 0x69, 0xb9, 0xdd, 0x04, 0x16, 0x47, 0xee, 0xfc, 0x59,
	0x76, 0x8d, 0x3a, 0xf4, 0x36, 0xac, 0x4d, 0x2f, 0x75, 0xe0, 0xd3, 0xb7, 0x71, 0xc4, 0x29, 0x8e,
	0xce, 0xaf, 0x39, 0x7d, 0xe7, 0x17, 0x98, 0x0d, 0x5d, 0xdf, 0x55, 0xc4, 0x56, 0xa1, 0x3a, 0x27,
	0x78, 0xe1, 0x65, 0xdc, 0x84, 0x95, 0x44, 0xf9, 0x84, 0x4b, 0x77, 0x4a, 0x94, 0xf3, 0x29, 0x89,
	0x64, 0x89, 0xde, 0x1b, 0x5a, 0x2b, 0xa4, 0xe1, 0xa8, 0xb5, 0x61, 0x9a, 0xc3, 0xa5, 0xb4, 0x4b,
	0xd2, 0x13, 0x22, 0x77, 0x4e, 0xfb, 0x8b, 0xef, 0x26, 0xad, 0xdf, 0x95, 0xce, 0x2f, 0x79, 0x68,
	0x64, 0x49, 0x5f, 0x57, 0xa1, 0x4d, 0x28, 0x9f, 0x64, 0x52, 0x58, 0x87, 0xa2, 0xcc, 0x12, 0x93,
	0xa1, 0x98, 0xba, 0xdc, 0xa3, 0xe3, 0x89, 0xd8, 0x43, 0xa8, 0xa4, 0x79, 0xd6, 0x69, 0xaa, 0xf6,
	0xee, 0x5c, 0xf5, 0x34, 0x66, 0x2f, 0x72, 0x07, 0xca, 0x49, 0x34, 0x49, 0xdf, 0xb6, 0xaf, 0xb5,
	0x49, 0x53, 0xdc, 0x82, 0xda, 0x21, 0x3f, 0x3a, 0xbf, 0xfb, 0x72, 0x5a, 0x6c, 0x4a, 0xab, 0xea,
	0xc7, 0xa8, 0xe8, 0xa2, 0xba, 0xfa, 0x1d, 0x5d, 0xd6, 0xef, 0x68, 0x1b, 0x8c, 0xcb, 0xa9, 0x3a,
	0x4b, 0x33, 0xe8, 0x6c, 0x7d, 0x09, 0xb5, 0xa1, 0x9c, 0xa9, 0x02, 0xa7, 0x54, 0xdd, 0x4f, 0x4b,
	0x54, 0x7f, 0xaa, 0x31, 0xa9, 0x1e, 0xff, 0xcd, 0x6b, 0xd9, 0x76, 0x7e, 0xca, 0xe9, 0xa1, 0xa9,
	0x3c, 0x8c, 0x8e, 0x45, 0xa4, 0x92, 0x2a, 0x32, 0xf3, 0xf2, 0x8a, 0x89, 0x92, 0xff, 0x17, 0x13,
	0xe5, 0x1e, 0x94, 0x24, 0x51, 0xa0, 0xb6, 0xdc, 0xc8, 0xee, 0x3e, 0x67, 0xac, 0xa6, 0x34, 0xc5,
	0x28, 0xfa, 0x07, 0xba, 0x7c, 0x72, 0xdd, 0x4a, 0x67, 0x57, 0x4f, 0xe5, 0x6f, 0x43, 0x87, 0xc7,
	0x62, 0x3f, 0x98, 0x72, 0xfd, 0x02, 0x36, 0xa0, 0xb4, 0x90, 0x22, 0x2d, 0x80, 0x65, 0x95, 0x4c,
	0x2f, 0x59, 0xd3, 0x15, 0xb0, 0xdc, 0xb9, 0x0b, 0x78, 0x66, 0x36, 0x8e, 0x82, 0xd0, 0x3c, 0x9c,
	0xa9, 0x88, 0x42, 0x82, 0x64, 0xb6, 0xf5, 0x57, 0x01, 0x4a, 0x8a, 0xe7, 0x9e, 0xc5, 0xca, 0x50,
	0x98, 0xf4, 0x06, 0x78, 0x83, 0x80, 0x85, 0x39, 0x02, 0x26, 0xe6, 0x09, 0xd8, 0x58, 0xd0, 0xe0,
	0xe1, 0x00, 0x97, 0x08, 0x58, 0x58, 0x24, 0x60, 0x62, 0x89, 0x80, 0x8d, 0x65, 0x0d, 0x1e, 0x0d,
	0xb0, 0x42, 0xc0, 0xc2, 0x65, 0x02, 0x26, 0x02, 0x01, 0x1b, 0xab, 0x1a, 0xec, 0x0e, 0xb0, 0x46,
	0xc0, 0xc2, 0x3a, 0x01, 0x13, 0x1b, 0x04, 0x6c, 0x6c, 0x6a, 0xf0, 0x78, 0x80, 0x48, 0xc0, 0xc2,
	0x15, 0x02, 0x26, 0x32, 0x02, 0x36, 0xae, 0x6a, 0xf0, 0xd9, 0x00, 0x5b, 0x04, 0x2c, 0x5c, 0x23,
	0x60, 0xe2, 0x3a, 0x01, 0x1b, 0x37, 0x34, 0xf8, 0x7c, 0x80, 0x06, 0x01, 0x0b, 0x37, 0x09, 0x98,
	0x78, 0x93, 0x80, 0x8d, 0xff, 0xd3, 0xe0, 0x8b, 0x01, 0xde, 0x22, 0x60, 0xe1, 0x6d, 0x02, 0x26,
	0xfe, 0x9f, 0x80, 0x8d, 0xef, 0xb1, 0x0a, 0x2c, 0x4d, 0x76, 0x1e, 0x0c, 0xb0, 0x9d, 0x20, 0x0b,
	0xef, 0x24, 0xc8, 0xc4, 0x4e, 0x82, 0x6c, 0xbc, 0xcb, 0x4a, 0x90, 0x7f, 0x3e, 0xc0, 0xf7, 0xb5,
	0xb4, 0xf0, 0x03, 0x2d, 0x4d, 0xfc, 0x50, 0x4b, 0x1b, 0xef, 0x29, 0xf9, 0xcd, 0x00, 0xbb, 0x5a,
	0x5a, 0xf8, 0x91, 0x96, 0x26, 0x6e, 0x69, 0x69, 0xe3, 0xc7, 0x4a, 0xbe, 0x18, 0xe0, 0x27, 0x5a,
	0x5a, 0xf8, 0xa9, 0x96, 0x26, 0x6e, 0x6b, 0x69, 0xe3, 0x7d, 0x25, 0xfb, 0x03, 0x7c, 0xa0, 0xa5,
	0x85, 0x3b, 0x5a, 0x9a, 0xd8, 0xd3, 0xd2, 0xc6, 0x87, 0x8a, 0xf0, 0xf3, 0xd1, 0x13, 0x7c, 0x44,
	0x60, 0x82, 0xbb, 0xac, 0x0a, 0x65, 0xb3, 0x3f, 0xb1, 0x86, 0xfd, 0xef, 0xf0, 0xf1, 0xd6, 0x1f,
	0x05, 0xa8, 0x26, 0xff, 0x8f, 0x66, 0xe0, 0x08, 0x56, 0x87, 0xe5, 0xd1, 0x78, 0xcf, 0x3f, 0xe6,
	0x9e, 0xeb, 0xe0, 0x0d, 0x56, 0x83, 0xca, 0x68, 0x4c, 0x83, 0x04, 0x73, 0xcc, 0x80, 0x56, 0xfa,
	0x75, 0x71, 0x4e, 0x62, 0x9e, 0xad, 0x42, 0x33, 0x5d, 0xe9, 0xd3, 0x9f, 0x01, 0x16, 0xd8, 0x1a,
	0xac, 0x8c, 0xc6, 0xe9, 0xcf, 0x45, 0xaa, 0x2e, 0x32, 0x80, 0xd2, 0x68, 0xac, 0x66, 0x18, 0x96,
	0x58, 0x03, 0x60, 0x34, 0x4e, 0x3b, 0x0c, 0xcb, 0x74, 0x7c, 0x32, 0x07, 0xb1, 0x42, 0x1e, 0xa8,
	0x7d, 0xf6, 0x05, 0x3f, 0x16, 0x93, 0x20, 0x98, 0xe3, 0xf2, 0x45, 0xf5, 0x53, 0x3f, 0x16, 0x91,
	0x56, 0x03, 0x6b, 0x01, 0x8e, 0xc6, 0x96, 0x2b, 0x0f, 0xb8, 0xef, 0x4c, 0xc4, 0x9b, 0x85, 0x90,
	0x31, 0x56, 0x89, 0x5a, 0xa2, 0x4d, 0xf8, 0xd6, 0x32, 0xca, 0xbe, 0x2f, 0x4f, 0x44, 0x84, 0x75,
	0xb6, 0x02, 0xf5, 0xd4, 0xed, 0x44, 0x70, 0xe7, 0x14, 0x1b, 0xa4, 0x52, 0xee, 0x2d, 0xe1, 0x89,
	0x58, 0x38, 0xd8, 0x64, 0x08, 0x35, 0x52, 0x51, 0x2f, 0x21, 0x32, 0x06, 0x0d, 0xd2, 0xd8, 0xaf,
	0x83, 0x93, 0x97, 0x6e, 0x28, 0x71, 0x85, 0x02, 0x53, 0x3f, 0xe7, 0x3a, 0x30, 0x46, 0x81, 0xbd,
	0x70, 0xa7, 0x47, 0xc1, 0x22, 0xc6, 0x55, 0xca, 0xab, 0x15, 0xf8, 0xca, 0x41, 0x8b, 0x88, 0x67,
	0x3b, 0x1a, 0xd7, 0x68, 0x4f, 0x6f, 0x3f, 0x38, 0x38, 0x38, 0xc5, 0x75, 0x62, 0x9c, 0x69, 0x5f,
	0xdc, 0xa0, 0x54, 0x8e, 0x5d, 0x7f, 0x86, 0x4e, 0x82, 0x03, 0x7f, 0x86, 0xe2, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x12, 0xf0, 0xde, 0x88, 0x3a, 0x0c, 0x00, 0x00,
}
